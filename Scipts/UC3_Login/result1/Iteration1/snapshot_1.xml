<?xml version="1.0" encoding="utf-8"?>
<HTTPSnapshot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="1">
  <HTTPTask id="1" hostname="www.advantageonlineshopping.com" path="/" url="https://www.advantageonlineshopping.com/" ip="54.227.55.203" port="443" client_ip="192.168.1.36" client_port="7777" connectionId="2084" origin="Primary" encodingType="ANSI" startDateTime="2024-03-10T01:41:10.972+03:00" startTime="150" endTime="705" blockedTime="-1" dnsTime="0" connectTime="273" sendTime="4294967295" waitTime="4294967295" receiveTime="2" sslNegotiateTime="138" responseBodySize="3171">
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name=":method" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VU</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name=":scheme" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cHM=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name=":path" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Lw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name=":authority" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>d3d3LmFkdmFudGFnZW9ubGluZXNob3BwaW5nLmNvbQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Sec-Fetch-User" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>PzE=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Upgrade-Insecure-Requests" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Sec-Fetch-Dest" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZG9jdW1lbnQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Sec-Fetch-Mode" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bmF2aWdhdGU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Sec-Fetch-Site" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm9uZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="DNT" index="9">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="10">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgMTAuMDsgV2luZG93cyBOVCA2LjE7IFRyaWRlbnQvNi4wKQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="11">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept" index="12">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ki8q</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Om1ldGhvZDogR0VUDQo6c2NoZW1lOiBodHRwcw0KOnBhdGg6IC8NCjphdXRob3JpdHk6IHd3dy5hZHZhbnRhZ2VvbmxpbmVzaG9wcGluZy5jb20NClNlYy1GZXRjaC1Vc2VyOiA/MQ0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUZldGNoLURlc3Q6IGRvY3VtZW50DQpTZWMtRmV0Y2gtTW9kZTogbmF2aWdhdGUNClNlYy1GZXRjaC1TaXRlOiBub25lDQpETlQ6IDENClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBNU0lFIDEwLjA7IFdpbmRvd3MgTlQgNi4xOyBUcmlkZW50LzYuMCkNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCg0K</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPPropertySet>
        <HTTPProperty name="StreamID">1</HTTPProperty>
        <HTTPProperty name="TotalHeadersSize">188</HTTPProperty>
      </HTTPPropertySet>
    </HTTPRequest>
    <HTTPResponse>
      <contentLenght>0</contentLenght>
      <HTTPHeaders>
        <HTTPHeaderEntity name="Status" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MjAw</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="server" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bmdpbngvMS4xOC4wIChVYnVudHUp</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="date" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>U2F0LCAwOSBNYXIgMjAyNCAyMjo0MToxMSBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="content-type" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>dGV4dC9odG1s</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="accept-ranges" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ynl0ZXM=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="etag" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Vy8iMTExMjAtMTcwNzkwMjc1MjAwMCI=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="last-modified" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>V2VkLCAxNCBGZWIgMjAyNCAwOToyNTo1MiBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="cache-control" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bWF4LWFnZT0w</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="expires" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>U2F0LCAwOSBNYXIgMjAyNCAyMjo0MToxMSBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="vary" index="9">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YWNjZXB0LWVuY29kaW5n</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="content-encoding" index="10">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="strict-transport-security" index="11">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bWF4LWFnZT0zMTUzNjAwMDsgaW5jbHVkZVN1YkRvbWFpbnM7IHByZWxvYWQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8yLjAgMjAwDQpTdGF0dXM6IDIwMA0Kc2VydmVyOiBuZ2lueC8xLjE4LjAgKFVidW50dSkNCmRhdGU6IFNhdCwgMDkgTWFyIDIwMjQgMjI6NDE6MTEgR01UDQpjb250ZW50LXR5cGU6IHRleHQvaHRtbA0KYWNjZXB0LXJhbmdlczogYnl0ZXMNCmV0YWc6IFcvIjExMTIwLTE3MDc5MDI3NTIwMDAiDQpsYXN0LW1vZGlmaWVkOiBXZWQsIDE0IEZlYiAyMDI0IDA5OjI1OjUyIEdNVA0KY2FjaGUtY29udHJvbDogbWF4LWFnZT0wDQpleHBpcmVzOiBTYXQsIDA5IE1hciAyMDI0IDIyOjQxOjExIEdNVA0KdmFyeTogYWNjZXB0LWVuY29kaW5nDQpjb250ZW50LWVuY29kaW5nOiBnemlwDQpzdHJpY3QtdHJhbnNwb3J0LXNlY3VyaXR5OiBtYXgtYWdlPTMxNTM2MDAwOyBpbmNsdWRlU3ViRG9tYWluczsgcHJlbG9hZA0KDQo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>PCFET0NUWVBFIGh0bWwgPgo8aHRtbCBsYW5nPSJlbiI+CjxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0idXRmLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MSI+CiAgICA8bWV0YSBuYW1lPSJkZXNjcmlwdGlvbiIgY29udGVudD0iIj4KICAgIDxtZXRhIG5hbWU9ImF1dGhvciIgY29udGVudD0iIj4KICAgIDxsaW5rIHJlbD0ic2hvcnRjdXQgaWNvbiIgaHJlZj0iY3NzL2ltYWdlcy9mYXZpY29uLmljbyI+CiAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCAgaW5pdGlhbC1zY2FsZT0xLjAsIG1pbmltdW0tc2NhbGU9MS4wLCBtYXhpbXVtLXNjYWxlPTEuMCIvPgogICAgPHRpdGxlPiZuYnNwO0FkdmFudGFnZSBTaG9wcGluZzwvdGl0bGU+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9ImNzcy9tYWluLm1pbi5jc3MiPgogICAgPCEtLTxzY3JpcHQ+LS0+CiAgICAgICAgPCEtLShmdW5jdGlvbihpLHMsbyxnLHIsYSxtKXtpWydHb29nbGVBbmFseXRpY3NPYmplY3QnXT1yO2lbcl09aVtyXXx8ZnVuY3Rpb24oKXsoaVtyXS5xPWlbcl0ucXx8W10pLnB1c2goYXJndW1lbnRzKX0saVtyXS5sPTEqbmV3IERhdGUoKTthPXMuY3JlYXRlRWxlbWVudChvKSwtLT4KICAgICAgICAgICAgICAgIDwhLS1tPXMuZ2V0RWxlbWVudHNCeVRhZ05hbWUobylbMF07YS5hc3luYz0xO2Euc3JjPWc7bS5wYXJlbnROb2RlLmluc2VydEJlZm9yZShhLG0pfSkod2luZG93LGRvY3VtZW50LCdzY3JpcHQnLCdodHRwczovL3d3dy5nb29nbGUtYW5hbHl0aWNzLmNvbS9hbmFseXRpY3MuanMnLCdnYScpOy0tPgogICAgICAgIDwhLS1nYSgnY3JlYXRlJywgJ1VBLTgxMzM0MjI3LTEnLCAnYXV0bycpO2dhKCdzZW5kJywgJ3BhZ2V2aWV3Jyk7LS0+CiAgICA8IS0tPC9zY3JpcHQ+LS0+CiAgICA8c2NyaXB0IGFzeW5jIHNyYz0iaHR0cHM6Ly93d3cuZ29vZ2xldGFnbWFuYWdlci5jb20vZ3RhZy9qcz9pZD1HLVRCUFlFRDhXU1ciPjwvc2NyaXB0PgogICAgPHNjcmlwdD4KICAgICAgICB3aW5kb3cuZGF0YUxheWVyID0gd2luZG93LmRhdGFMYXllciB8fCBbXTsKICAgICAgICBmdW5jdGlvbiBndGFnKCl7ZGF0YUxheWVyLnB1c2goYXJndW1lbnRzKTt9CiAgICAgICAgZ3RhZygnanMnLCBuZXcgRGF0ZSgpKTsKCiAgICAgICAgZ3RhZygnY29uZmlnJywgJ0ctVEJQWUVEOFdTVycpOwogICAgPC9zY3JpcHQ+CjwvaGVhZD4KCjxib2R5IGRhdGEtbmctY29udHJvbGxlcj0ibWFpbkN0cmwgYXMgbWFpbkN0cmwiIGRhdGEtbmctY2xvYWs+CjwhLS08ZGl2IGlkPSJ0ZWFtIiBkYXRhLW5nLWNsaWNrPSJtYWluQ3RybC5jbG9zZUltZ1RlYW0oKSI+LS0+CiAgICA8IS0tPGRpdiBjbGFzcz0iY29udGFpbmVyIj4tLT4KICAgICAgICA8IS0tPGRpdiBjbGFzcz0iaW1nIj4tLT4KICAgICAgICAgICAgPCEtLTxkaXYgaWQ9InRlYW1JZFRvQW5pbWF0ZSIgY2xhc3M9ImFuaW1hdGVkIj4tLT4KICAgICAgICAgICAgICAgIDwhLS08aW1nIHNyYz0iLi4vLi4vY3NzL2ltYWdlcy9BZHZhbnRhZ2Vfb25saW5lX3Nob3BwaW5nX3RlYW0uanBnIiBhbHQ9InRlYW0iPi0tPgogICAgICAgICAgICA8IS0tPC9kaXY+LS0+CiAgICAgICAgPCEtLTwvZGl2Pi0tPgogICAgPCEtLTwvZGl2Pi0tPgo8IS0tPC9kaXY+LS0+Cgo8ZGl2IGNsYXNzPSJ3YWl0QmFja2dyb3VuZF8yIj4KICAgIDxkaXY+CiAgICAgICAgPCEtLQogICAgICAgIDxzdmcgdmVyc2lvbj0iMS4xIiBpZD0iTGF5ZXJfMSIKICAgICAgICAgICAgIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKICAgICAgICAgICAgIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIgogICAgICAgICAgICAgeD0iMHB4IiB5PSIwcHgiCiAgICAgICAgICAgICB3aWR0aD0iMjUwcHgiIGhlaWdodD0iMjUwcHgiIHZpZXdCb3g9IjAgMCAzMCA0NSIgZW5hYmxlLWJhY2tncm91bmQ9Im5ldyAwIDAgNDUgNDUiIHhtbDpzcGFjZT0icHJlc2VydmUiPgogICAgICAgICAgICAgICAgPHBhdGggZmlsbD0iIzU0QjNBRCIgZD0iTTIxLDMzaC02Yy0xLjEsMC0yLTEuMS0yLTIuMlY3aDIuOWMwLjcsMCwxLjMsMC40LDEuNiwxLjFsMTIuOSwzNS4yYzAuNCwxLDEuNiwxLjYsMi42LDEuNmg1TDIyLDEuOAogICAgICAgICAgICAgICAgICAgIEMyMS42LDAuNywyMS4xLDAsMjAsMEg2djM0LjFjMCwzLjMsMS40LDUuOSw1LDUuOWgxNGwtMS4zLTUuNkMyMy40LDMzLjQsMjIsMzMsMjEsMzN6Ii8+CiAgICAgICAgPC9zdmc+LS0+CiAgICA8L2Rpdj4KPC9kaXY+Cgo8ZGl2IGNsYXNzPSJsb2FkZXIiPgogICAgPGRpdj4KICAgICAgICA8c3ZnIHdpZHRoPSI1MCIgaGVpZ2h0PSI1MCIgdmlld0JveD0iMCAwIDUwIDUwIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciPgogICAgICAgICAgICA8ZGVmcz4KICAgICAgICAgICAgICAgIDxsaW5lYXJHcmFkaWVudCB4MT0iOC4wNDIlIiB5MT0iMCUiIHgyPSI2NS42ODIlIiB5Mj0iMjMuODY1JSIgaWQ9ImEiPgogICAgICAgICAgICAgICAgICAgIDxzdG9wIHN0b3AtY29sb3I9IiM1NEIzQUQiIHN0b3Atb3BhY2l0eT0iMCIgb2Zmc2V0PSIwJSIvPgogICAgICAgICAgICAgICAgICAgIDxzdG9wIHN0b3AtY29sb3I9IiM1NEIzQUQiIHN0b3Atb3BhY2l0eT0iLjYzMSIgb2Zmc2V0PSI2My4xNDYlIi8+CiAgICAgICAgICAgICAgICAgICAgPHN0b3Agc3RvcC1jb2xvcj0iIzU0QjNBRCIgb2Zmc2V0PSIxMDAlIi8+CiAgICAgICAgICAgICAgICA8L2xpbmVhckdyYWRpZW50PgogICAgICAgICAgICA8L2RlZnM+CiAgICAgICAgICAgIDxnIGZpbGw9Im5vbmUiIGZpbGwtcnVsZT0iZXZlbm9kZCI+CiAgICAgICAgICAgICAgICA8ZyB0cmFuc2Zvcm09InRyYW5zbGF0ZSgxIDEpIj4KICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMzYgMThjMC05Ljk0LTguMDYtMTgtMTgtMTgiIGlkPSJPdmFsLTIiIHN0cm9rZT0idXJsKCNhKSIgc3Ryb2tlLXdpZHRoPSIyIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGFuaW1hdGVUcmFuc2Zvcm0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyaWJ1dGVOYW1lPSJ0cmFuc2Zvcm0iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT0icm90YXRlIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZyb209IjAgMTggMTgiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG89IjM2MCAxOCAxOCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkdXI9IjAuOXMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVwZWF0Q291bnQ9ImluZGVmaW5pdGUiLz4KICAgICAgICAgICAgICAgICAgICA8L3BhdGg+CiAgICAgICAgICAgICAgICAgICAgPGNpcmNsZSBmaWxsPSIjNTRCM0FEIiBjeD0iMzYiIGN5PSIxOCIgcj0iMSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhbmltYXRlVHJhbnNmb3JtCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cmlidXRlTmFtZT0idHJhbnNmb3JtIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9InJvdGF0ZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmcm9tPSIwIDE4IDE4IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvPSIzNjAgMTggMTgiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZHVyPSIwLjlzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcGVhdENvdW50PSJpbmRlZmluaXRlIi8+CiAgICAgICAgICAgICAgICAgICAgPC9jaXJjbGU+CiAgICAgICAgICAgICAgICA8L2c+CiAgICAgICAgICAgIDwvZz4KICAgICAgICA8L3N2Zz4KICAgIDwvZGl2Pgo8L2Rpdj4KCjxsb2dpbi1tb2RhbD48L2xvZ2luLW1vZGFsPgoKPHNwYW4gY2xhc3M9Im1vYmlsZVRpdGxlIj4KICAgIDxkaXYgY2xhc3M9Im1pbmktdGl0bGUiIGlkPSJsb2dpbk1vYmlsZU1pbmlUaXRsZSI+CiAgICAgICAgPGxhYmVsIGNsYXNzPSJvcHRpb24iIHRyYW5zbGF0ZT0iTXlfYWNjb3VudCIgbmctY2xpY2s9ImFjY291bnRTZWN0aW9uKCkiPjwvbGFiZWw+CiAgICAgICAgPGxhYmVsIGNsYXNzPSJvcHRpb24iIHRyYW5zbGF0ZT0iTXlfT3JkZXJzIiBuZy1jbGljaz0ibW9iaWxlUmVkaXJlY3QoJ015T3JkZXJzJykiPjwvbGFiZWw+CiAgICAgICAgPGxhYmVsIGNsYXNzPSJvcHRpb24iIHRyYW5zbGF0ZT0iU2lnbl9vdXQiIG5nLWNsaWNrPSJzaWduT3V0KCkiPjwvbGFiZWw+CiAgICA8L2Rpdj4KPC9zcGFuPgoKPHNwYW4gY2xhc3M9Im1vYmlsZVRpdGxlIj4KICAgIDxkaXYgY2xhc3M9Im1pbmktdGl0bGUtaGVscCBtaW5pLXRpdGxlLWhlbHAtbW9iaWxlIiBpZD0iaGVscE1vYmlsZU1pbmlUaXRsZSI+CiAgICAgICAgPGxhYmVsIGNsYXNzPSJvcHRpb24iIHRyYW5zbGF0ZT0iQUJPVVQiIG5nLWNsaWNrPSJtb2JpbGVSZWRpcmVjdEhlbHAoJ2Fib3V0JykiPjwvbGFiZWw+CiAgICAgICAgPGxhYmVsIGNsYXNzPSJvcHRpb24iIHRyYW5zbGF0ZT0iQU9TX1ZFUlNJT05TIiBuZy1jbGljaz0ibW9iaWxlUmVkaXJlY3RIZWxwKCd2ZXJzaW9uJykiPjwvbGFiZWw+CiAgICAgICAgPGxhYmVsIGNsYXNzPSJvcHRpb24iIHRyYW5zbGF0ZT0iQ09ORklHX1RPT0wiIG5nLWNsaWNrPSJvcGVuQWRtaW5DbGllbnQoKSI+PC9sYWJlbD4KICAgIDwvZGl2Pgo8L3NwYW4+Cgo8YXNpZGUgaWQ9Im1vYmlsZS1zZWN0aW9uIiBkYXRhLW5nLWNsb2FrPgogICAgPHVsPgogICAgICAgIDxsaSBkYXRhLW5nLWNsaWNrPSJtb2JpbGVSZWRpcmVjdCgnZGVmYXVsdCcpIj4KICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApIiByb2xlPSJsaW5rIiBjbGFzcz0iaW1nIj4KICAgICAgICAgICAgICAgIDxkaXYgaWNvbi1ob21lLXN2Zy1tb2JpbGU+PC9kaXY+CiAgICAgICAgICAgIDwvYT4KICAgICAgICA8L2xpPgogICAgICAgIDxsaSBkYXRhLW5nLWNsaWNrPSJtb2JpbGVSZWRpcmVjdCgnc2hvcHBpbmdDYXJ0JykiPgogICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCkiIHJvbGU9ImxpbmsiIGNsYXNzPSJpbWciPgogICAgICAgICAgICAgICAgPGRpdiBpY29uLWNhcnQtc3ZnLW1vYmlsZT48L2Rpdj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjYXJ0IiBuZy1zaG93PSIoY2FydCB8IHByb2R1Y3RzQ2FydENvdW50KSA+IDAiPnt7IGNhcnQgfCBwcm9kdWN0c0NhcnRDb3VudCB9fTwvc3Bhbj4KICAgICAgICAgICAgPC9hPgogICAgICAgIDwvbGk+CiAgICAgICAgPGxpIGNsYXNzPSJwb2ludGVyIiBkYXRhLW5nLWNsaWNrPSJsb2dpbignbG9naW5Nb2JpbGVNaW5pVGl0bGUnKSI+CiAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIgcm9sZT0ibGluayIgY2xhc3M9ImltZyBjZW50ZXIiPgogICAgICAgICAgICAgICAgPGRpdiBpY29uLXVzZXItc3ZnLW1vYmlsZT48L2Rpdj4KICAgICAgICAgICAgICAgIDxzcGFuIGRhdGEtbmctc2hvdz0idXNlckNvb2tpZS5yZXNwb25zZSIgY2xhc3M9ImhpLXVzZXIiPnt7dXNlckNvb2tpZS5uYW1lfX08L3NwYW4+CiAgICAgICAgICAgIDwvYT4KICAgICAgICA8L2xpPgogICAgPC91bD4KPC9hc2lkZT4KCjwhLS0gZW5kIG1vYmlsZSBzbGlkZXIgLS0+CgoKCgo8IS0tIG5hdmlnYXRpb24gLS0+Cgo8aGVhZGVyIG5nLXNob3c9IndlbGNvbWUiIGRhdGEtbmctY2xvYWs+CiAgICA8bmF2PgogICAgICAgIDx1bCBjbGFzcz0icm9ib3RvLWxpZ2h0IGRlc2t0b3AtaGFuZGxlciIgPgogICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICA8YSBpZD0iaGVscExpbmsiIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIgcm9sZT0ibGluayIgY2xhc3M9ImltZyIgZGF0YS1uZy1jbGljaz0iaGVscCgnaGVscE1pbmlUaXRsZScpIgogICAgICAgICAgICAgICAgICAgZGF0YS1uZy1tb3VzZWVudGVyPSJtaW5pVGl0bGVJbignaGVscE1pbmlUaXRsZScpIgogICAgICAgICAgICAgICAgICAgZGF0YS1uZy1tb3VzZWxlYXZlPSJtaW5pVGl0bGVPdXQoJ2hlbHBNaW5pVGl0bGUnKSI+CgogICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSIuLi8uLi9jc3MvaW1hZ2VzL0Rvd25fYXJyb3cuc3ZnIiB3aWR0aD0iMTJweCI7IGhlaWdodD0iN3B4Ijs+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBpY29uLWhlbHAtc3ZnPjwvZGl2PgoKICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJoZWxwTWluaVRpdGxlIiBjbGFzcz0ibWluaS10aXRsZS1oZWxwIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJvcHRpb24gcm9ib3RvLW1lZGl1bSIgdHJhbnNsYXRlPSJBQk9VVCIgbmctY2xpY2s9Im1vYmlsZVJlZGlyZWN0SGVscCgnYWJvdXQnKSIgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApIiByb2xlPSJsaW5rIj48L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9Im9wdGlvbiIgdHJhbnNsYXRlPSJBT1NfVkVSU0lPTlMiIG5nLWNsaWNrPSJtb2JpbGVSZWRpcmVjdEhlbHAoJ3ZlcnNpb24nKSIgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApIiByb2xlPSJsaW5rIj48L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9Im9wdGlvbiIgdHJhbnNsYXRlPSJDT05GSUdfVE9PTCIgbmctY2xpY2s9Im9wZW5BZG1pbkNsaWVudCgpIiBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCkiIHJvbGU9ImxpbmsiPjwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgIDxsaSBkYXRhLW5nLW1vdXNlZW50ZXI9ImVudGVyQ2FydCgpIiBkYXRhLW5nLW1vdXNlbGVhdmU9ImxlYXZlQ2FydCgpIj4KICAgICAgICAgICAgICAgIDxhIGlkPSJzaG9wcGluZ0NhcnRMaW5rIiBhcmlhLWxhYmVsPSJTaG9wcGluZ0NhcnQiIGNsYXNzPSJpbWciIGhyZWY9IiMvc2hvcHBpbmdDYXJ0IiByb2xlPSJsaW5rIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGljb24tY2FydC1zdmc+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNhcnQiIG5nLXNob3c9IihjYXJ0IHwgcHJvZHVjdHNDYXJ0Q291bnQpID4gMCI+e3sgY2FydCB8IHByb2R1Y3RzQ2FydENvdW50IH19PC9zcGFuPgogICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgICAgIDxsaSBzdHlsZT0icG9zaXRpb246IHJlbGF0aXZlOyBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0b29sLXRpcC1jYXJ0IGlkPSJ0b29sVGlwQ2FydCI+PC90b29sLXRpcC1jYXJ0PgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICA8L2xpPgogICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICA8YSBpZD0ibWVudVVzZXJMaW5rIiBhcmlhLWxhYmVsPSJVc2VyTWVudSIgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApIiByb2xlPSJsaW5rIiBjbGFzcz0iaW1nIiBkYXRhLW5nLWNsaWNrPSJsb2dpbignbG9naW5NaW5pVGl0bGUnKSIKICAgICAgICAgICAgICAgICAgIGRhdGEtbmctbW91c2VlbnRlcj0ibWluaVRpdGxlSW4oJ2xvZ2luTWluaVRpdGxlJykiCiAgICAgICAgICAgICAgICAgICBkYXRhLW5nLW1vdXNlbGVhdmU9Im1pbmlUaXRsZU91dCgnbG9naW5NaW5pVGl0bGUnKSI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gZGF0YS1uZy1zaG93PSJ1c2VyQ29va2llLnJlc3BvbnNlIiBjbGFzcz0iaGktdXNlciBjb250YWluTWluaVRpdGxlIj57e3VzZXJDb29raWUubmFtZX19PC9zcGFuPjxkaXYgaWNvbi11c2VyLXN2Zz48L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtaW5pLXRpdGxlIiBpZD0ibG9naW5NaW5pVGl0bGUiPgogICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9Im9wdGlvbiByb2JvdG8tbWVkaXVtIiB0cmFuc2xhdGU9Ik15X2FjY291bnQiIG5nLWNsaWNrPSJhY2NvdW50U2VjdGlvbigpIiBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCkiIHJvbGU9ImxpbmsiPjwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0ib3B0aW9uIiB0cmFuc2xhdGU9Ik15X09yZGVycyIgbmctY2xpY2s9Im1vYmlsZVJlZGlyZWN0KCdNeU9yZGVycycpIiBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCkiIHJvbGU9ImxpbmsiPjwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0ib3B0aW9uIHJvYm90by1tZWRpdW0iIHRyYW5zbGF0ZT0iU2lnbl9vdXQiIG5nLWNsaWNrPSJzaWduT3V0KCRldmVudCkiIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIgcm9sZT0ibGluayI+PC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgPGEgY2xhc3M9ImltZyI+CiAgICAgICAgICAgICAgICAgICAgPHNlYXJjaCB0b29sLXRpcC1zZWFyY2g+PC9zZWFyY2g+CiAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgIDxsaSBjbGFzcz0ibmF2LWxpLUxpbmtzIj4KICAgICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIgcm9sZT0ibGluayIgbmctY2xpY2s9ImdvdG9FbGVtZW50KCdjb250YWN0X3VzJykiIGNsYXNzPSJtZW51IG5hdkxpbmtzIHJvYm90by1yZWd1bGFyIiB0cmFuc2xhdGU9IkNPTlRBQ1RfVVMiPjwvYT4KICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgPGxpIGNsYXNzPSJuYXYtbGktTGlua3MiPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApIiByb2xlPSJsaW5rIiBjbGFzcz0ibWVudSBuYXZMaW5rcyByb2JvdG8tcmVndWxhciIgbmctY2xpY2s9ImdvdG9FbGVtZW50KCdwb3B1bGFyX2l0ZW1zJykiCiAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGU9IlBPUFVMQVJfSVRFTVMiPjwvYT4KICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgPGxpIGNsYXNzPSJuYXYtbGktTGlua3MiPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApIiByb2xlPSJsaW5rIiBjbGFzcz0ibWVudSBuYXZMaW5rcyByb2JvdG8tcmVndWxhciIgbmctY2xpY2s9ImdvdG9FbGVtZW50KCdzcGVjaWFsX29mZmVyX2l0ZW1zJykiCiAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGU9IlNQQUNJQUxfT0ZGRVIiPjwvYT4KICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgPGxpIGNsYXNzPSJuYXYtbGktTGlua3MiPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApIiByb2xlPSJsaW5rIiBjbGFzcz0ibWVudSBuYXZMaW5rcyByb2JvdG8tcmVndWxhciIgbmctY2xpY2s9ImdvdG9FbGVtZW50KCdvdXJfcHJvZHVjdHMnKSIKICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0ZT0iT1VSX1BST0RVQ1RTIj48L2E+CiAgICAgICAgICAgIDwvbGk+CgogICAgICAgIDwvdWw+CiAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI+CiAgICAgICAgICAgIDxhIGhyZWY9IiMvIiByb2xlPSJsaW5rIiBuZy1jbGljaz0iZ29fdXAoKSI+CiAgICAgICAgICAgICAgICA8IS0tPGltZyBzcmM9ImNzcy9pbWFnZXMvbG9nby5wbmciLz4tLT4KICAgICAgICAgICAgICAgIDxzdmcgdmVyc2lvbj0iMS4xIiBpZD0iTGF5ZXJfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiCiAgICAgICAgICAgICAgICAgICAgIHdpZHRoPSI0NXB4IiBoZWlnaHQ9IjQ1cHgiIHZpZXdCb3g9IjAgMCAzMCA0NSIgZW5hYmxlLWJhY2tncm91bmQ9Im5ldyAwIDAgNDUgNDUiIHhtbDpzcGFjZT0icHJlc2VydmUiPgogICAgICAgICAgICAgICAgICAgIDxwYXRoIGZpbGw9IiM1NEIzQUQiIGQ9Ik0yMSwzM2gtNmMtMS4xLDAtMi0xLjEtMi0yLjJWN2gyLjljMC43LDAsMS4zLDAuNCwxLjYsMS4xbDEyLjksMzUuMmMwLjQsMSwxLjYsMS42LDIuNiwxLjZoNUwyMiwxLjgKICAgICAgICAgICAgICAgICAgICAgICAgQzIxLjYsMC43LDIxLjEsMCwyMCwwSDZ2MzQuMWMwLDMuMywxLjQsNS45LDUsNS45aDE0bC0xLjMtNS42QzIzLjQsMzMuNCwyMiwzMywyMSwzM3oiLz4KICAgICAgICAgICAgICAgIDwvc3ZnPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InJvYm90by1tZWRpdW0iPnt7J2R2YW50YWdlJyB8IHRyYW5zbGF0ZX19PC9zcGFuPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImxvZ29EZW1vIHJvYm90by1saWdodCI+e3snREVNTycgfCB0cmFuc2xhdGV9fTwvc3Bhbj4KICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgPGRpdiBpZD0ibW9iaWxlLWJ0biIgY2xhc3M9Im1vYmlsZS1idG4taGFuZGxlciIgbmctY2xpY2s9Im9wZW5Nb2JpbGVTZWN0aW9uKCkiPgogICAgICAgICAgICAgICAgPHNwYW4+PC9zcGFuPjxzcGFuPjwvc3Bhbj48c3Bhbj48L3NwYW4+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9uYXY+CiAgICA8dG9hc3Rlci1jb250YWluZXIgdG9hc3Rlci1vcHRpb25zPSJ7J3RpbWUtb3V0JzogNTAwMCwgfSIgdG9hc3Rlci1vcHRpb25zPSJ7fSI+PC90b2FzdGVyLWNvbnRhaW5lcj4KPC9oZWFkZXI+Cgo8IS0tIGVuZCBuYXZpZ2F0aW9uICIgbmctc2hvdz0iY2FydENvdW50ICE9IDAgLS0+Cgo8ZGl2IGNsYXNzPSJ1aXZpZXciIHVpLXZpZXc+PC9kaXY+Cgo8ZGl2IHZpcnR1YWwtZm9vdGVyPjwvZGl2PgoKCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBkYXRhLW1haW49Im1haW4ubWluIiBzcmM9InZlbmRvci9yZXF1aXJlanMvcmVxdWlyZS5qcyI+PC9zY3JpcHQ+Cgo8ZGl2IGlkPSJ0b2FzdCI+CiAgICA8YT5Qcm9kdWN0IEFkZGVkIFN1Y2Nlc3NmdWxseTwvYT4KPC9kaXY+Cgo8L2JvZHk+CjwvaHRtbD4=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
      <HTTPPropertySet>
        <HTTPProperty name="StreamID">1</HTTPProperty>
        <HTTPProperty name="TotalHeadersSize">262</HTTPProperty>
      </HTTPPropertySet>
    </HTTPResponse>
    <HTTPTask id="2" hostname="www.advantageonlineshopping.com" path="/css/main.min.css" url="https://www.advantageonlineshopping.com/css/main.min.css" ip="54.227.55.203" port="443" client_ip="192.168.1.36" client_port="7777" connectionId="2084" origin="HTML" encodingType="ANSI" ordinal="1" startDateTime="2024-03-10T01:41:11.527+03:00" startTime="704" endTime="1241" blockedTime="-1" dnsTime="-1" connectTime="-2" sendTime="4294967295" waitTime="4294967295" receiveTime="136" sslNegotiateTime="-1" responseBodySize="30366">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name=":method" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VU</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name=":scheme" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cHM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name=":path" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>L2Nzcy9tYWluLm1pbi5jc3M=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name=":authority" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>d3d3LmFkdmFudGFnZW9ubGluZXNob3BwaW5nLmNvbQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cHM6Ly93d3cuYWR2YW50YWdlb25saW5lc2hvcHBpbmcuY29tLw==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Sec-Fetch-User" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>PzE=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Upgrade-Insecure-Requests" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Sec-Fetch-Dest" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZG9jdW1lbnQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Sec-Fetch-Mode" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bmF2aWdhdGU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Sec-Fetch-Site" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bm9uZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="DNT" index="10">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="11">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgMTAuMDsgV2luZG93cyBOVCA2LjE7IFRyaWRlbnQvNi4wKQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="12">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="13">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Om1ldGhvZDogR0VUDQo6c2NoZW1lOiBodHRwcw0KOnBhdGg6IC9jc3MvbWFpbi5taW4uY3NzDQo6YXV0aG9yaXR5OiB3d3cuYWR2YW50YWdlb25saW5lc2hvcHBpbmcuY29tDQpSZWZlcmVyOiBodHRwczovL3d3dy5hZHZhbnRhZ2VvbmxpbmVzaG9wcGluZy5jb20vDQpTZWMtRmV0Y2gtVXNlcjogPzENClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClNlYy1GZXRjaC1EZXN0OiBkb2N1bWVudA0KU2VjLUZldGNoLU1vZGU6IG5hdmlnYXRlDQpTZWMtRmV0Y2gtU2l0ZTogbm9uZQ0KRE5UOiAxDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoY29tcGF0aWJsZTsgTVNJRSAxMC4wOyBXaW5kb3dzIE5UIDYuMTsgVHJpZGVudC82LjApDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPPropertySet>
          <HTTPProperty name="StreamID">3</HTTPProperty>
          <HTTPProperty name="TotalHeadersSize">62</HTTPProperty>
        </HTTPPropertySet>
      </HTTPRequest>
      <HTTPResponse>
        <contentLenght>0</contentLenght>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Status" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MjAw</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="server" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bmdpbngvMS4xOC4wIChVYnVudHUp</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="date" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U2F0LCAwOSBNYXIgMjAyNCAyMjo0MToxMiBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="content-type" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dGV4dC9jc3M=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="accept-ranges" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ynl0ZXM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="etag" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Vy8iMTcwNzAxLTE3MDc5MDI3NTIwMDAi</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="last-modified" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>V2VkLCAxNCBGZWIgMjAyNCAwOToyNTo1MiBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="cache-control" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bWF4LWFnZT0zNjAwMA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="expires" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U3VuLCAxMCBNYXIgMjAyNCAwODo0MToxMiBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="vary" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YWNjZXB0LWVuY29kaW5n</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="content-encoding" index="10">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="strict-transport-security" index="11">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bWF4LWFnZT0zMTUzNjAwMDsgaW5jbHVkZVN1YkRvbWFpbnM7IHByZWxvYWQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8yLjAgMjAwDQpTdGF0dXM6IDIwMA0Kc2VydmVyOiBuZ2lueC8xLjE4LjAgKFVidW50dSkNCmRhdGU6IFNhdCwgMDkgTWFyIDIwMjQgMjI6NDE6MTIgR01UDQpjb250ZW50LXR5cGU6IHRleHQvY3NzDQphY2NlcHQtcmFuZ2VzOiBieXRlcw0KZXRhZzogVy8iMTcwNzAxLTE3MDc5MDI3NTIwMDAiDQpsYXN0LW1vZGlmaWVkOiBXZWQsIDE0IEZlYiAyMDI0IDA5OjI1OjUyIEdNVA0KY2FjaGUtY29udHJvbDogbWF4LWFnZT0zNjAwMA0KZXhwaXJlczogU3VuLCAxMCBNYXIgMjAyNCAwODo0MToxMiBHTVQNCnZhcnk6IGFjY2VwdC1lbmNvZGluZw0KY29udGVudC1lbmNvZGluZzogZ3ppcA0Kc3RyaWN0LXRyYW5zcG9ydC1zZWN1cml0eTogbWF4LWFnZT0zMTUzNjAwMDsgaW5jbHVkZVN1YkRvbWFpbnM7IHByZWxvYWQNCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData></ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <HTTPPropertySet>
          <HTTPProperty name="StreamID">3</HTTPProperty>
          <HTTPProperty name="TotalHeadersSize">265</HTTPProperty>
        </HTTPPropertySet>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="3" hostname="www.googletagmanager.com" path="/gtag/js?id=G-TBPYED8WSW" url="https://www.googletagmanager.com/gtag/js?id=G-TBPYED8WSW" ip="216.58.211.232" port="443" client_ip="192.168.1.36" client_port="7778" connectionId="2432" origin="HTML" encodingType="ANSI" ordinal="2" startDateTime="2024-03-10T01:41:11.542+03:00" startTime="720" endTime="964" blockedTime="-1" dnsTime="0" connectTime="73" sendTime="4294967295" waitTime="4294967295" receiveTime="889" sslNegotiateTime="38" responseBodySize="92565">
      <QueryString>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>aWQ9Ry1UQlBZRUQ4V1NX</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </QueryString>
      <HTTPSplittedQueryStrings>
        <HTTPHeaderEntity name="id" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ry1UQlBZRUQ4V1NX</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
      </HTTPSplittedQueryStrings>
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name=":method" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VU</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name=":scheme" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cHM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name=":path" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>L2d0YWcvanM/aWQ9Ry1UQlBZRUQ4V1NX</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name=":authority" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>d3d3Lmdvb2dsZXRhZ21hbmFnZXIuY29t</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cHM6Ly93d3cuYWR2YW50YWdlb25saW5lc2hvcHBpbmcuY29tLw==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Sec-Fetch-User" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>PzE=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Upgrade-Insecure-Requests" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Sec-Fetch-Dest" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZG9jdW1lbnQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Sec-Fetch-Mode" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bmF2aWdhdGU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Sec-Fetch-Site" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bm9uZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="DNT" index="10">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="11">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgMTAuMDsgV2luZG93cyBOVCA2LjE7IFRyaWRlbnQvNi4wKQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="12">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="13">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Om1ldGhvZDogR0VUDQo6c2NoZW1lOiBodHRwcw0KOnBhdGg6IC9ndGFnL2pzP2lkPUctVEJQWUVEOFdTVw0KOmF1dGhvcml0eTogd3d3Lmdvb2dsZXRhZ21hbmFnZXIuY29tDQpSZWZlcmVyOiBodHRwczovL3d3dy5hZHZhbnRhZ2VvbmxpbmVzaG9wcGluZy5jb20vDQpTZWMtRmV0Y2gtVXNlcjogPzENClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClNlYy1GZXRjaC1EZXN0OiBkb2N1bWVudA0KU2VjLUZldGNoLU1vZGU6IG5hdmlnYXRlDQpTZWMtRmV0Y2gtU2l0ZTogbm9uZQ0KRE5UOiAxDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoY29tcGF0aWJsZTsgTVNJRSAxMC4wOyBXaW5kb3dzIE5UIDYuMTsgVHJpZGVudC82LjApDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPPropertySet>
          <HTTPProperty name="StreamID">1</HTTPProperty>
          <HTTPProperty name="TotalHeadersSize">235</HTTPProperty>
        </HTTPPropertySet>
      </HTTPRequest>
      <HTTPResponse>
        <contentLenght>92246</contentLenght>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Status" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MjAw</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="content-type" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24vamF2YXNjcmlwdDsgY2hhcnNldD1VVEYtOA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="access-control-allow-origin" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Kg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="access-control-allow-credentials" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dHJ1ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="access-control-allow-headers" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Q2FjaGUtQ29udHJvbA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="content-encoding" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="vary" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QWNjZXB0LUVuY29kaW5n</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="date" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U2F0LCAwOSBNYXIgMjAyNCAyMjo0MToxMiBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="expires" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U2F0LCAwOSBNYXIgMjAyNCAyMjo0MToxMiBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="cache-control" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>cHJpdmF0ZSwgbWF4LWFnZT05MDA=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="strict-transport-security" index="10">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bWF4LWFnZT0zMTUzNjAwMDsgaW5jbHVkZVN1YkRvbWFpbnM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="cross-origin-resource-policy" index="11">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Y3Jvc3Mtb3JpZ2lu</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="server" index="12">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R29vZ2xlIFRhZyBNYW5hZ2Vy</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="content-length" index="13">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>OTIyNDY=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="x-xss-protection" index="14">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="alt-svc" index="15">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aDM9Ijo0NDMiOyBtYT0yNTkyMDAwLGgzLTI5PSI6NDQzIjsgbWE9MjU5MjAwMA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8yLjAgMjAwDQpTdGF0dXM6IDIwMA0KY29udGVudC10eXBlOiBhcHBsaWNhdGlvbi9qYXZhc2NyaXB0OyBjaGFyc2V0PVVURi04DQphY2Nlc3MtY29udHJvbC1hbGxvdy1vcmlnaW46ICoNCmFjY2Vzcy1jb250cm9sLWFsbG93LWNyZWRlbnRpYWxzOiB0cnVlDQphY2Nlc3MtY29udHJvbC1hbGxvdy1oZWFkZXJzOiBDYWNoZS1Db250cm9sDQpjb250ZW50LWVuY29kaW5nOiBnemlwDQp2YXJ5OiBBY2NlcHQtRW5jb2RpbmcNCmRhdGU6IFNhdCwgMDkgTWFyIDIwMjQgMjI6NDE6MTIgR01UDQpleHBpcmVzOiBTYXQsIDA5IE1hciAyMDI0IDIyOjQxOjEyIEdNVA0KY2FjaGUtY29udHJvbDogcHJpdmF0ZSwgbWF4LWFnZT05MDANCnN0cmljdC10cmFuc3BvcnQtc2VjdXJpdHk6IG1heC1hZ2U9MzE1MzYwMDA7IGluY2x1ZGVTdWJEb21haW5zDQpjcm9zcy1vcmlnaW4tcmVzb3VyY2UtcG9saWN5OiBjcm9zcy1vcmlnaW4NCnNlcnZlcjogR29vZ2xlIFRhZyBNYW5hZ2VyDQpjb250ZW50LWxlbmd0aDogOTIyNDYNCngteHNzLXByb3RlY3Rpb246IDANCmFsdC1zdmM6IGgzPSI6NDQzIjsgbWE9MjU5MjAwMCxoMy0yOT0iOjQ0MyI7IG1hPTI1OTIwMDANCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ci8vIENvcHlyaWdodCAyMDEyIEdvb2dsZSBJbmMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuCiAKKGZ1bmN0aW9uKCl7Cgp2YXIgZGF0YSA9IHsKInJlc291cmNlIjogewogICJ2ZXJzaW9uIjoiMSIsCiAgCiAgIm1hY3JvcyI6W3siZnVuY3Rpb24iOiJfX2UifSx7InZ0cF9zaWduYWwiOjAsImZ1bmN0aW9uIjoiX19jIiwidnRwX3ZhbHVlIjowfSx7ImZ1bmN0aW9uIjoiX19jIiwidnRwX3ZhbHVlIjoiZ29vZ2xlLnJ1In0seyJmdW5jdGlvbiI6Il9fYyIsInZ0cF92YWx1ZSI6MH0seyJmdW5jdGlvbiI6Il9fYyIsInZ0cF92YWx1ZSI6Imdvb2dsZS5ydSJ9LHsiZnVuY3Rpb24iOiJfX2MiLCJ2dHBfdmFsdWUiOjB9LHsidnRwX3NpZ25hbCI6MCwiZnVuY3Rpb24iOiJfX2MiLCJ2dHBfdmFsdWUiOjB9XSwKICAidGFncyI6W3siZnVuY3Rpb24iOiJfX2djdCIsInZ0cF90cmFja2luZ0lkIjoiRy1UQlBZRUQ4V1NXIiwidnRwX3Nlc3Npb25EdXJhdGlvbiI6MCwidnRwX2dvb2dsZVNpZ25hbHMiOlsibWFjcm8iLDFdLCJ2dHBfZm9yZWlnblRsZCI6WyJtYWNybyIsMl0sInZ0cF9yZXN0cmljdERvbWFpbiI6WyJtYWNybyIsM10sInZ0cF9ldmVudFNldHRpbmdzIjpbIm1hcCJdLCJ0YWdfaWQiOjd9LHsiZnVuY3Rpb24iOiJfX3NldF9wcm9kdWN0X3NldHRpbmdzIiwidnRwX2luc3RhbmNlRGVzdGluYXRpb25JZCI6IkctVEJQWUVEOFdTVyIsInZ0cF9mb3JlaWduVGxkTWFjcm9SZXN1bHQiOlsibWFjcm8iLDRdLCJ2dHBfaXNDaGluYVZpcFJlZ2lvbk1hY3JvUmVzdWx0IjpbIm1hY3JvIiw1XSwidGFnX2lkIjo5fSx7ImZ1bmN0aW9uIjoiX19vZ3RfZ29vZ2xlX3NpZ25hbHMiLCJ2dHBfZ29vZ2xlU2lnbmFscyI6IkRJU0FCTEVEIiwidnRwX2luc3RhbmNlRGVzdGluYXRpb25JZCI6IkctVEJQWUVEOFdTVyIsInZ0cF9zZXJ2ZXJNYWNyb1Jlc3VsdCI6WyJtYWNybyIsNl0sInRhZ19pZCI6MTF9LHsiZnVuY3Rpb24iOiJfX2NjZF9lbV9zY3JvbGwiLCJ2dHBfaW5jbHVkZVBhcmFtcyI6dHJ1ZSwidnRwX2luc3RhbmNlRGVzdGluYXRpb25JZCI6IkctVEJQWUVEOFdTVyIsInRhZ19pZCI6MTJ9LHsiZnVuY3Rpb24iOiJfX2NjZF9lbV9kb3dubG9hZCIsInZ0cF9pbmNsdWRlUGFyYW1zIjp0cnVlLCJ2dHBfaW5zdGFuY2VEZXN0aW5hdGlvbklkIjoiRy1UQlBZRUQ4V1NXIiwidGFnX2lkIjoxM30seyJmdW5jdGlvbiI6Il9fY2NkX2VtX3ZpZGVvIiwidnRwX2luY2x1ZGVQYXJhbXMiOnRydWUsInZ0cF9pbnN0YW5jZURlc3RpbmF0aW9uSWQiOiJHLVRCUFlFRDhXU1ciLCJ0YWdfaWQiOjE0fSx7ImZ1bmN0aW9uIjoiX19jY2RfZW1fZm9ybSIsInZ0cF9pbmNsdWRlUGFyYW1zIjp0cnVlLCJ2dHBfaW5zdGFuY2VEZXN0aW5hdGlvbklkIjoiRy1UQlBZRUQ4V1NXIiwidGFnX2lkIjoxNX0seyJmdW5jdGlvbiI6Il9fY2NkX2VtX3NpdGVfc2VhcmNoIiwidnRwX3NlYXJjaFF1ZXJ5UGFyYW1zIjoicSxzLHNlYXJjaCxxdWVyeSxrZXl3b3JkIiwidnRwX2luY2x1ZGVQYXJhbXMiOnRydWUsInZ0cF9pbnN0YW5jZURlc3RpbmF0aW9uSWQiOiJHLVRCUFlFRDhXU1ciLCJ0YWdfaWQiOjE2fSx7ImZ1bmN0aW9uIjoiX19jY2RfZ2FfcmVnc2NvcGUiLCJ2dHBfc2V0dGluZ3NUYWJsZSI6WyJsaXN0IixbIm1hcCIsInJlZGFjdEZpZWxkR3JvdXAiLCJERVZJQ0VfQU5EX0dFTyIsImRpc2FsbG93QWxsUmVnaW9ucyIsZmFsc2UsImRpc2FsbG93ZWRSZWdpb25zIiwiIl0sWyJtYXAiLCJyZWRhY3RGaWVsZEdyb3VwIiwiR09PR0xFX1NJR05BTFMiLCJkaXNhbGxvd0FsbFJlZ2lvbnMiLHRydWUsImRpc2FsbG93ZWRSZWdpb25zIiwiIl1dLCJ2dHBfaW5zdGFuY2VEZXN0aW5hdGlvbklkIjoiRy1UQlBZRUQ4V1NXIiwidGFnX2lkIjoxN30seyJmdW5jdGlvbiI6Il9fY2NkX2VtX291dGJvdW5kX2NsaWNrIiwicHJpb3JpdHkiOjAsInZ0cF9pbmNsdWRlUGFyYW1zIjp0cnVlLCJ2dHBfaW5zdGFuY2VEZXN0aW5hdGlvbklkIjoiRy1UQlBZRUQ4V1NXIiwidGFnX2lkIjoxOH0seyJmdW5jdGlvbiI6Il9fY2NkX2VtX3BhZ2VfdmlldyIsInZ0cF9oaXN0b3J5RXZlbnRzIjp0cnVlLCJ2dHBfaW5jbHVkZVBhcmFtcyI6dHJ1ZSwidnRwX2luc3RhbmNlRGVzdGluYXRpb25JZCI6IkctVEJQWUVEOFdTVyIsInRhZ19pZCI6MTl9LHsiZnVuY3Rpb24iOiJfX2NjZF9jb252ZXJzaW9uX21hcmtpbmciLCJ2dHBfY29udmVyc2lvblJ1bGVzIjpbImxpc3QiLFsibWFwIiwibWF0Y2hpbmdSdWxlcyIsIntcInR5cGVcIjo1LFwiYXJnc1wiOlt7XCJzdHJpbmdWYWx1ZVwiOlwicHVyY2hhc2VcIn0se1wiY29udGV4dFZhbHVlXCI6e1wibmFtZXNwYWNlVHlwZVwiOjEsXCJrZXlQYXJ0c1wiOltcImV2ZW50TmFtZVwiXX19XX0iXV0sInZ0cF9pbnN0YW5jZURlc3RpbmF0aW9uSWQiOiJHLVRCUFlFRDhXU1ciLCJ0YWdfaWQiOjIwfV0sCiAgInByZWRpY2F0ZXMiOlt7ImZ1bmN0aW9uIjoiX2VxIiwiYXJnMCI6WyJtYWNybyIsMF0sImFyZzEiOiJndG0uanMifSx7ImZ1bmN0aW9uIjoiX2VxIiwiYXJnMCI6WyJtYWNybyIsMF0sImFyZzEiOiJndG0uaW5pdCJ9XSwKICAicnVsZXMiOltbWyJpZiIsMF0sWyJhZGQiLDBdXSxbWyJpZiIsMV0sWyJhZGQiLDEsMiwzLDQsNSw2LDcsOCw5LDEwLDExXV1dCn0sCiJydW50aW1lIjpbIFs1MCwiX19jY2RfY29udmVyc2lvbl9tYXJraW5nIixbNDYsImEiXSxbMjIsWzMwLFsyOCxbMTcsWzE1LCJhIl0sImNvbnZlcnNpb25SdWxlcyJdXSxbMjAsWzE3LFsxNyxbMTUsImEiXSwiY29udmVyc2lvblJ1bGVzIl0sImxlbmd0aCJdLDBdXSxbNDYsWzIsWzE1LCJhIl0sImd0bU9uU3VjY2VzcyIsWzddXSxbMzZdXV0sWzUyLCJiIixbInJlcXVpcmUiLCJpbnRlcm5hbC5jb3B5UHJlSGl0Il1dLFs1MiwiYyIsWyJyZXF1aXJlIiwiaW50ZXJuYWwuZXZhbHVhdGVCb29sZWFuRXhwcmVzc2lvbiJdXSxbNTIsImQiLFsicmVxdWlyZSIsImludGVybmFsLnJlZ2lzdGVyQ2NkQ2FsbGJhY2siXV0sWzUyLCJlIiwiaXNfY29udmVyc2lvbiJdLFs1MiwiZiIsImlzX2ZpcnN0X3Zpc2l0Il0sWzUyLCJnIiwiaXNfZmlyc3RfdmlzaXRfY29udmVyc2lvbiJdLFs1MiwiaCIsImlzX3Nlc3Npb25fc3RhcnQiXSxbNTIsImkiLCJpc19zZXNzaW9uX3N0YXJ0X2NvbnZlcnNpb24iXSxbNTIsImoiLCJmaXJzdF92aXNpdCJdLFs1MiwiayIsInNlc3Npb25fc3RhcnQiXSxbNDEsImwiXSxbNDEsIm0iXSxbImQiLFsxNyxbMTUsImEiXSwiaW5zdGFuY2VEZXN0aW5hdGlvbklkIl0sWzUxLCIiLFs3LCJuIl0sWzUyLCJvIixbOCwicHJlSGl0IixbMTUsIm4iXV1dLFs2NSwicCIsWzE3LFsxNSwiYSJdLCJjb252ZXJzaW9uUnVsZXMiXSxbNDYsWzIyLFsiYyIsWzE3LFsxNSwicCJdLCJtYXRjaGluZ1J1bGVzIl0sWzE1LCJvIl1dLFs0NixbMixbMTUsIm4iXSwic2V0TWV0YWRhdGEiLFs3LFsxNSwiZSJdLHRydWVdXSxbNF1dXV1dLFsyMixbMixbMTUsIm4iXSwiZ2V0TWV0YWRhdGEiLFs3LFsxNSwiZiJdXV0sWzQ2LFsyMixbMjgsWzE1LCJsIl1dLFs0NixbNTMsWzUyLCJwIixbImIiLFsxNSwibiJdLFs4LCJvbWl0SGl0RGF0YSIsdHJ1ZSwib21pdE1ldGFkYXRhIix0cnVlXV1dLFsyLFsxNSwicCJdLCJzZXRFdmVudE5hbWUiLFs3LFsxNSwiaiJdXV0sWzMsImwiLFs4LCJwcmVIaXQiLFsxNSwicCJdXV1dXV0sWzY1LCJwIixbMTcsWzE1LCJhIl0sImNvbnZlcnNpb25SdWxlcyJdLFs0NixbMjIsWyJjIixbMTcsWzE1LCJwIl0sIm1hdGNoaW5nUnVsZXMiXSxbMTUsImwiXV0sWzQ2LFsyLFsxNSwibiJdLCJzZXRNZXRhZGF0YSIsWzcsWzE1LCJnIl0sdHJ1ZV1dLFs0XV1dXV1dXSxbMjIsWzIsWzE1LCJuIl0sImdldE1ldGFkYXRhIixbNyxbMTUsImgiXV1dLFs0NixbMjIsWzI4LFsxNSwibSJdXSxbNDYsWzUzLFs1MiwicCIsWyJiIixbMTUsIm4iXSxbOCwib21pdEhpdERhdGEiLHRydWUsIm9taXRNZXRhZGF0YSIsdHJ1ZV1dXSxbMixbMTUsInAiXSwic2V0RXZlbnROYW1lIixbNyxbMTUsImsiXV1dLFszLCJtIixbOCwicHJlSGl0IixbMTUsInAiXV1dXV1dLFs2NSwicCIsWzE3LFsxNSwiYSJdLCJjb252ZXJzaW9uUnVsZXMiXSxbNDYsWzIyLFsiYyIsWzE3LFsxNSwicCJdLCJtYXRjaGluZ1J1bGVzIl0sWzE1LCJtIl1dLFs0NixbMixbMTUsIm4iXSwic2V0TWV0YWRhdGEiLFs3LFsxNSwiaSJdLHRydWVdXSxbNF1dXV1dXV1dXSxbMixbMTUsImEiXSwiZ3RtT25TdWNjZXNzIixbN11dLFszNl1dCiAsWzUwLCJfX2NjZF9lbV9kb3dubG9hZCIsWzQ2LCJhIl0sWzUwLCJyIixbNDYsIngiXSxbMzYsWzEsWzE1LCJ4Il0sWzIxLFsyLFsyLFsxNSwieCJdLCJ0b0xvd2VyQ2FzZSIsWzddXSwibWF0Y2giLFs3LFsxNSwicSJdXV0sWzQ1XV1dXV0sWzUwLCJzIixbNDYsIngiXSxbNTIsInkiLFsyLFsxNyxbMTUsIngiXSwicGF0aG5hbWUiXSwic3BsaXQiLFs3LCIuIl1dXSxbNTIsInoiLFszOSxbMTgsWzE3LFsxNSwieSJdLCJsZW5ndGgiXSwxXSxbMTYsWzE1LCJ5Il0sWzM3LFsxNyxbMTUsInkiXSwibGVuZ3RoIl0sMV1dLCIiXV0sWzM2LFsxNixbMixbMTUsInoiXSwic3BsaXQiLFs3LCIvIl1dLDBdXV0sWzUwLCJ0IixbNDYsIngiXSxbMzYsWzM5LFsxMixbMixbMTcsWzE1LCJ4Il0sInBhdGhuYW1lIl0sInN1YnN0cmluZyIsWzcsMCwxXV0sIi8iXSxbMTcsWzE1LCJ4Il0sInBhdGhuYW1lIl0sWzAsIi8iLFsxNyxbMTUsIngiXSwicGF0aG5hbWUiXV1dXV0sWzUwLCJ1IixbNDYsIngiXSxbNDEsInkiXSxbMywieSIsIiJdLFsyMixbMSxbMTUsIngiXSxbMTcsWzE1LCJ4Il0sImhyZWYiXV0sWzQ2LFs1MyxbNDEsInoiXSxbMywieiIsWzIsWzE3LFsxNSwieCJdLCJocmVmIl0sImluZGV4T2YiLFs3LCIjIl1dXSxbMywieSIsWzM5LFsyMyxbMTUsInoiXSwwXSxbMTcsWzE1LCJ4Il0sImhyZWYiXSxbMixbMTcsWzE1LCJ4Il0sImhyZWYiXSwic3Vic3RyaW5nIixbNywwLFsxNSwieiJdXV1dXV1dXSxbMzYsWzE1LCJ5Il1dXSxbNTAsInciLFs0NiwieCJdLFs1MiwieSIsWzhdXSxbNDMsWzE1LCJ5Il0sWzE1LCJqIl0sdHJ1ZV0sWzQzLFsxNSwieSJdLFsxNSwiZiJdLHRydWVdLFs0MyxbMTUsIngiXSwiZXZlbnRNZXRhZGF0YSIsWzE1LCJ5Il1dXSxbNTIsImIiLFsxMyxbNDEsIiQwIl0sWzMsIiQwIixbInJlcXVpcmUiLCJpbnRlcm5hbC5nZXRGbGFncyJdXSxbIiQwIl1dXSxbNTIsImMiLFsicmVxdWlyZSIsImludGVybmFsLmdldFByb2R1Y3RTZXR0aW5nc1BhcmFtZXRlciJdXSxbNTIsImQiLFsicmVxdWlyZSIsInRlbXBsYXRlU3RvcmFnZSJdXSxbNTIsImUiLFsxNSwiX19tb2R1bGVfY2NkRW1Eb3dubG9hZEFjdGl2aXR5Il1dLFs1MiwiZiIsInNwZWN1bGF0aXZlIl0sWzUyLCJnIiwiYWVfYmxvY2tfZG93bmxvYWRzIl0sWzUyLCJoIiwiZmlsZV9kb3dubG9hZCJdLFs1MiwiaSIsImlzUmVnaXN0ZXJlZCJdLFs1MiwiaiIsImVtX2V2ZW50Il0sWzUyLCJrIixbMTcsWzE1LCJhIl0sImluc3RhbmNlRGVzdGluYXRpb25JZCJdXSxbMjIsWyJjIixbMTUsImsiXSxbMTUsImciXV0sWzQ2LFsyLFsxNSwiYSJdLCJndG1PblN1Y2Nlc3MiLFs3XV0sWzM2XV1dLFsyLFsxNSwiZSJdLCJyZWdpc3RlckRvd25sb2FkQWN0aXZpdHlDYWxsYmFjayIsWzcsWzE1LCJrIl0sWzE3LFsxNSwiYSJdLCJpbmNsdWRlUGFyYW1zIl1dXSxbMjIsWzIsWzE1LCJkIl0sImdldEl0ZW0iLFs3LFsxNSwiaSJdXV0sWzQ2LFsyLFsxNSwiYSJdLCJndG1PblN1Y2Nlc3MiLFs3XV0sWzM2XV1dLFs1MiwibCIsWyJyZXF1aXJlIiwiaW50ZXJuYWwuYWRkRGF0YUxheWVyRXZlbnRMaXN0ZW5lciJdXSxbNTIsIm0iLFsicmVxdWlyZSIsImludGVybmFsLmVuYWJsZUF1dG9FdmVudE9uTGlua0NsaWNrIl1dLFs1MiwibiIsWyJyZXF1aXJlIiwiaW50ZXJuYWwuZ2V0RGVzdGluYXRpb25JZHMiXV0sWzUyLCJvIixbInJlcXVpcmUiLCJwYXJzZVVybCJdXSxbNTIsInAiLFsicmVxdWlyZSIsImludGVybmFsLnNlbmRHdGFnRXZlbnQiXV0sWzUyLCJxIixbMCwiXihwZGZ8eGxzeD98ZG9jeD98dHh0fHJ0Znxjc3Z8ZXhlfGtleXxwcChzfHR8dHgpfDd6fHBrZ3xyYXJ8Z3p8emlwfGF2aXwiLCJtb3Z8bXA0fG1wZT9nfHdtdnxtaWRpP3xtcDN8d2F2fHdtYSkkIl1dLFs1MiwidiIsWyJtIixbOCwiY2hlY2tWYWxpZGF0aW9uIix0cnVlXV1dLFsyMixbMjgsWzE1LCJ2Il1dLFs0NixbMixbMTUsImEiXSwiZ3RtT25GYWlsdXJlIixbN11dLFszNl1dXSxbMixbMTUsImQiXSwic2V0SXRlbSIsWzcsWzE1LCJpIl0sdHJ1ZV1dLFsibCIsImd0bS5saW5rQ2xpY2siLFs1MSwiIixbNywieCIsInkiXSxbInkiXSxbNTIsInoiLFs4LCJldmVudElkIixbMTYsWzE1LCJ4Il0sImd0bS51bmlxdWVFdmVudElkIl1dXSxbMjIsWzE2LFsxNSwiYiJdLCJlbmFibGVEZWZlckFsbEVuaGFuY2VkTWVhc3VyZW1lbnQiXSxbNDYsWzQzLFsxNSwieiJdLCJkZWZlcnJhYmxlIix0cnVlXV1dLFs1MiwiYmEiLFsxNixbMTUsIngiXSwiZ3RtLmVsZW1lbnRVcmwiXV0sWzUyLCJiYiIsWyJvIixbMTUsImJhIl1dXSxbMjIsWzI4LFsxNSwiYmIiXV0sWzQ2LFszNl1dXSxbNTIsImJjIixbInMiLFsxNSwiYmIiXV1dLFsyMixbMjgsWyJyIixbMTUsImJjIl1dXSxbNDYsWzM2XV1dLFs1MiwiYmQiLFs4LCJsaW5rX2lkIixbMTYsWzE1LCJ4Il0sImd0bS5lbGVtZW50SWQiXSwibGlua191cmwiLFsidSIsWzE1LCJiYiJdXSwibGlua190ZXh0IixbMTYsWzE1LCJ4Il0sImd0bS5lbGVtZW50VGV4dCJdLCJmaWxlX25hbWUiLFsidCIsWzE1LCJiYiJdXSwiZmlsZV9leHRlbnNpb24iLFsxNSwiYmMiXV1dLFsidyIsWzE1LCJ6Il1dLFsicCIsWyJuIl0sWzE1LCJoIl0sWzE1LCJiZCJdLFsxNSwieiJdXV0sWzE1LCJ2Il1dLFsyLFsxNSwiYSJdLCJndG1PblN1Y2Nlc3MiLFs3XV1dCiAsWzUwLCJfX2NjZF9lbV9mb3JtIixbNDYsImEiXSxbNTAsInQiLFs0NiwieiJdLFs1MiwiYmEiLFszMCxbMTYsWzE1LCJ6Il0sWzE1LCJsIl1dLFs4XV1dLFs0MyxbMTUsImJhIl0sImV2ZW50X3VzYWdlIixbNyw4XV0sWzQzLFsxNSwieiJdLFsxNSwibCJdLFsxNSwiYmEiXV1dLFs1MCwidSIsWzQ2LCJ6IiwiYmEiXSxbNTIsImJiIixbMzAsWzE2LFsxNSwieiJdLFsxNSwibCJdXSxbOF1dXSxbNDMsWzE1LCJiYiJdLFsxNSwiayJdLHRydWVdLFs0MyxbMTUsImJiIl0sWzE1LCJmIl0sdHJ1ZV0sWzIyLFsxLFsxNSwibyJdLFsxNixbMTUsImJhIl0sImd0bS5mb3JtQ2FuY2VsZWQiXV0sWzQ2LFs0MyxbMTUsImJiIl0sWzE1LCJtIl0sdHJ1ZV1dXSxbNDMsWzE1LCJ6Il0sWzE1LCJsIl0sWzE1LCJiYiJdXV0sWzUyLCJiIixbMTMsWzQxLCIkMCJdLFszLCIkMCIsWyJyZXF1aXJlIiwiaW50ZXJuYWwuZ2V0RmxhZ3MiXV0sWyIkMCJdXV0sWzUyLCJjIixbInJlcXVpcmUiLCJpbnRlcm5hbC5nZXRQcm9kdWN0U2V0dGluZ3NQYXJhbWV0ZXIiXV0sWzUyLCJkIixbInJlcXVpcmUiLCJ0ZW1wbGF0ZVN0b3JhZ2UiXV0sWzUyLCJlIixbMTUsIl9fbW9kdWxlX2NjZEVtRm9ybUFjdGl2aXR5Il1dLFs1MiwiZiIsInNwZWN1bGF0aXZlIl0sWzUyLCJnIiwiYWVfYmxvY2tfZm9ybSJdLFs1MiwiaCIsImZvcm1fc3VibWl0Il0sWzUyLCJpIiwiZm9ybV9zdGFydCJdLFs1MiwiaiIsImlzUmVnaXN0ZXJlZCJdLFs1MiwiayIsImVtX2V2ZW50Il0sWzUyLCJsIiwiZXZlbnRNZXRhZGF0YSJdLFs1MiwibSIsImZvcm1fZXZlbnRfY2FuY2VsZWQiXSxbNTIsIm4iLFsxNyxbMTUsImEiXSwiaW5zdGFuY2VEZXN0aW5hdGlvbklkIl1dLFs1MiwibyIsWzI4LFsyOCxbMTYsWzE1LCJiIl0sImVuYWJsZUZvcm1Ta2lwVmFsaWRhdGlvbiJdXV1dLFsyMixbImMiLFsxNSwibiJdLFsxNSwiZyJdXSxbNDYsWzIsWzE1LCJhIl0sImd0bU9uU3VjY2VzcyIsWzddXSxbMzZdXV0sWzIsWzE1LCJlIl0sInJlZ2lzdGVyRm9ybUFjdGl2aXR5Q2FsbGJhY2siLFs3LFsxNyxbMTUsImEiXSwiaW5zdGFuY2VEZXN0aW5hdGlvbklkIl0sWzE3LFsxNSwiYSJdLCJza2lwVmFsaWRhdGlvbiJdLFsxNyxbMTUsImEiXSwiaW5jbHVkZVBhcmFtcyJdXV0sWzIyLFsyLFsxNSwiZCJdLCJnZXRJdGVtIixbNyxbMTUsImoiXV1dLFs0NixbMixbMTUsImEiXSwiZ3RtT25TdWNjZXNzIixbN11dLFszNl1dXSxbMixbMTUsImQiXSwic2V0SXRlbSIsWzcsWzE1LCJqIl0sdHJ1ZV1dLFs1MiwicCIsWyJyZXF1aXJlIiwiaW50ZXJuYWwuYWRkRm9ybUludGVyYWN0aW9uTGlzdGVuZXIiXV0sWzUyLCJxIixbInJlcXVpcmUiLCJpbnRlcm5hbC5hZGRGb3JtU3VibWl0TGlzdGVuZXIiXV0sWzUyLCJyIixbInJlcXVpcmUiLCJpbnRlcm5hbC5nZXREZXN0aW5hdGlvbklkcyJdXSxbNTIsInMiLFsicmVxdWlyZSIsImludGVybmFsLnNlbmRHdGFnRXZlbnQiXV0sWzUyLCJ2IixbOF1dLFs1MiwidyIsWzUxLCIiLFs3LCJ6IiwiYmEiXSxbMjIsWzE1LCJiYSJdLFs0NixbImJhIl1dXSxbNTIsImJiIixbMTYsWzE1LCJ6Il0sImd0bS5lbGVtZW50SWQiXV0sWzIyLFsxNixbMTUsInYiXSxbMTUsImJiIl1dLFs0NixbMzZdXV0sWzQzLFsxNSwidiJdLFsxNSwiYmIiXSx0cnVlXSxbNTIsImJjIixbOCwiZm9ybV9pZCIsWzE1LCJiYiJdLCJmb3JtX25hbWUiLFsxNixbMTUsInoiXSwiZ3RtLmludGVyYWN0ZWRGb3JtTmFtZSJdLCJmb3JtX2Rlc3RpbmF0aW9uIixbMTYsWzE1LCJ6Il0sImd0bS5lbGVtZW50VXJsIl0sImZvcm1fbGVuZ3RoIixbMTYsWzE1LCJ6Il0sImd0bS5pbnRlcmFjdGVkRm9ybUxlbmd0aCJdLCJmaXJzdF9maWVsZF9pZCIsWzE2LFsxNSwieiJdLCJndG0uaW50ZXJhY3RlZEZvcm1GaWVsZElkIl0sImZpcnN0X2ZpZWxkX25hbWUiLFsxNixbMTUsInoiXSwiZ3RtLmludGVyYWN0ZWRGb3JtRmllbGROYW1lIl0sImZpcnN0X2ZpZWxkX3R5cGUiLFsxNixbMTUsInoiXSwiZ3RtLmludGVyYWN0ZWRGb3JtRmllbGRUeXBlIl0sImZpcnN0X2ZpZWxkX3Bvc2l0aW9uIixbMTYsWzE1LCJ6Il0sImd0bS5pbnRlcmFjdGVkRm9ybUZpZWxkUG9zaXRpb24iXV1dLFs1MiwiYmQiLFs4LCJldmVudElkIixbMTcsWzE1LCJhIl0sImd0bUV2ZW50SWQiXV1dLFsyMixbMTYsWzE1LCJiIl0sImVuYWJsZURlZmVyQWxsRW5oYW5jZWRNZWFzdXJlbWVudCJdLFs0NixbNDMsWzE1LCJiZCJdLCJkZWZlcnJhYmxlIix0cnVlXV1dLFsidCIsWzE1LCJiZCJdXSxbInUiLFsxNSwiYmQiXSxbMTUsInoiXV0sWyJzIixbInIiXSxbMTUsImkiXSxbMTUsImJjIl0sWzE1LCJiZCJdXV1dLFs1MiwieCIsWzE2LFsxNSwiYiJdLCJ1c2VFbmFibGVBdXRvRXZlbnRPbkZvcm1BcGlzIl1dLFs1MiwieSIsWzUxLCIiLFs3LCJ6IiwiYmEiXSxbInciLFsxNSwieiJdLFs0NF1dLFs1MiwiYmIiLFs4LCJmb3JtX2lkIixbMTYsWzE1LCJ6Il0sImd0bS5lbGVtZW50SWQiXSwiZm9ybV9uYW1lIixbMTYsWzE1LCJ6Il0sImd0bS5pbnRlcmFjdGVkRm9ybU5hbWUiXSwiZm9ybV9kZXN0aW5hdGlvbiIsWzE2LFsxNSwieiJdLCJndG0uZWxlbWVudFVybCJdLCJmb3JtX2xlbmd0aCIsWzE2LFsxNSwieiJdLCJndG0uaW50ZXJhY3RlZEZvcm1MZW5ndGgiXSwiZm9ybV9zdWJtaXRfdGV4dCIsWzM5LFsxNSwieCJdLFsxNixbMTUsInoiXSwiZ3RtLmZvcm1TdWJtaXRFbGVtZW50VGV4dCJdLFsxNixbMTUsInoiXSwiZ3RtLmZvcm1TdWJtaXRCdXR0b25UZXh0Il1dXV0sWzQzLFsxNSwiYmIiXSwiZXZlbnRfY2FsbGJhY2siLFsxNSwiYmEiXV0sWzUyLCJiYyIsWzgsImV2ZW50SWQiLFsxNyxbMTUsImEiXSwiZ3RtRXZlbnRJZCJdXV0sWzIyLFsxNixbMTUsImIiXSwiZW5hYmxlRGVmZXJBbGxFbmhhbmNlZE1lYXN1cmVtZW50Il0sWzQ2LFs0MyxbMTUsImJjIl0sImRlZmVycmFibGUiLHRydWVdXV0sWyJ0IixbMTUsImJjIl1dLFsidSIsWzE1LCJiYyJdLFsxNSwieiJdXSxbInMiLFsiciJdLFsxNSwiaCJdLFsxNSwiYmIiXSxbMTUsImJjIl1dXV0sWzIyLFsxNSwieCJdLFs0NixbNTMsWzUyLCJ6IixbInJlcXVpcmUiLCJpbnRlcm5hbC5hZGREYXRhTGF5ZXJFdmVudExpc3RlbmVyIl1dLFs1MiwiYmEiLFsicmVxdWlyZSIsImludGVybmFsLmVuYWJsZUF1dG9FdmVudE9uRm9ybVN1Ym1pdCJdXSxbNTIsImJiIixbInJlcXVpcmUiLCJpbnRlcm5hbC5lbmFibGVBdXRvRXZlbnRPbkZvcm1JbnRlcmFjdGlvbiJdXSxbNTIsImJjIixbImJiIl1dLFsyMixbMjgsWzE1LCJiYyJdXSxbNDYsWzIsWzE1LCJhIl0sImd0bU9uRmFpbHVyZSIsWzddXSxbMzZdXV0sWyJ6IiwiZ3RtLmZvcm1JbnRlcmFjdCIsWzE1LCJ3Il0sWzE1LCJiYyJdXSxbNTIsImJkIixbImJhIixbOCwiY2hlY2tWYWxpZGF0aW9uIixbMjgsWzE1LCJvIl1dLCJ3YWl0Rm9yVGFncyIsZmFsc2VdXV0sWzIyLFsyOCxbMTUsImJkIl1dLFs0NixbMixbMTUsImEiXSwiZ3RtT25GYWlsdXJlIixbN11dLFszNl1dXSxbInoiLCJndG0uZm9ybVN1Ym1pdCIsWzE1LCJ5Il0sWzE1LCJiZCJdXV1dLFs0NixbInAiLFsxNSwidyJdXSxbInEiLFsxNSwieSJdLFs4LCJ3YWl0Rm9yQ2FsbGJhY2tzIixmYWxzZSwiY2hlY2tWYWxpZGF0aW9uIixbMjgsWzE1LCJvIl1dXV1dXSxbMixbMTUsImEiXSwiZ3RtT25TdWNjZXNzIixbN11dXQogLFs1MCwiX19jY2RfZW1fb3V0Ym91bmRfY2xpY2siLFs0NiwiYSJdLFs1MCwicyIsWzQ2LCJ5Il0sWzIyLFsyOCxbMTUsInkiXV0sWzQ2LFszNixbNDRdXV1dLFs0MSwieiJdLFszLCJ6IiwiIl0sWzIyLFsxLFsxNSwieSJdLFsxNyxbMTUsInkiXSwiaHJlZiJdXSxbNDYsWzUzLFs0MSwiYmEiXSxbMywiYmEiLFsyLFsxNyxbMTUsInkiXSwiaHJlZiJdLCJpbmRleE9mIixbNywiIyJdXV0sWzMsInoiLFszOSxbMjMsWzE1LCJiYSJdLDBdLFsxNyxbMTUsInkiXSwiaHJlZiJdLFsyLFsxNyxbMTUsInkiXSwiaHJlZiJdLCJzdWJzdHJpbmciLFs3LDAsWzE1LCJiYSJdXV1dXV1dXSxbMzYsWzE1LCJ6Il1dXSxbNTAsInQiLFs0NiwieSJdLFsyMixbMjgsWzE1LCJ5Il1dLFs0NixbMzYsWzQ0XV1dXSxbNDEsInoiXSxbMywieiIsWzE3LFsxNSwieSJdLCJob3N0bmFtZSJdXSxbNTIsImJhIixbMixbMTUsInoiXSwibWF0Y2giLFs3LCJed3d3XFxkKlxcLiJdXV0sWzIyLFsxLFsxNSwiYmEiXSxbMTYsWzE1LCJiYSJdLDBdXSxbNDYsWzMsInoiLFsyLFsxNSwieiJdLCJzdWJzdHJpbmciLFs3LFsxNyxbMTYsWzE1LCJiYSJdLDBdLCJsZW5ndGgiXV1dXV1dLFszNixbMTUsInoiXV1dLFs1MCwidSIsWzQ2LCJ5Il0sWzIyLFsyOCxbMTUsInkiXV0sWzQ2LFszNixmYWxzZV1dXSxbNTIsInoiLFsyLFsxNyxbMTUsInkiXSwiaG9zdG5hbWUiXSwidG9Mb3dlckNhc2UiLFs3XV1dLFs0MSwiYmEiXSxbMywiYmEiLFsyLFsidCIsWyJxIixbInAiXV1dLCJ0b0xvd2VyQ2FzZSIsWzddXV0sWzQxLCJiYiJdLFszLCJiYiIsWzM3LFsxNyxbMTUsInoiXSwibGVuZ3RoIl0sWzE3LFsxNSwiYmEiXSwibGVuZ3RoIl1dXSxbMjIsWzEsWzE4LFsxNSwiYmIiXSwwXSxbMjksWzIsWzE1LCJiYSJdLCJjaGFyQXQiLFs3LDBdXSwiLiJdXSxbNDYsWzMyLFsxNSwiYmIiXSxbMywiYmIiLFszNyxbMTUsImJiIl0sMV1dXSxbMywiYmEiLFswLCIuIixbMTUsImJhIl1dXV1dLFsyMixbMSxbMTksWzE1LCJiYiJdLDBdLFsxMixbMixbMTUsInoiXSwiaW5kZXhPZiIsWzcsWzE1LCJiYSJdLFsxNSwiYmIiXV1dLFsxNSwiYmIiXV1dLFs0NixbMzYsZmFsc2VdXV0sWzM2LHRydWVdXSxbNTAsIngiLFs0NiwieSJdLFs1MiwieiIsWzhdXSxbNDMsWzE1LCJ6Il0sWzE1LCJqIl0sdHJ1ZV0sWzQzLFsxNSwieiJdLFsxNSwiZiJdLHRydWVdLFs0MyxbMTUsInkiXSwiZXZlbnRNZXRhZGF0YSIsWzE1LCJ6Il1dXSxbNTIsImIiLFsxMyxbNDEsIiQwIl0sWzMsIiQwIixbInJlcXVpcmUiLCJpbnRlcm5hbC5nZXRGbGFncyJdXSxbIiQwIl1dXSxbNTIsImMiLFsicmVxdWlyZSIsImludGVybmFsLmdldFByb2R1Y3RTZXR0aW5nc1BhcmFtZXRlciJdXSxbNTIsImQiLFsicmVxdWlyZSIsInRlbXBsYXRlU3RvcmFnZSJdXSxbNTIsImUiLFsxNSwiX19tb2R1bGVfY2NkRW1PdXRib3VuZENsaWNrQWN0aXZpdHkiXV0sWzUyLCJmIiwic3BlY3VsYXRpdmUiXSxbNTIsImciLCJhZV9ibG9ja19vdXRib3VuZF9jbGljayJdLFs1MiwiaCIsImNsaWNrIl0sWzUyLCJpIiwiaXNSZWdpc3RlcmVkIl0sWzUyLCJqIiwiZW1fZXZlbnQiXSxbNTIsImsiLFsxNyxbMTUsImEiXSwiaW5zdGFuY2VEZXN0aW5hdGlvbklkIl1dLFsyMixbImMiLFsxNSwiayJdLFsxNSwiZyJdXSxbNDYsWzIsWzE1LCJhIl0sImd0bU9uU3VjY2VzcyIsWzddXSxbMzZdXV0sWzIsWzE1LCJlIl0sInJlZ2lzdGVyT3V0YmFja0NsaWNrQWN0aXZpdHlDYWxsYmFjayIsWzcsWzE1LCJrIl0sWzE3LFsxNSwiYSJdLCJpbmNsdWRlUGFyYW1zIl1dXSxbMjIsWzIsWzE1LCJkIl0sImdldEl0ZW0iLFs3LFsxNSwiaSJdXV0sWzQ2LFsyLFsxNSwiYSJdLCJndG1PblN1Y2Nlc3MiLFs3XV0sWzM2XV1dLFs1MiwibCIsWyJyZXF1aXJlIiwiaW50ZXJuYWwuYWRkRGF0YUxheWVyRXZlbnRMaXN0ZW5lciJdXSxbNTIsIm0iLFsicmVxdWlyZSIsImludGVybmFsLmVuYWJsZUF1dG9FdmVudE9uTGlua0NsaWNrIl1dLFs1MiwibiIsWyJyZXF1aXJlIiwiaW50ZXJuYWwuZ2V0RGVzdGluYXRpb25JZHMiXV0sWzUyLCJvIixbInJlcXVpcmUiLCJpbnRlcm5hbC5nZXRSZW1vdGVDb25maWdQYXJhbWV0ZXIiXV0sWzUyLCJwIixbInJlcXVpcmUiLCJnZXRVcmwiXV0sWzUyLCJxIixbInJlcXVpcmUiLCJwYXJzZVVybCJdXSxbNTIsInIiLFsicmVxdWlyZSIsImludGVybmFsLnNlbmRHdGFnRXZlbnQiXV0sWzUyLCJ2IixbIm8iLFsxNSwiayJdLCJjcm9zc19kb21haW5fY29uZGl0aW9ucyJdXSxbNTIsInciLFsibSIsWzgsImFmZmlsaWF0ZURvbWFpbnMiLFsxNSwidiJdLCJjaGVja1ZhbGlkYXRpb24iLHRydWUsIndhaXRGb3JUYWdzIixmYWxzZV1dXSxbMjIsWzI4LFsxNSwidyJdXSxbNDYsWzIsWzE1LCJhIl0sImd0bU9uRmFpbHVyZSIsWzddXSxbMzZdXV0sWzIsWzE1LCJkIl0sInNldEl0ZW0iLFs3LFsxNSwiaSJdLHRydWVdXSxbImwiLCJndG0ubGlua0NsaWNrIixbNTEsIiIsWzcsInkiLCJ6Il0sWzUyLCJiYSIsWyJxIixbMTYsWzE1LCJ5Il0sImd0bS5lbGVtZW50VXJsIl1dXSxbMjIsWzI4LFsidSIsWzE1LCJiYSJdXV0sWzQ2LFsieiJdLFszNl1dXSxbNTIsImJiIixbOCwibGlua19pZCIsWzE2LFsxNSwieSJdLCJndG0uZWxlbWVudElkIl0sImxpbmtfY2xhc3NlcyIsWzE2LFsxNSwieSJdLCJndG0uZWxlbWVudENsYXNzZXMiXSwibGlua191cmwiLFsicyIsWzE1LCJiYSJdXSwibGlua19kb21haW4iLFsidCIsWzE1LCJiYSJdXSwib3V0Ym91bmQiLHRydWVdXSxbNDMsWzE1LCJiYiJdLCJldmVudF9jYWxsYmFjayIsWzE1LCJ6Il1dLFs1MiwiYmMiLFs4LCJldmVudElkIixbMTYsWzE1LCJ5Il0sImd0bS51bmlxdWVFdmVudElkIl1dXSxbMjIsWzE2LFsxNSwiYiJdLCJlbmFibGVEZWZlckFsbEVuaGFuY2VkTWVhc3VyZW1lbnQiXSxbNDYsWzQzLFsxNSwiYmMiXSwiZGVmZXJyYWJsZSIsdHJ1ZV1dXSxbIngiLFsxNSwiYmMiXV0sWyJyIixbIm4iXSxbMTUsImgiXSxbMTUsImJiIl0sWzE1LCJiYyJdXV0sWzE1LCJ3Il1dLFsyLFsxNSwiYSJdLCJndG1PblN1Y2Nlc3MiLFs3XV1dCiAsWzUwLCJfX2NjZF9lbV9wYWdlX3ZpZXciLFs0NiwiYSJdLFs1MCwicyIsWzQ2LCJ0Il0sWzUyLCJ1IixbOF1dLFs0MyxbMTUsInUiXSxbMTUsImsiXSx0cnVlXSxbNDMsWzE1LCJ1Il0sWzE1LCJnIl0sdHJ1ZV0sWzQzLFsxNSwidCJdLCJldmVudE1ldGFkYXRhIixbMTUsInUiXV1dLFsyMixbMjgsWzE3LFsxNSwiYSJdLCJoaXN0b3J5RXZlbnRzIl1dLFs0NixbMixbMTUsImEiXSwiZ3RtT25TdWNjZXNzIixbN11dLFszNl1dXSxbNTIsImIiLFsxMyxbNDEsIiQwIl0sWzMsIiQwIixbInJlcXVpcmUiLCJpbnRlcm5hbC5nZXRGbGFncyJdXSxbIiQwIl1dXSxbNTIsImMiLFsicmVxdWlyZSIsImludGVybmFsLmdldFByb2R1Y3RTZXR0aW5nc1BhcmFtZXRlciJdXSxbNTIsImQiLFsicmVxdWlyZSIsImludGVybmFsLnNldFJlbW90ZUNvbmZpZ1BhcmFtZXRlciJdXSxbNTIsImUiLFsicmVxdWlyZSIsInRlbXBsYXRlU3RvcmFnZSJdXSxbNTIsImYiLFsxNSwiX19tb2R1bGVfY2NkRW1QYWdlVmlld0FjdGl2aXR5Il1dLFs1MiwiZyIsInNwZWN1bGF0aXZlIl0sWzUyLCJoIiwiYWVfYmxvY2tfaGlzdG9yeSJdLFs1MiwiaSIsInBhZ2VfdmlldyJdLFs1MiwiaiIsImlzUmVnaXN0ZXJlZCJdLFs1MiwiayIsImVtX2V2ZW50Il0sWzUyLCJsIixbMTcsWzE1LCJhIl0sImluc3RhbmNlRGVzdGluYXRpb25JZCJdXSxbMjIsWyJjIixbMTUsImwiXSxbMTUsImgiXV0sWzQ2LFsyLFsxNSwiYSJdLCJndG1PblN1Y2Nlc3MiLFs3XV0sWzM2XV1dLFsyLFsxNSwiZiJdLCJyZWdpc3RlclBhZ2VWaWV3QWN0aXZpdHlDYWxsYmFjayIsWzcsWzE1LCJsIl1dXSxbMjIsWzIsWzE1LCJlIl0sImdldEl0ZW0iLFs3LFsxNSwiaiJdXV0sWzQ2LFsyLFsxNSwiYSJdLCJndG1PblN1Y2Nlc3MiLFs3XV0sWzM2XV1dLFs1MiwibSIsWyJyZXF1aXJlIiwiaW50ZXJuYWwuYWRkRGF0YUxheWVyRXZlbnRMaXN0ZW5lciJdXSxbNTIsIm4iLFsicmVxdWlyZSIsImludGVybmFsLmVuYWJsZUF1dG9FdmVudE9uSGlzdG9yeUNoYW5nZSJdXSxbNTIsIm8iLFsicmVxdWlyZSIsImludGVybmFsLmdldERlc3RpbmF0aW9uSWRzIl1dLFs1MiwicCIsWyJyZXF1aXJlIiwiaW50ZXJuYWwuc2VuZEd0YWdFdmVudCJdXSxbNTIsInEiLFs4LCJpbnRlcnZhbCIsMTAwMCwidXNlVjJFdmVudE5hbWUiLHRydWVdXSxbNTIsInIiLFsibiIsWzE1LCJxIl1dXSxbMjIsWzI4LFsxNSwiciJdXSxbNDYsWzIsWzE1LCJhIl0sImd0bU9uRmFpbHVyZSIsWzddXSxbMzZdXV0sWzIsWzE1LCJlIl0sInNldEl0ZW0iLFs3LFsxNSwiaiJdLHRydWVdXSxbIm0iLCJndG0uaGlzdG9yeUNoYW5nZS12MiIsWzUxLCIiLFs3LCJ0IiwidSJdLFsidSJdLFs1MiwidiIsWzE2LFsxNSwidCJdLCJndG0ub2xkVXJsIl1dLFsyMixbMjAsWzE2LFsxNSwidCJdLCJndG0ubmV3VXJsIl0sWzE1LCJ2Il1dLFs0NixbMzZdXV0sWzUyLCJ3IixbMTYsWzE1LCJ0Il0sImd0bS5oaXN0b3J5Q2hhbmdlU291cmNlIl1dLFsyMixbMSxbMSxbMjEsWzE1LCJ3Il0sInB1c2hTdGF0ZSJdLFsyMSxbMTUsInciXSwicG9wc3RhdGUiXV0sWzIxLFsxNSwidyJdLCJyZXBsYWNlU3RhdGUiXV0sWzQ2LFszNl1dXSxbNTIsIngiLFs4XV0sWzIyLFsxNyxbMTUsImEiXSwiaW5jbHVkZVBhcmFtcyJdLFs0NixbNDMsWzE1LCJ4Il0sInBhZ2VfbG9jYXRpb24iLFsxNixbMTUsInQiXSwiZ3RtLm5ld1VybCJdXSxbNDMsWzE1LCJ4Il0sInBhZ2VfcmVmZXJyZXIiLFsxNSwidiJdXV1dLFs1MiwieSIsWzgsImV2ZW50SWQiLFsxNixbMTUsInQiXSwiZ3RtLnVuaXF1ZUV2ZW50SWQiXV1dLFsyMixbMTYsWzE1LCJiIl0sImVuYWJsZURlZmVyQWxsRW5oYW5jZWRNZWFzdXJlbWVudCJdLFs0NixbNDMsWzE1LCJ5Il0sImRlZmVycmFibGUiLHRydWVdXV0sWyJzIixbMTUsInkiXV0sWyJwIixbIm8iXSxbMTUsImkiXSxbMTUsIngiXSxbMTUsInkiXV1dLFsxNSwiciJdXSxbMixbMTUsImEiXSwiZ3RtT25TdWNjZXNzIixbN11dXQogLFs1MCwiX19jY2RfZW1fc2Nyb2xsIixbNDYsImEiXSxbNTAsInEiLFs0NiwiciJdLFs1MiwicyIsWzhdXSxbNDMsWzE1LCJzIl0sWzE1LCJqIl0sdHJ1ZV0sWzQzLFsxNSwicyJdLFsxNSwiZiJdLHRydWVdLFs0MyxbMTUsInIiXSwiZXZlbnRNZXRhZGF0YSIsWzE1LCJzIl1dXSxbNTIsImIiLFsxMyxbNDEsIiQwIl0sWzMsIiQwIixbInJlcXVpcmUiLCJpbnRlcm5hbC5nZXRGbGFncyJdXSxbIiQwIl1dXSxbNTIsImMiLFsicmVxdWlyZSIsImludGVybmFsLmdldFByb2R1Y3RTZXR0aW5nc1BhcmFtZXRlciJdXSxbNTIsImQiLFsicmVxdWlyZSIsInRlbXBsYXRlU3RvcmFnZSJdXSxbNTIsImUiLFsxNSwiX19tb2R1bGVfY2NkRW1TY3JvbGxBY3Rpdml0eSJdXSxbNTIsImYiLCJzcGVjdWxhdGl2ZSJdLFs1MiwiZyIsImFlX2Jsb2NrX3Njcm9sbCJdLFs1MiwiaCIsInNjcm9sbCJdLFs1MiwiaSIsImlzUmVnaXN0ZXJlZCJdLFs1MiwiaiIsImVtX2V2ZW50Il0sWzUyLCJrIixbMTcsWzE1LCJhIl0sImluc3RhbmNlRGVzdGluYXRpb25JZCJdXSxbMjIsWyJjIixbMTUsImsiXSxbMTUsImciXV0sWzQ2LFsyLFsxNSwiYSJdLCJndG1PblN1Y2Nlc3MiLFs3XV0sWzM2XV1dLFsyLFsxNSwiZSJdLCJyZWdpc3RlclNjcm9sbEFjdGl2aXR5Q2FsbGJhY2siLFs3LFsxNSwiayJdLFsxNyxbMTUsImEiXSwiaW5jbHVkZVBhcmFtcyJdXV0sWzIyLFsyLFsxNSwiZCJdLCJnZXRJdGVtIixbNyxbMTUsImkiXV1dLFs0NixbMixbMTUsImEiXSwiZ3RtT25TdWNjZXNzIixbN11dLFszNl1dXSxbNTIsImwiLFsicmVxdWlyZSIsImludGVybmFsLmFkZERhdGFMYXllckV2ZW50TGlzdGVuZXIiXV0sWzUyLCJtIixbInJlcXVpcmUiLCJpbnRlcm5hbC5lbmFibGVBdXRvRXZlbnRPblNjcm9sbCJdXSxbNTIsIm4iLFsicmVxdWlyZSIsImludGVybmFsLmdldERlc3RpbmF0aW9uSWRzIl1dLFs1MiwibyIsWyJyZXF1aXJlIiwiaW50ZXJuYWwuc2VuZEd0YWdFdmVudCJdXSxbNTIsInAiLFsibSIsWzgsInZlcnRpY2FsVGhyZXNob2xkVW5pdHMiLCJQRVJDRU5UIiwidmVydGljYWxUaHJlc2hvbGRzIiw5MF1dXSxbMjIsWzI4LFsxNSwicCJdXSxbNDYsWzIsWzE1LCJhIl0sImd0bU9uRmFpbHVyZSIsWzddXSxbMzZdXV0sWzIsWzE1LCJkIl0sInNldEl0ZW0iLFs3LFsxNSwiaSJdLHRydWVdXSxbImwiLCJndG0uc2Nyb2xsRGVwdGgiLFs1MSwiIixbNywiciIsInMiXSxbInMiXSxbNTIsInQiLFs4LCJldmVudElkIixbMTYsWzE1LCJyIl0sImd0bS51bmlxdWVFdmVudElkIl1dXSxbMjIsWzE2LFsxNSwiYiJdLCJlbmFibGVEZWZlckFsbEVuaGFuY2VkTWVhc3VyZW1lbnQiXSxbNDYsWzQzLFsxNSwidCJdLCJkZWZlcnJhYmxlIix0cnVlXV1dLFs1MiwidSIsWzgsInBlcmNlbnRfc2Nyb2xsZWQiLFsxNixbMTUsInIiXSwiZ3RtLnNjcm9sbFRocmVzaG9sZCJdXV0sWyJxIixbMTUsInQiXV0sWyJvIixbIm4iXSxbMTUsImgiXSxbMTUsInUiXSxbMTUsInQiXV1dLFsxNSwicCJdXSxbMixbMTUsImEiXSwiZ3RtT25TdWNjZXNzIixbN11dXQogLFs1MCwiX19jY2RfZW1fc2l0ZV9zZWFyY2giLFs0NiwiYSJdLFs1MiwiYiIsWyJyZXF1aXJlIiwiZ2V0UXVlcnlQYXJhbWV0ZXJzIl1dLFs1MiwiYyIsWyJyZXF1aXJlIiwiaW50ZXJuYWwuc2VuZEd0YWdFdmVudCJdXSxbNTIsImQiLFsicmVxdWlyZSIsImdldENvbnRhaW5lclZlcnNpb24iXV0sWzUyLCJlIixbMTUsIl9fbW9kdWxlX2NjZEVtU2l0ZVNlYXJjaEFjdGl2aXR5Il1dLFs1MiwiZiIsWzIsWzE1LCJlIl0sImdldFNlYXJjaFRlcm0iLFs3LFsxNyxbMTUsImEiXSwic2VhcmNoUXVlcnlQYXJhbXMiXSxbMTUsImIiXV1dXSxbNTIsImciLFszMCxbMTcsWzE1LCJhIl0sImluc3RhbmNlRGVzdGluYXRpb25JZCJdLFsxNyxbImQiXSwiY29udGFpbmVySWQiXV1dLFs1MiwiaCIsWzgsImRlZmVycmFibGUiLHRydWUsImV2ZW50SWQiLFsxNyxbMTUsImEiXSwiZ3RtRXZlbnRJZCJdLCJldmVudE1ldGFkYXRhIixbOCwiZW1fZXZlbnQiLHRydWVdXV0sWzIyLFsxNSwiZiJdLFs0NixbNTMsWzUyLCJpIixbMzksWzI4LFsyOCxbMTcsWzE1LCJhIl0sImluY2x1ZGVQYXJhbXMiXV1dLFsyLFsxNSwiZSJdLCJidWlsZEV2ZW50UGFyYW1zIixbNyxbMTUsImYiXSxbMTcsWzE1LCJhIl0sImFkZGl0aW9uYWxRdWVyeVBhcmFtcyJdLFsxNSwiYiJdXV0sWzhdXV0sWyJjIixbMTUsImciXSwidmlld19zZWFyY2hfcmVzdWx0cyIsWzE1LCJpIl0sWzE1LCJoIl1dXV1dLFsyLFsxNSwiYSJdLCJndG1PblN1Y2Nlc3MiLFs3XV1dCiAsWzUwLCJfX2NjZF9lbV92aWRlbyIsWzQ2LCJhIl0sWzUwLCJzIixbNDYsInQiXSxbNTIsInUiLFs4XV0sWzQzLFsxNSwidSJdLFsxNSwibCJdLHRydWVdLFs0MyxbMTUsInUiXSxbMTUsImYiXSx0cnVlXSxbNDMsWzE1LCJ0Il0sImV2ZW50TWV0YWRhdGEiLFsxNSwidSJdXV0sWzUyLCJiIixbMTMsWzQxLCIkMCJdLFszLCIkMCIsWyJyZXF1aXJlIiwiaW50ZXJuYWwuZ2V0RmxhZ3MiXV0sWyIkMCJdXV0sWzUyLCJjIixbInJlcXVpcmUiLCJpbnRlcm5hbC5nZXRQcm9kdWN0U2V0dGluZ3NQYXJhbWV0ZXIiXV0sWzUyLCJkIixbInJlcXVpcmUiLCJ0ZW1wbGF0ZVN0b3JhZ2UiXV0sWzUyLCJlIixbMTUsIl9fbW9kdWxlX2NjZEVtVmlkZW9BY3Rpdml0eSJdXSxbNTIsImYiLCJzcGVjdWxhdGl2ZSJdLFs1MiwiZyIsImFlX2Jsb2NrX3ZpZGVvIl0sWzUyLCJoIiwidmlkZW9fc3RhcnQiXSxbNTIsImkiLCJ2aWRlb19wcm9ncmVzcyJdLFs1MiwiaiIsInZpZGVvX2NvbXBsZXRlIl0sWzUyLCJrIiwiaXNSZWdpc3RlcmVkIl0sWzUyLCJsIiwiZW1fZXZlbnQiXSxbNTIsIm0iLFsxNyxbMTUsImEiXSwiaW5zdGFuY2VEZXN0aW5hdGlvbklkIl1dLFsyMixbImMiLFsxNSwibSJdLFsxNSwiZyJdXSxbNDYsWzIsWzE1LCJhIl0sImd0bU9uU3VjY2VzcyIsWzddXSxbMzZdXV0sWzIsWzE1LCJlIl0sInJlZ2lzdGVyVmlkZW9BY3Rpdml0eUNhbGxiYWNrIixbNyxbMTUsIm0iXSxbMTcsWzE1LCJhIl0sImluY2x1ZGVQYXJhbXMiXV1dLFsyMixbMixbMTUsImQiXSwiZ2V0SXRlbSIsWzcsWzE1LCJrIl1dXSxbNDYsWzIsWzE1LCJhIl0sImd0bU9uU3VjY2VzcyIsWzddXSxbMzZdXV0sWzUyLCJuIixbInJlcXVpcmUiLCJpbnRlcm5hbC5hZGREYXRhTGF5ZXJFdmVudExpc3RlbmVyIl1dLFs1MiwibyIsWyJyZXF1aXJlIiwiaW50ZXJuYWwuZW5hYmxlQXV0b0V2ZW50T25Zb3VUdWJlQWN0aXZpdHkiXV0sWzUyLCJwIixbInJlcXVpcmUiLCJpbnRlcm5hbC5nZXREZXN0aW5hdGlvbklkcyJdXSxbNTIsInEiLFsicmVxdWlyZSIsImludGVybmFsLnNlbmRHdGFnRXZlbnQiXV0sWzUyLCJyIixbIm8iLFs4LCJjYXB0dXJlQ29tcGxldGUiLHRydWUsImNhcHR1cmVTdGFydCIsdHJ1ZSwicHJvZ3Jlc3NUaHJlc2hvbGRzUGVyY2VudCIsWzcsMTAsMjUsNTAsNzVdXV1dLFsyMixbMjgsWzE1LCJyIl1dLFs0NixbMixbMTUsImEiXSwiZ3RtT25GYWlsdXJlIixbN11dLFszNl1dXSxbMixbMTUsImQiXSwic2V0SXRlbSIsWzcsWzE1LCJrIl0sdHJ1ZV1dLFsibiIsImd0bS52aWRlbyIsWzUxLCIiLFs3LCJ0IiwidSJdLFsidSJdLFs1MiwidiIsWzE2LFsxNSwidCJdLCJndG0udmlkZW9TdGF0dXMiXV0sWzQxLCJ3Il0sWzIyLFsyMCxbMTUsInYiXSwic3RhcnQiXSxbNDYsWzMsInciLFsxNSwiaCJdXV0sWzQ2LFsyMixbMjAsWzE1LCJ2Il0sInByb2dyZXNzIl0sWzQ2LFszLCJ3IixbMTUsImkiXV1dLFs0NixbMjIsWzIwLFsxNSwidiJdLCJjb21wbGV0ZSJdLFs0NixbMywidyIsWzE1LCJqIl1dXSxbNDYsWzM2XV1dXV1dXSxbNTIsIngiLFs4LCJ2aWRlb19jdXJyZW50X3RpbWUiLFsxNixbMTUsInQiXSwiZ3RtLnZpZGVvQ3VycmVudFRpbWUiXSwidmlkZW9fZHVyYXRpb24iLFsxNixbMTUsInQiXSwiZ3RtLnZpZGVvRHVyYXRpb24iXSwidmlkZW9fcGVyY2VudCIsWzE2LFsxNSwidCJdLCJndG0udmlkZW9QZXJjZW50Il0sInZpZGVvX3Byb3ZpZGVyIixbMTYsWzE1LCJ0Il0sImd0bS52aWRlb1Byb3ZpZGVyIl0sInZpZGVvX3RpdGxlIixbMTYsWzE1LCJ0Il0sImd0bS52aWRlb1RpdGxlIl0sInZpZGVvX3VybCIsWzE2LFsxNSwidCJdLCJndG0udmlkZW9VcmwiXSwidmlzaWJsZSIsWzE2LFsxNSwidCJdLCJndG0udmlkZW9WaXNpYmxlIl1dXSxbNTIsInkiLFs4LCJldmVudElkIixbMTYsWzE1LCJ0Il0sImd0bS51bmlxdWVFdmVudElkIl1dXSxbMjIsWzE2LFsxNSwiYiJdLCJlbmFibGVEZWZlckFsbEVuaGFuY2VkTWVhc3VyZW1lbnQiXSxbNDYsWzQzLFsxNSwieSJdLCJkZWZlcnJhYmxlIix0cnVlXV1dLFsicyIsWzE1LCJ5Il1dLFsicSIsWyJwIl0sWzE1LCJ3Il0sWzE1LCJ4Il0sWzE1LCJ5Il1dXSxbMTUsInIiXV0sWzIsWzE1LCJhIl0sImd0bU9uU3VjY2VzcyIsWzddXV0KICxbNTAsIl9fY2NkX2dhX3JlZ3Njb3BlIixbNDYsImEiXSxbNTIsImIiLFsxNSwiX19tb2R1bGVfY2NkR2FSZWdpb25TY29wZWRTZXR0aW5ncyJdXSxbMixbMTUsImIiXSwiYXBwbHlSZWdpb25TY29wZWRTZXR0aW5ncyIsWzcsWzE1LCJhIl1dXSxbMixbMTUsImEiXSwiZ3RtT25TdWNjZXNzIixbN11dXQogLFs1MCwiX19vZ3RfZ29vZ2xlX3NpZ25hbHMiLFs0NiwiYSJdLFs1MiwiYiIsWyJyZXF1aXJlIiwiaW50ZXJuYWwuc2V0UHJvZHVjdFNldHRpbmdzUGFyYW1ldGVyIl1dLFs1MiwiYyIsWyJyZXF1aXJlIiwiZ2V0Q29udGFpbmVyVmVyc2lvbiJdXSxbNTIsImQiLFsxMyxbNDEsIiQwIl0sWzMsIiQwIixbInJlcXVpcmUiLCJpbnRlcm5hbC5nZXRGbGFncyJdXSxbIiQwIl1dXSxbNTIsImUiLFszMCxbMTcsWzE1LCJhIl0sImluc3RhbmNlRGVzdGluYXRpb25JZCJdLFsxNyxbImMiXSwiY29udGFpbmVySWQiXV1dLFsiYiIsWzE1LCJlIl0sImdvb2dsZV9zaWduYWxzIixbMjAsWzE3LFsxNSwiYSJdLCJzZXJ2ZXJNYWNyb1Jlc3VsdCJdLDFdXSxbImIiLFsxNSwiZSJdLCJnb29nbGVfb25vIixbMjAsWzE3LFsxNSwiYSJdLCJzZXJ2ZXJNYWNyb1Jlc3VsdCJdLDJdXSxbMixbMTUsImEiXSwiZ3RtT25TdWNjZXNzIixbN11dXQogLFs1MCwiX19zZXRfcHJvZHVjdF9zZXR0aW5ncyIsWzQ2LCJhIl0sWzIsWzE1LCJhIl0sImd0bU9uU3VjY2VzcyIsWzddXV0KICxbNTIsIl9fbW9kdWxlX2FjdGl2aXRpZXMiLFsxMyxbNDEsIiQwIl0sWzMsIiQwIixbNTEsIiIsWzddLFs1MCwiYSIsWzQ2XSxbNTAsImIiLFs0NiwiYyIsImQiXSxbMzYsWzM5LFsxNSwiZCJdLFsiZCIsWzE1LCJjIl1dLFsxNSwiYyJdXV1dLFszNixbOCwid2l0aFJlcXVlc3RDb250ZXh0IixbMTUsImIiXV1dXSxbMzYsWyJhIl1dXV0sWyIkMCJdXV0KICxbNTIsIl9fbW9kdWxlX2NjZEVtRG93bmxvYWRBY3Rpdml0eSIsWzEzLFs0MSwiJDAiXSxbMywiJDAiLFs1MSwiIixbN10sWzUwLCJhIixbNDZdLFs1MCwiaCIsWzQ2LCJpIiwiaiJdLFsiYyIsWzE1LCJpIl0sWzUxLCIiLFs3LCJrIl0sWzIyLFszMCxbMjEsWzIsWzE1LCJrIl0sImdldEV2ZW50TmFtZSIsWzddXSxbMTUsImYiXV0sWzI4LFsyLFsxNSwiayJdLCJnZXRNZXRhZGF0YSIsWzcsWzE1LCJnIl1dXV1dLFs0NixbMzZdXV0sWzIyLFsiYiIsWzE1LCJpIl0sWzE1LCJlIl1dLFs0NixbMixbMTUsImsiXSwiYWJvcnQiLFs3XV0sWzM2XV1dLFsyLFsxNSwiayJdLCJzZXRNZXRhZGF0YSIsWzcsWzE1LCJkIl0sZmFsc2VdXSxbMjIsWzI4LFsxNSwiaiJdXSxbNDYsWzIsWzE1LCJrIl0sInNldEhpdERhdGEiLFs3LCJsaW5rX2lkIixbNDRdXV0sWzIsWzE1LCJrIl0sInNldEhpdERhdGEiLFs3LCJsaW5rX3VybCIsWzQ0XV1dLFsyLFsxNSwiayJdLCJzZXRIaXREYXRhIixbNywibGlua190ZXh0IixbNDRdXV0sWzIsWzE1LCJrIl0sInNldEhpdERhdGEiLFs3LCJmaWxlX25hbWUiLFs0NF1dXSxbMixbMTUsImsiXSwic2V0SGl0RGF0YSIsWzcsImZpbGVfZXh0ZW5zaW9uIixbNDRdXV1dXV1dXSxbNTIsImIiLFsicmVxdWlyZSIsImludGVybmFsLmdldFByb2R1Y3RTZXR0aW5nc1BhcmFtZXRlciJdXSxbNTIsImMiLFsicmVxdWlyZSIsImludGVybmFsLnJlZ2lzdGVyQ2NkQ2FsbGJhY2siXV0sWzUyLCJkIiwic3BlY3VsYXRpdmUiXSxbNTIsImUiLCJhZV9ibG9ja19kb3dubG9hZHMiXSxbNTIsImYiLCJmaWxlX2Rvd25sb2FkIl0sWzUyLCJnIiwiZW1fZXZlbnQiXSxbMzYsWzgsInJlZ2lzdGVyRG93bmxvYWRBY3Rpdml0eUNhbGxiYWNrIixbMTUsImgiXV1dXSxbMzYsWyJhIl1dXV0sWyIkMCJdXV0KICxbNTIsIl9fbW9kdWxlX2NjZEVtRm9ybUFjdGl2aXR5IixbMTMsWzQxLCIkMCJdLFszLCIkMCIsWzUxLCIiLFs3XSxbNTAsImEiLFs0Nl0sWzUwLCJsIixbNDYsIm0iLCJuIiwibyJdLFsyMixbMSxbMTUsImsiXSxbMjAsWzE1LCJuIl0sWzQ0XV1dLFs0NixbMywibiIsWzIwLFsyLFsxNSwibSJdLCJpbmRleE9mIixbNywiQVctIl1dLDBdXV1dLFsiZCIsWzE1LCJtIl0sWzUxLCIiLFs3LCJwIl0sWzUyLCJxIixbMixbMTUsInAiXSwiZ2V0RXZlbnROYW1lIixbN11dXSxbNTIsInIiLFszMCxbMjAsWzE1LCJxIl0sWzE1LCJoIl1dLFsyMCxbMTUsInEiXSxbMTUsImciXV1dXSxbMjIsWzMwLFsyOCxbMTUsInIiXV0sWzI4LFsyLFsxNSwicCJdLCJnZXRNZXRhZGF0YSIsWzcsWzE1LCJpIl1dXV1dLFs0NixbMzZdXV0sWzIyLFsiYyIsWzE1LCJtIl0sWzE1LCJmIl1dLFs0NixbMixbMTUsInAiXSwiYWJvcnQiLFs3XV0sWzM2XV1dLFsyMixbMTUsImsiXSxbNDYsWzIyLFsxLFsyOCxbMTUsIm4iXV0sWzIsWzE1LCJwIl0sImdldE1ldGFkYXRhIixbNyxbMTUsImoiXV1dXSxbNDYsWzIsWzE1LCJwIl0sImFib3J0IixbN11dLFszNl1dXV1dLFsyLFsxNSwicCJdLCJzZXRNZXRhZGF0YSIsWzcsWzE1LCJlIl0sZmFsc2VdXSxbMjIsWzI4LFsxNSwibyJdXSxbNDYsWzIsWzE1LCJwIl0sInNldEhpdERhdGEiLFs3LCJmb3JtX2lkIixbNDRdXV0sWzIsWzE1LCJwIl0sInNldEhpdERhdGEiLFs3LCJmb3JtX25hbWUiLFs0NF1dXSxbMixbMTUsInAiXSwic2V0SGl0RGF0YSIsWzcsImZvcm1fZGVzdGluYXRpb24iLFs0NF1dXSxbMixbMTUsInAiXSwic2V0SGl0RGF0YSIsWzcsImZvcm1fbGVuZ3RoIixbNDRdXV0sWzIyLFsyMCxbMTUsInEiXSxbMTUsImciXV0sWzQ2LFsyLFsxNSwicCJdLCJzZXRIaXREYXRhIixbNywiZm9ybV9zdWJtaXRfdGV4dCIsWzQ0XV1dXSxbNDYsWzIyLFsyMCxbMTUsInEiXSxbMTUsImgiXV0sWzQ2LFsyLFsxNSwicCJdLCJzZXRIaXREYXRhIixbNywiZmlyc3RfZmllbGRfaWQiLFs0NF1dXSxbMixbMTUsInAiXSwic2V0SGl0RGF0YSIsWzcsImZpcnN0X2ZpZWxkX25hbWUiLFs0NF1dXSxbMixbMTUsInAiXSwic2V0SGl0RGF0YSIsWzcsImZpcnN0X2ZpZWxkX3R5cGUiLFs0NF1dXSxbMixbMTUsInAiXSwic2V0SGl0RGF0YSIsWzcsImZpcnN0X2ZpZWxkX3Bvc2l0aW9uIixbNDRdXV1dXV1dXV1dXV0sWzUyLCJiIixbMTMsWzQxLCIkMCJdLFszLCIkMCIsWyJyZXF1aXJlIiwiaW50ZXJuYWwuZ2V0RmxhZ3MiXV0sWyIkMCJdXV0sWzUyLCJjIixbInJlcXVpcmUiLCJpbnRlcm5hbC5nZXRQcm9kdWN0U2V0dGluZ3NQYXJhbWV0ZXIiXV0sWzUyLCJkIixbInJlcXVpcmUiLCJpbnRlcm5hbC5yZWdpc3RlckNjZENhbGxiYWNrIl1dLFs1MiwiZSIsInNwZWN1bGF0aXZlIl0sWzUyLCJmIiwiYWVfYmxvY2tfZm9ybSJdLFs1MiwiZyIsImZvcm1fc3VibWl0Il0sWzUyLCJoIiwiZm9ybV9zdGFydCJdLFs1MiwiaSIsImVtX2V2ZW50Il0sWzUyLCJqIiwiZm9ybV9ldmVudF9jYW5jZWxlZCJdLFs1MiwiayIsWzI4LFsyOCxbMTYsWzE1LCJiIl0sImVuYWJsZUZvcm1Ta2lwVmFsaWRhdGlvbiJdXV1dLFszNixbOCwicmVnaXN0ZXJGb3JtQWN0aXZpdHlDYWxsYmFjayIsWzE1LCJsIl1dXV0sWzM2LFsiYSJdXV1dLFsiJDAiXV1dCiAsWzUyLCJfX21vZHVsZV9jY2RFbU91dGJvdW5kQ2xpY2tBY3Rpdml0eSIsWzEzLFs0MSwiJDAiXSxbMywiJDAiLFs1MSwiIixbN10sWzUwLCJhIixbNDZdLFs1MCwiaCIsWzQ2LCJpIiwiaiJdLFsiYyIsWzE1LCJpIl0sWzUxLCIiLFs3LCJrIl0sWzIyLFszMCxbMjEsWzIsWzE1LCJrIl0sImdldEV2ZW50TmFtZSIsWzddXSxbMTUsImYiXV0sWzI4LFsyLFsxNSwiayJdLCJnZXRNZXRhZGF0YSIsWzcsWzE1LCJnIl1dXV1dLFs0NixbMzZdXV0sWzIyLFsiYiIsWzE1LCJpIl0sWzE1LCJlIl1dLFs0NixbMixbMTUsImsiXSwiYWJvcnQiLFs3XV0sWzM2XV1dLFsyLFsxNSwiayJdLCJzZXRNZXRhZGF0YSIsWzcsWzE1LCJkIl0sZmFsc2VdXSxbMjIsWzI4LFsxNSwiaiJdXSxbNDYsWzIsWzE1LCJrIl0sInNldEhpdERhdGEiLFs3LCJsaW5rX2lkIixbNDRdXV0sWzIsWzE1LCJrIl0sInNldEhpdERhdGEiLFs3LCJsaW5rX2NsYXNzZXMiLFs0NF1dXSxbMixbMTUsImsiXSwic2V0SGl0RGF0YSIsWzcsImxpbmtfdXJsIixbNDRdXV0sWzIsWzE1LCJrIl0sInNldEhpdERhdGEiLFs3LCJsaW5rX2RvbWFpbiIsWzQ0XV1dLFsyLFsxNSwiayJdLCJzZXRIaXREYXRhIixbNywib3V0Ym91bmQiLFs0NF1dXV1dXV1dLFs1MiwiYiIsWyJyZXF1aXJlIiwiaW50ZXJuYWwuZ2V0UHJvZHVjdFNldHRpbmdzUGFyYW1ldGVyIl1dLFs1MiwiYyIsWyJyZXF1aXJlIiwiaW50ZXJuYWwucmVnaXN0ZXJDY2RDYWxsYmFjayJdXSxbNTIsImQiLCJzcGVjdWxhdGl2ZSJdLFs1MiwiZSIsImFlX2Jsb2NrX291dGJvdW5kX2NsaWNrIl0sWzUyLCJmIiwiY2xpY2siXSxbNTIsImciLCJlbV9ldmVudCJdLFszNixbOCwicmVnaXN0ZXJPdXRiYWNrQ2xpY2tBY3Rpdml0eUNhbGxiYWNrIixbMTUsImgiXV1dXSxbMzYsWyJhIl1dXV0sWyIkMCJdXV0KICxbNTIsIl9fbW9kdWxlX2NjZEVtUGFnZVZpZXdBY3Rpdml0eSIsWzEzLFs0MSwiJDAiXSxbMywiJDAiLFs1MSwiIixbN10sWzUwLCJhIixbNDZdLFs1MCwiaiIsWzQ2LCJrIl0sWyJjIixbMTUsImsiXSxbNTEsIiIsWzcsImwiXSxbMjIsWzMwLFsyMSxbMixbMTUsImwiXSwiZ2V0RXZlbnROYW1lIixbN11dLFsxNSwiaCJdXSxbMjgsWzIsWzE1LCJsIl0sImdldE1ldGFkYXRhIixbNyxbMTUsImkiXV1dXV0sWzQ2LFszNl1dXSxbMjIsWyJiIixbMTUsImsiXSxbMTUsImciXV0sWzQ2LFsyLFsxNSwibCJdLCJhYm9ydCIsWzddXSxbMzZdXV0sWzIyLFsyOCxbMixbMTUsImwiXSwiZ2V0TWV0YWRhdGEiLFs3LFsxNSwiZiJdXV1dLFs0NixbImQiLFsxNSwiayJdLCJwYWdlX3JlZmVycmVyIixbMixbMTUsImwiXSwiZ2V0SGl0RGF0YSIsWzcsInBhZ2VfcmVmZXJyZXIiXV1dXV0sWzIsWzE1LCJsIl0sInNldE1ldGFkYXRhIixbNyxbMTUsImUiXSxmYWxzZV1dXV1dLFs1MiwiYiIsWyJyZXF1aXJlIiwiaW50ZXJuYWwuZ2V0UHJvZHVjdFNldHRpbmdzUGFyYW1ldGVyIl1dLFs1MiwiYyIsWyJyZXF1aXJlIiwiaW50ZXJuYWwucmVnaXN0ZXJDY2RDYWxsYmFjayJdXSxbNTIsImQiLFsicmVxdWlyZSIsImludGVybmFsLnNldFJlbW90ZUNvbmZpZ1BhcmFtZXRlciJdXSxbNTIsImUiLCJzcGVjdWxhdGl2ZSJdLFs1MiwiZiIsImlzX3NndG1fcHJlaGl0Il0sWzUyLCJnIiwiYWVfYmxvY2tfaGlzdG9yeSJdLFs1MiwiaCIsInBhZ2VfdmlldyJdLFs1MiwiaSIsImVtX2V2ZW50Il0sWzM2LFs4LCJyZWdpc3RlclBhZ2VWaWV3QWN0aXZpdHlDYWxsYmFjayIsWzE1LCJqIl1dXV0sWzM2LFsiYSJdXV1dLFsiJDAiXV1dCiAsWzUyLCJfX21vZHVsZV9jY2RFbVNpdGVTZWFyY2hBY3Rpdml0eSIsWzEzLFs0MSwiJDAiXSxbMywiJDAiLFs1MSwiIixbN10sWzUwLCJhIixbNDZdLFs1MCwiYiIsWzQ2LCJkIiwiZSJdLFs1MiwiZiIsWzIsWzMwLFsxNSwiZCJdLCIiXSwic3BsaXQiLFs3LCIsIl1dXSxbNTMsWzQxLCJnIl0sWzMsImciLDBdLFs2MyxbNywiZyJdLFsyMyxbMTUsImciXSxbMTcsWzE1LCJmIl0sImxlbmd0aCJdXSxbMzMsWzE1LCJnIl0sWzMsImciLFswLFsxNSwiZyJdLDFdXV0sWzQ2LFs1MyxbNTIsImgiLFsiZSIsWzIsWzE2LFsxNSwiZiJdLFsxNSwiZyJdXSwidHJpbSIsWzddXV1dLFsyMixbMjEsWzE1LCJoIl0sWzQ0XV0sWzQ2LFszNixbMTUsImgiXV1dXV1dXV1dLFs1MCwiYyIsWzQ2LCJkIiwiZSIsImYiXSxbNTIsImciLFs4LCJzZWFyY2hfdGVybSIsWzE1LCJkIl1dXSxbNTIsImgiLFsyLFszMCxbMTUsImUiXSwiIl0sInNwbGl0IixbNywiLCJdXV0sWzUzLFs0MSwiaSJdLFszLCJpIiwwXSxbNjMsWzcsImkiXSxbMjMsWzE1LCJpIl0sWzE3LFsxNSwiaCJdLCJsZW5ndGgiXV0sWzMzLFsxNSwiaSJdLFszLCJpIixbMCxbMTUsImkiXSwxXV1dLFs0NixbNTMsWzUyLCJqIixbMixbMTYsWzE1LCJoIl0sWzE1LCJpIl1dLCJ0cmltIixbN11dXSxbNTIsImsiLFsiZiIsWzE1LCJqIl1dXSxbMjIsWzIxLFsxNSwiayJdLFs0NF1dLFs0NixbNDMsWzE1LCJnIl0sWzAsInFfIixbMTUsImoiXV0sWzE1LCJrIl1dXV1dXV1dLFszNixbMTUsImciXV1dLFszNixbOCwiZ2V0U2VhcmNoVGVybSIsWzE1LCJiIl0sImJ1aWxkRXZlbnRQYXJhbXMiLFsxNSwiYyJdXV1dLFszNixbImEiXV1dXSxbIiQwIl1dXQogLFs1MiwiX19tb2R1bGVfY2NkRW1TY3JvbGxBY3Rpdml0eSIsWzEzLFs0MSwiJDAiXSxbMywiJDAiLFs1MSwiIixbN10sWzUwLCJhIixbNDZdLFs1MCwiaCIsWzQ2LCJpIiwiaiJdLFsiYyIsWzE1LCJpIl0sWzUxLCIiLFs3LCJrIl0sWzIyLFszMCxbMjEsWzIsWzE1LCJrIl0sImdldEV2ZW50TmFtZSIsWzddXSxbMTUsImYiXV0sWzI4LFsyLFsxNSwiayJdLCJnZXRNZXRhZGF0YSIsWzcsWzE1LCJnIl1dXV1dLFs0NixbMzZdXV0sWzIyLFsiYiIsWzE1LCJpIl0sWzE1LCJlIl1dLFs0NixbMixbMTUsImsiXSwiYWJvcnQiLFs3XV0sWzM2XV1dLFsyLFsxNSwiayJdLCJzZXRNZXRhZGF0YSIsWzcsWzE1LCJkIl0sZmFsc2VdXSxbMjIsWzI4LFsxNSwiaiJdXSxbNDYsWzIsWzE1LCJrIl0sInNldEhpdERhdGEiLFs3LCJwZXJjZW50X3Njcm9sbGVkIixbNDRdXV1dXV1dXSxbNTIsImIiLFsicmVxdWlyZSIsImludGVybmFsLmdldFByb2R1Y3RTZXR0aW5nc1BhcmFtZXRlciJdXSxbNTIsImMiLFsicmVxdWlyZSIsImludGVybmFsLnJlZ2lzdGVyQ2NkQ2FsbGJhY2siXV0sWzUyLCJkIiwic3BlY3VsYXRpdmUiXSxbNTIsImUiLCJhZV9ibG9ja19zY3JvbGwiXSxbNTIsImYiLCJzY3JvbGwiXSxbNTIsImciLCJlbV9ldmVudCJdLFszNixbOCwicmVnaXN0ZXJTY3JvbGxBY3Rpdml0eUNhbGxiYWNrIixbMTUsImgiXV1dXSxbMzYsWyJhIl1dXV0sWyIkMCJdXV0KICxbNTIsIl9fbW9kdWxlX2NjZEVtVmlkZW9BY3Rpdml0eSIsWzEzLFs0MSwiJDAiXSxbMywiJDAiLFs1MSwiIixbN10sWzUwLCJhIixbNDZdLFs1MCwiaiIsWzQ2LCJrIiwibCJdLFsiYyIsWzE1LCJrIl0sWzUxLCIiLFs3LCJtIl0sWzUyLCJuIixbMixbMTUsIm0iXSwiZ2V0RXZlbnROYW1lIixbN11dXSxbNTIsIm8iLFszMCxbMzAsWzIwLFsxNSwibiJdLFsxNSwiZiJdXSxbMjAsWzE1LCJuIl0sWzE1LCJnIl1dXSxbMjAsWzE1LCJuIl0sWzE1LCJoIl1dXV0sWzIyLFszMCxbMjgsWzE1LCJvIl1dLFsyOCxbMixbMTUsIm0iXSwiZ2V0TWV0YWRhdGEiLFs3LFsxNSwiaSJdXV1dXSxbNDYsWzM2XV1dLFsyMixbImIiLFsxNSwiayJdLFsxNSwiZSJdXSxbNDYsWzIsWzE1LCJtIl0sImFib3J0IixbN11dLFszNl1dXSxbMixbMTUsIm0iXSwic2V0TWV0YWRhdGEiLFs3LFsxNSwiZCJdLGZhbHNlXV0sWzIyLFsyOCxbMTUsImwiXV0sWzQ2LFsyLFsxNSwibSJdLCJzZXRIaXREYXRhIixbNywidmlkZW9fY3VycmVudF90aW1lIixbNDRdXV0sWzIsWzE1LCJtIl0sInNldEhpdERhdGEiLFs3LCJ2aWRlb19kdXJhdGlvbiIsWzQ0XV1dLFsyLFsxNSwibSJdLCJzZXRIaXREYXRhIixbNywidmlkZW9fcGVyY2VudCIsWzQ0XV1dLFsyLFsxNSwibSJdLCJzZXRIaXREYXRhIixbNywidmlkZW9fcHJvdmlkZXIiLFs0NF1dXSxbMixbMTUsIm0iXSwic2V0SGl0RGF0YSIsWzcsInZpZGVvX3RpdGxlIixbNDRdXV0sWzIsWzE1LCJtIl0sInNldEhpdERhdGEiLFs3LCJ2aWRlb191cmwiLFs0NF1dXSxbMixbMTUsIm0iXSwic2V0SGl0RGF0YSIsWzcsInZpc2libGUiLFs0NF1dXV1dXV1dLFs1MiwiYiIsWyJyZXF1aXJlIiwiaW50ZXJuYWwuZ2V0UHJvZHVjdFNldHRpbmdzUGFyYW1ldGVyIl1dLFs1MiwiYyIsWyJyZXF1aXJlIiwiaW50ZXJuYWwucmVnaXN0ZXJDY2RDYWxsYmFjayJdXSxbNTIsImQiLCJzcGVjdWxhdGl2ZSJdLFs1MiwiZSIsImFlX2Jsb2NrX3ZpZGVvIl0sWzUyLCJmIiwidmlkZW9fc3RhcnQiXSxbNTIsImciLCJ2aWRlb19wcm9ncmVzcyJdLFs1MiwiaCIsInZpZGVvX2NvbXBsZXRlIl0sWzUyLCJpIiwiZW1fZXZlbnQiXSxbMzYsWzgsInJlZ2lzdGVyVmlkZW9BY3Rpdml0eUNhbGxiYWNrIixbMTUsImoiXV1dXSxbMzYsWyJhIl1dXV0sWyIkMCJdXV0KICxbNTIsIl9fbW9kdWxlX2NjZEdhUmVnaW9uU2NvcGVkU2V0dGluZ3MiLFsxMyxbNDEsIiQwIl0sWzMsIiQwIixbNTEsIiIsWzddLFs1MCwiYSIsWzQ2XSxbNTAsImoiLFs0NiwibCIsIm0iXSxbNTAsInIiLFs0NiwicyJdLFsyMixbMzAsWzI4LFsxNSwicCJdXSxbMjEsWzE3LFsxNSwicCJdLCJsZW5ndGgiXSwyXV0sWzQ2LFszNixmYWxzZV1dXSxbNTIsInQiLFsiayIsWzE1LCJzIl1dXSxbNTMsWzQxLCJ1Il0sWzMsInUiLDBdLFs2MyxbNywidSJdLFsyMyxbMTUsInUiXSxbMTcsWzE1LCJ0Il0sImxlbmd0aCJdXSxbMzMsWzE1LCJ1Il0sWzMsInUiLFswLFsxNSwidSJdLDFdXV0sWzQ2LFs1MyxbNTIsInYiLFsxNixbMTUsInQiXSxbMTUsInUiXV1dLFs1MiwidyIsWzE3LFsxNSwidiJdLCJjb3VudHJ5Q29kZSJdXSxbNTIsIngiLFsxNyxbMTUsInYiXSwicmVnaW9uQ29kZSJdXSxbNTIsInkiLFsyMCxbMTUsInciXSxbMTUsInAiXV1dLFs1MiwieiIsWzMwLFsyOCxbMTUsIngiXV0sWzIwLFsxNSwieCJdLFsxNSwicSJdXV1dLFsyMixbMSxbMTUsInkiXSxbMTUsInoiXV0sWzQ2LFszNix0cnVlXV1dXV1dXSxbMzYsZmFsc2VdXSxbMjIsWzI4LFsxNyxbMTUsImwiXSwic2V0dGluZ3NUYWJsZSJdXSxbNDYsWzM2XV1dLFs1MiwibiIsWzMwLFsxNyxbMTUsImwiXSwiaW5zdGFuY2VEZXN0aW5hdGlvbklkIl0sWzE3LFsiYiJdLCJjb250YWluZXJJZCJdXV0sWzUyLCJvIixbImciLFsxNSwiYyJdLFsxNSwibSJdXV0sWzUyLCJwIixbMTMsWzQxLCIkMCJdLFszLCIkMCIsWyJnIixbMTUsImQiXSxbMTUsIm0iXV1dLFsiJDAiXV1dLFs1MiwicSIsWzEzLFs0MSwiJDAiXSxbMywiJDAiLFsiZyIsWzE1LCJlIl0sWzE1LCJtIl1dXSxbIiQwIl1dXSxbNTMsWzQxLCJzIl0sWzMsInMiLDBdLFs2MyxbNywicyJdLFsyMyxbMTUsInMiXSxbMTcsWzE3LFsxNSwibCJdLCJzZXR0aW5nc1RhYmxlIl0sImxlbmd0aCJdXSxbMzMsWzE1LCJzIl0sWzMsInMiLFswLFsxNSwicyJdLDFdXV0sWzQ2LFs1MyxbNTIsInQiLFsxNixbMTcsWzE1LCJsIl0sInNldHRpbmdzVGFibGUiXSxbMTUsInMiXV1dLFsyMixbMzAsWzE3LFsxNSwidCJdLCJkaXNhbGxvd0FsbFJlZ2lvbnMiXSxbInIiLFsxNyxbMTUsInQiXSwiZGlzYWxsb3dlZFJlZ2lvbnMiXV1dLFs0NixbNTMsWzUyLCJ1IixbMTYsWzE1LCJpIl0sWzE3LFsxNSwidCJdLCJyZWRhY3RGaWVsZEdyb3VwIl1dXSxbMjIsWzI4LFsxNSwidSJdXSxbNDYsWzZdXV0sWzUzLFs0MSwidiJdLFszLCJ2IiwwXSxbNjMsWzcsInYiXSxbMjMsWzE1LCJ2Il0sWzE3LFsxNSwidSJdLCJsZW5ndGgiXV0sWzMzLFsxNSwidiJdLFszLCJ2IixbMCxbMTUsInYiXSwxXV1dLFs0NixbNTMsWzUyLCJ3IixbMTYsWzE1LCJ1Il0sWzE1LCJ2Il1dXSxbIm8iLFsxNSwibiJdLFsxNyxbMTUsInciXSwibmFtZSJdLFsxNyxbMTUsInciXSwidmFsdWUiXV1dXV1dXV1dXV1dXV0sWzUwLCJrIixbNDYsImwiXSxbNTIsIm0iLFs3XV0sWzIyLFsyOCxbMTUsImwiXV0sWzQ2LFszNixbMTUsIm0iXV1dXSxbNTIsIm4iLFsyLFsxNSwibCJdLCJzcGxpdCIsWzcsIiwiXV1dLFs1MyxbNDEsIm8iXSxbMywibyIsMF0sWzYzLFs3LCJvIl0sWzIzLFsxNSwibyJdLFsxNyxbMTUsIm4iXSwibGVuZ3RoIl1dLFszMyxbMTUsIm8iXSxbMywibyIsWzAsWzE1LCJvIl0sMV1dXSxbNDYsWzUzLFs1MiwicCIsWzIsWzE2LFsxNSwibiJdLFsxNSwibyJdXSwidHJpbSIsWzddXV0sWzIyLFsyOCxbMTUsInAiXV0sWzQ2LFs2XV1dLFs1MiwicSIsWzIsWzE1LCJwIl0sInNwbGl0IixbNywiLSJdXV0sWzUyLCJyIixbMTYsWzE1LCJxIl0sMF1dLFs1MiwicyIsWzM5LFsyMCxbMTcsWzE1LCJxIl0sImxlbmd0aCJdLDJdLFsxNSwicCJdLFs0NF1dXSxbMjIsWzMwLFsyOCxbMTUsInIiXV0sWzIxLFsxNyxbMTUsInIiXSwibGVuZ3RoIl0sMl1dLFs0NixbNl1dXSxbMjIsWzEsWzIxLFsxNSwicyJdLFs0NF1dLFszMCxbMjMsWzE3LFsxNSwicyJdLCJsZW5ndGgiXSw0XSxbMTgsWzE3LFsxNSwicyJdLCJsZW5ndGgiXSw2XV1dLFs0NixbNl1dXSxbMixbMTUsIm0iXSwicHVzaCIsWzcsWzgsImNvdW50cnlDb2RlIixbMTUsInIiXSwicmVnaW9uQ29kZSIsWzE1LCJzIl1dXV1dXV1dLFszNixbMTUsIm0iXV1dLFs1MiwiYiIsWyJyZXF1aXJlIiwiZ2V0Q29udGFpbmVyVmVyc2lvbiJdXSxbNTIsImMiLFsicmVxdWlyZSIsImludGVybmFsLnNldFJlbW90ZUNvbmZpZ1BhcmFtZXRlciJdXSxbNTIsImQiLFsicmVxdWlyZSIsImludGVybmFsLmdldENvdW50cnlDb2RlIl1dLFs1MiwiZSIsWyJyZXF1aXJlIiwiaW50ZXJuYWwuZ2V0UmVnaW9uQ29kZSJdXSxbNTIsImYiLFsxNSwiX19tb2R1bGVfYWN0aXZpdGllcyJdXSxbNTIsImciLFsxNyxbMTUsImYiXSwid2l0aFJlcXVlc3RDb250ZXh0Il1dLFs0MSwiaCJdLFs1MiwiaSIsWzgsIkdPT0dMRV9TSUdOQUxTIixbNyxbOCwibmFtZSIsImFsbG93X2dvb2dsZV9zaWduYWxzIiwidmFsdWUiLGZhbHNlXV0sIkRFVklDRV9BTkRfR0VPIixbNyxbOCwibmFtZSIsImdlb19ncmFudWxhcml0eSIsInZhbHVlIix0cnVlXSxbOCwibmFtZSIsInJlZGFjdF9kZXZpY2VfaW5mbyIsInZhbHVlIix0cnVlXV1dXSxbMzYsWzgsImFwcGx5UmVnaW9uU2NvcGVkU2V0dGluZ3MiLFsxNSwiaiJdXV1dLFszNixbImEiXV1dXSxbIiQwIl1dXQogCl0KLCJlbnRpdGllcyI6ewoiX19jY2RfY29udmVyc2lvbl9tYXJraW5nIjp7IjIiOnRydWUsIjQiOnRydWV9CiwKIl9fY2NkX2VtX2Rvd25sb2FkIjp7IjIiOnRydWUsIjQiOnRydWV9CiwKIl9fY2NkX2VtX2Zvcm0iOnsiMiI6dHJ1ZSwiNCI6dHJ1ZX0KLAoiX19jY2RfZW1fb3V0Ym91bmRfY2xpY2siOnsiMiI6dHJ1ZSwiNCI6dHJ1ZX0KLAoiX19jY2RfZW1fcGFnZV92aWV3Ijp7IjIiOnRydWUsIjQiOnRydWV9CiwKIl9fY2NkX2VtX3Njcm9sbCI6eyIyIjp0cnVlLCI0Ijp0cnVlfQosCiJfX2NjZF9lbV9zaXRlX3NlYXJjaCI6eyIyIjp0cnVlLCI0Ijp0cnVlfQosCiJfX2NjZF9lbV92aWRlbyI6eyIyIjp0cnVlLCI0Ijp0cnVlfQosCiJfX2NjZF9nYV9yZWdzY29wZSI6eyIyIjp0cnVlLCI0Ijp0cnVlfQosCiJfX29ndF9nb29nbGVfc2lnbmFscyI6eyIyIjp0cnVlLCI0Ijp0cnVlfQosCiJfX3NldF9wcm9kdWN0X3NldHRpbmdzIjp7IjIiOnRydWUsIjQiOnRydWV9CgoKfQosInBlcm1pc3Npb25zIjp7CiJfX2NjZF9jb252ZXJzaW9uX21hcmtpbmciOnt9CiwKIl9fY2NkX2VtX2Rvd25sb2FkIjp7Imxpc3Rlbl9kYXRhX2xheWVyIjp7ImFjY2Vzc1R5cGUiOiJzcGVjaWZpYyIsImFsbG93ZWRFdmVudHMiOlsiZ3RtLmxpbmtDbGljayJdfSwiYWNjZXNzX3RlbXBsYXRlX3N0b3JhZ2UiOnt9LCJkZXRlY3RfbGlua19jbGlja19ldmVudHMiOnsiYWxsb3dXYWl0Rm9yVGFncyI6IiJ9fQosCiJfX2NjZF9lbV9mb3JtIjp7ImFjY2Vzc190ZW1wbGF0ZV9zdG9yYWdlIjp7fSwibGlzdGVuX2RhdGFfbGF5ZXIiOnsiYWNjZXNzVHlwZSI6InNwZWNpZmljIiwiYWxsb3dlZEV2ZW50cyI6WyJndG0uZm9ybUludGVyYWN0IiwiZ3RtLmZvcm1TdWJtaXQiXX0sImRldGVjdF9mb3JtX3N1Ym1pdF9ldmVudHMiOnsiYWxsb3dXYWl0Rm9yVGFncyI6IiJ9LCJkZXRlY3RfZm9ybV9pbnRlcmFjdGlvbl9ldmVudHMiOnt9fQosCiJfX2NjZF9lbV9vdXRib3VuZF9jbGljayI6eyJnZXRfdXJsIjp7InVybFBhcnRzIjoiYW55IiwicXVlcmllc0FsbG93ZWQiOiJhbnkifSwibGlzdGVuX2RhdGFfbGF5ZXIiOnsiYWNjZXNzVHlwZSI6InNwZWNpZmljIiwiYWxsb3dlZEV2ZW50cyI6WyJndG0ubGlua0NsaWNrIl19LCJhY2Nlc3NfdGVtcGxhdGVfc3RvcmFnZSI6e30sImRldGVjdF9saW5rX2NsaWNrX2V2ZW50cyI6eyJhbGxvd1dhaXRGb3JUYWdzIjoiIn19CiwKIl9fY2NkX2VtX3BhZ2VfdmlldyI6eyJsaXN0ZW5fZGF0YV9sYXllciI6eyJhY2Nlc3NUeXBlIjoic3BlY2lmaWMiLCJhbGxvd2VkRXZlbnRzIjpbImd0bS5oaXN0b3J5Q2hhbmdlLXYyIl19LCJhY2Nlc3NfdGVtcGxhdGVfc3RvcmFnZSI6e30sImRldGVjdF9oaXN0b3J5X2NoYW5nZV9ldmVudHMiOnt9fQosCiJfX2NjZF9lbV9zY3JvbGwiOnsibGlzdGVuX2RhdGFfbGF5ZXIiOnsiYWNjZXNzVHlwZSI6InNwZWNpZmljIiwiYWxsb3dlZEV2ZW50cyI6WyJndG0uc2Nyb2xsRGVwdGgiXX0sInByb2Nlc3NfZG9tX2V2ZW50cyI6eyJ0YXJnZXRzIjpbeyJ0YXJnZXRUeXBlIjoid2luZG93IiwiZXZlbnROYW1lIjoicmVzaXplIn0seyJ0YXJnZXRUeXBlIjoid2luZG93IiwiZXZlbnROYW1lIjoic2Nyb2xsIn0seyJ0YXJnZXRUeXBlIjoid2luZG93IiwiZXZlbnROYW1lIjoic2Nyb2xsZW5kIn1dfSwiYWNjZXNzX3RlbXBsYXRlX3N0b3JhZ2UiOnt9LCJkZXRlY3Rfc2Nyb2xsX2V2ZW50cyI6e319CiwKIl9fY2NkX2VtX3NpdGVfc2VhcmNoIjp7ImdldF91cmwiOnsidXJsUGFydHMiOiJhbnkiLCJxdWVyaWVzQWxsb3dlZCI6ImFueSJ9LCJyZWFkX2NvbnRhaW5lcl9kYXRhIjp7fX0KLAoiX19jY2RfZW1fdmlkZW8iOnsibGlzdGVuX2RhdGFfbGF5ZXIiOnsiYWNjZXNzVHlwZSI6InNwZWNpZmljIiwiYWxsb3dlZEV2ZW50cyI6WyJndG0udmlkZW8iXX0sImFjY2Vzc190ZW1wbGF0ZV9zdG9yYWdlIjp7fSwiZGV0ZWN0X3lvdXR1YmVfYWN0aXZpdHlfZXZlbnRzIjp7ImFsbG93Rml4TWlzc2luZ0phdmFTY3JpcHRBcGkiOmZhbHNlfX0KLAoiX19jY2RfZ2FfcmVnc2NvcGUiOnsicmVhZF9jb250YWluZXJfZGF0YSI6e319CiwKIl9fb2d0X2dvb2dsZV9zaWduYWxzIjp7InJlYWRfY29udGFpbmVyX2RhdGEiOnt9fQosCiJfX3NldF9wcm9kdWN0X3NldHRpbmdzIjp7fQoKCn0KCgoKLCJzZWN1cml0eV9ncm91cHMiOnsKImdvb2dsZSI6WwoiX19jY2RfY29udmVyc2lvbl9tYXJraW5nIgosCiJfX2NjZF9lbV9kb3dubG9hZCIKLAoiX19jY2RfZW1fZm9ybSIKLAoiX19jY2RfZW1fb3V0Ym91bmRfY2xpY2siCiwKIl9fY2NkX2VtX3BhZ2VfdmlldyIKLAoiX19jY2RfZW1fc2Nyb2xsIgosCiJfX2NjZF9lbV9zaXRlX3NlYXJjaCIKLAoiX19jY2RfZW1fdmlkZW8iCiwKIl9fY2NkX2dhX3JlZ3Njb3BlIgosCiJfX29ndF9nb29nbGVfc2lnbmFscyIKLAoiX19zZXRfcHJvZHVjdF9zZXR0aW5ncyIKCl0KCgp9CgoKCn07CgoKdmFyIGFhLGJhPWZ1bmN0aW9uKGEpe3ZhciBiPTA7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIGI8YS5sZW5ndGg/e2RvbmU6ITEsdmFsdWU6YVtiKytdfTp7ZG9uZTohMH19fSxkYT1mdW5jdGlvbihhKXtyZXR1cm4gYS5yYXc9YX0sZWE9ZnVuY3Rpb24oYSxiKXthLnJhdz1iO3JldHVybiBhfSxmYT1mdW5jdGlvbihhKXt2YXIgYj0idW5kZWZpbmVkIiE9dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yJiZhW1N5bWJvbC5pdGVyYXRvcl07aWYoYilyZXR1cm4gYi5jYWxsKGEpO2lmKCJudW1iZXIiPT10eXBlb2YgYS5sZW5ndGgpcmV0dXJue25leHQ6YmEoYSl9O3Rocm93IEVycm9yKFN0cmluZyhhKSsiIGlzIG5vdCBhbiBpdGVyYWJsZSBvciBBcnJheUxpa2UiKTt9LGlhPWZ1bmN0aW9uKGEpe2Zvcih2YXIgYixjPVtdOyEoYj1hLm5leHQoKSkuZG9uZTspYy5wdXNoKGIudmFsdWUpO3JldHVybiBjfSxrYT1mdW5jdGlvbihhKXtyZXR1cm4gYSBpbnN0YW5jZW9mIEFycmF5P2E6CmlhKGZhKGEpKX0sbGE9ImZ1bmN0aW9uIj09dHlwZW9mIE9iamVjdC5jcmVhdGU/T2JqZWN0LmNyZWF0ZTpmdW5jdGlvbihhKXt2YXIgYj1mdW5jdGlvbigpe307Yi5wcm90b3R5cGU9YTtyZXR1cm4gbmV3IGJ9LG5hO2lmKCJmdW5jdGlvbiI9PXR5cGVvZiBPYmplY3Quc2V0UHJvdG90eXBlT2YpbmE9T2JqZWN0LnNldFByb3RvdHlwZU9mO2Vsc2V7dmFyIG9hO2E6e3ZhciBwYT17YTohMH0scWE9e307dHJ5e3FhLl9fcHJvdG9fXz1wYTtvYT1xYS5hO2JyZWFrIGF9Y2F0Y2goYSl7fW9hPSExfW5hPW9hP2Z1bmN0aW9uKGEsYil7YS5fX3Byb3RvX189YjtpZihhLl9fcHJvdG9fXyE9PWIpdGhyb3cgbmV3IFR5cGVFcnJvcihhKyIgaXMgbm90IGV4dGVuc2libGUiKTtyZXR1cm4gYX06bnVsbH0KdmFyIHJhPW5hLHNhPWZ1bmN0aW9uKGEsYil7YS5wcm90b3R5cGU9bGEoYi5wcm90b3R5cGUpO2EucHJvdG90eXBlLmNvbnN0cnVjdG9yPWE7aWYocmEpcmEoYSxiKTtlbHNlIGZvcih2YXIgYyBpbiBiKWlmKCJwcm90b3R5cGUiIT1jKWlmKE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKXt2YXIgZD1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGIsYyk7ZCYmT2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYyxkKX1lbHNlIGFbY109YltjXTthLnJvPWIucHJvdG90eXBlfSx0YT1mdW5jdGlvbigpe2Zvcih2YXIgYT1OdW1iZXIodGhpcyksYj1bXSxjPWE7Yzxhcmd1bWVudHMubGVuZ3RoO2MrKyliW2MtYV09YXJndW1lbnRzW2NdO3JldHVybiBifTsvKgoKIENvcHlyaWdodCBUaGUgQ2xvc3VyZSBMaWJyYXJ5IEF1dGhvcnMuCiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMAoqLwp2YXIgdWE9dGhpc3x8c2VsZix2YT1mdW5jdGlvbihhKXtyZXR1cm4gYX07dmFyIHdhPWZ1bmN0aW9uKGEsYil7dGhpcy5oPWE7dGhpcy5zPWJ9O3ZhciB4YT1mdW5jdGlvbigpe3RoaXMuaD17fTt0aGlzLkM9e319O2FhPXhhLnByb3RvdHlwZTthYS5nZXQ9ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMuaFsiZHVzdC4iK2FdfTthYS5zZXQ9ZnVuY3Rpb24oYSxiKXthPSJkdXN0LiIrYTt0aGlzLkMuaGFzT3duUHJvcGVydHkoYSl8fCh0aGlzLmhbYV09Yil9O2FhLmVpPWZ1bmN0aW9uKGEsYil7dGhpcy5zZXQoYSxiKTt0aGlzLkNbImR1c3QuIithXT0hMH07YWEuaGFzPWZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLmguaGFzT3duUHJvcGVydHkoImR1c3QuIithKX07YWEucmVtb3ZlPWZ1bmN0aW9uKGEpe2E9ImR1c3QuIithO3RoaXMuQy5oYXNPd25Qcm9wZXJ0eShhKXx8ZGVsZXRlIHRoaXMuaFthXX07dmFyIHlhPWZ1bmN0aW9uKCl7dGhpcy5xdW90YT17fX07eWEucHJvdG90eXBlLnJlc2V0PWZ1bmN0aW9uKCl7dGhpcy5xdW90YT17fX07dmFyIHphPWZ1bmN0aW9uKGEsYil7dGhpcy5XPWE7dGhpcy5NPWZ1bmN0aW9uKGMsZCxlKXtyZXR1cm4gYy5hcHBseShkLGUpfTt0aGlzLkM9Yjt0aGlzLnM9bmV3IHhhO3RoaXMuaD10aGlzLkY9dm9pZCAwfTt6YS5wcm90b3R5cGUuYWRkPWZ1bmN0aW9uKGEsYil7QmEodGhpcyxhLGIsITEpfTt2YXIgQmE9ZnVuY3Rpb24oYSxiLGMsZCl7ZD9hLnMuZWkoYixjKTphLnMuc2V0KGIsYyl9O3phLnByb3RvdHlwZS5zZXQ9ZnVuY3Rpb24oYSxiKXshdGhpcy5zLmhhcyhhKSYmdGhpcy5DJiZ0aGlzLkMuaGFzKGEpP3RoaXMuQy5zZXQoYSxiKTp0aGlzLnMuc2V0KGEsYil9O3phLnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMucy5oYXMoYSk/dGhpcy5zLmdldChhKTp0aGlzLkM/dGhpcy5DLmdldChhKTp2b2lkIDB9O3phLnByb3RvdHlwZS5oYXM9ZnVuY3Rpb24oYSl7cmV0dXJuISF0aGlzLnMuaGFzKGEpfHwhKCF0aGlzLkN8fCF0aGlzLkMuaGFzKGEpKX07CnZhciBDYT1mdW5jdGlvbihhKXt2YXIgYj1uZXcgemEoYS5XLGEpO2EuRiYmKGIuRj1hLkYpO2IuTT1hLk07Yi5oPWEuaDtyZXR1cm4gYn07dmFyIERhPWZ1bmN0aW9uKCl7fSxFYT1mdW5jdGlvbihhKXtyZXR1cm4iZnVuY3Rpb24iPT09dHlwZW9mIGF9LGs9ZnVuY3Rpb24oYSl7cmV0dXJuInN0cmluZyI9PT10eXBlb2YgYX0sR2E9ZnVuY3Rpb24oYSl7cmV0dXJuIm51bWJlciI9PT10eXBlb2YgYSYmIWlzTmFOKGEpfSxIYT1BcnJheS5pc0FycmF5LElhPWZ1bmN0aW9uKGEsYil7aWYoYSYmSGEoYSkpZm9yKHZhciBjPTA7YzxhLmxlbmd0aDtjKyspaWYoYVtjXSYmYihhW2NdKSlyZXR1cm4gYVtjXX0sSmE9ZnVuY3Rpb24oYSxiKXtpZighR2EoYSl8fCFHYShiKXx8YT5iKWE9MCxiPTIxNDc0ODM2NDc7cmV0dXJuIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSooYi1hKzEpK2EpfSxMYT1mdW5jdGlvbihhLGIpe2Zvcih2YXIgYz1uZXcgS2EsZD0wO2Q8YS5sZW5ndGg7ZCsrKWMuc2V0KGFbZF0sITApO2Zvcih2YXIgZT0wO2U8Yi5sZW5ndGg7ZSsrKWlmKGMuZ2V0KGJbZV0pKXJldHVybiEwO3JldHVybiExfSxsPWZ1bmN0aW9uKGEsCmIpe2Zvcih2YXIgYyBpbiBhKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhLGMpJiZiKGMsYVtjXSl9LE1hPWZ1bmN0aW9uKGEpe3JldHVybiEhYSYmKCJbb2JqZWN0IEFyZ3VtZW50c10iPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGEpfHxPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYSwiY2FsbGVlIikpfSxOYT1mdW5jdGlvbihhKXtyZXR1cm4gTWF0aC5yb3VuZChOdW1iZXIoYSkpfHwwfSxPYT1mdW5jdGlvbihhKXtyZXR1cm4iZmFsc2UiPT09U3RyaW5nKGEpLnRvTG93ZXJDYXNlKCk/ITE6ISFhfSxRYT1mdW5jdGlvbihhKXt2YXIgYj1bXTtpZihIYShhKSlmb3IodmFyIGM9MDtjPGEubGVuZ3RoO2MrKyliLnB1c2goU3RyaW5nKGFbY10pKTtyZXR1cm4gYn0sUmE9ZnVuY3Rpb24oYSl7cmV0dXJuIGE/YS5yZXBsYWNlKC9eXHMrfFxzKyQvZywiIik6IiJ9LFNhPWZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBEYXRlKERhdGUubm93KCkpfSwKVGE9ZnVuY3Rpb24oKXtyZXR1cm4gU2EoKS5nZXRUaW1lKCl9LEthPWZ1bmN0aW9uKCl7dGhpcy5wcmVmaXg9Imd0bS4iO3RoaXMudmFsdWVzPXt9fTtLYS5wcm90b3R5cGUuc2V0PWZ1bmN0aW9uKGEsYil7dGhpcy52YWx1ZXNbdGhpcy5wcmVmaXgrYV09Yn07S2EucHJvdG90eXBlLmdldD1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy52YWx1ZXNbdGhpcy5wcmVmaXgrYV19Owp2YXIgVWE9ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBhJiZhLmhhc093blByb3BlcnR5KGIpP2FbYl06Y30sVmE9ZnVuY3Rpb24oYSl7dmFyIGI9YTtyZXR1cm4gZnVuY3Rpb24oKXtpZihiKXt2YXIgYz1iO2I9dm9pZCAwO3RyeXtjKCl9Y2F0Y2goZCl7fX19fSxXYT1mdW5jdGlvbihhLGIpe2Zvcih2YXIgYyBpbiBiKWIuaGFzT3duUHJvcGVydHkoYykmJihhW2NdPWJbY10pfSxYYT1mdW5jdGlvbihhLGIpe2Zvcih2YXIgYz1bXSxkPTA7ZDxhLmxlbmd0aDtkKyspYy5wdXNoKGFbZF0pLGMucHVzaC5hcHBseShjLGJbYVtkXV18fFtdKTtyZXR1cm4gY30sWWE9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYS5zdWJzdHJpbmcoMCxiLmxlbmd0aCk9PT1ifSxaYT1mdW5jdGlvbihhLGIpe3ZhciBjPXo7Yj1ifHxbXTtmb3IodmFyIGQ9YyxlPTA7ZTxhLmxlbmd0aC0xO2UrKyl7aWYoIWQuaGFzT3duUHJvcGVydHkoYVtlXSkpcmV0dXJuO2Q9ZFthW2VdXTtpZigwPD1iLmluZGV4T2YoZCkpcmV0dXJufXJldHVybiBkfSwKJGE9ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9e30sZD1jLGU9YS5zcGxpdCgiLiIpLGY9MDtmPGUubGVuZ3RoLTE7ZisrKWQ9ZFtlW2ZdXT17fTtkW2VbZS5sZW5ndGgtMV1dPWI7cmV0dXJuIGN9LGFiPS9eXHd7MSw5fSQvLGJiPWZ1bmN0aW9uKGEsYil7YT1hfHx7fTtiPWJ8fCIsIjt2YXIgYz1bXTtsKGEsZnVuY3Rpb24oZCxlKXthYi50ZXN0KGQpJiZlJiZjLnB1c2goZCl9KTtyZXR1cm4gYy5qb2luKGIpfSxjYj1mdW5jdGlvbihhLGIpe2Z1bmN0aW9uIGMoKXsrK2Q9PT1iJiYoZSgpLGU9bnVsbCxjLmRvbmU9ITApfXZhciBkPTAsZT1hO2MuZG9uZT0hMTtyZXR1cm4gY307ZnVuY3Rpb24gZGIoYSxiKXtmb3IodmFyIGMsZD0wO2Q8Yi5sZW5ndGgmJiEoYz1lYihhLGJbZF0pLGMgaW5zdGFuY2VvZiB3YSk7ZCsrKTtyZXR1cm4gY31mdW5jdGlvbiBlYihhLGIpe3RyeXt2YXIgYz1hLmdldChTdHJpbmcoYlswXSkpO2lmKCFjfHwiZnVuY3Rpb24iIT09dHlwZW9mIGMuaW52b2tlKXRocm93IEVycm9yKCJBdHRlbXB0aW5nIHRvIGV4ZWN1dGUgbm9uLWZ1bmN0aW9uICIrYlswXSsiLiIpO3JldHVybiBjLmludm9rZS5hcHBseShjLFthXS5jb25jYXQoYi5zbGljZSgxKSkpfWNhdGNoKGUpe3ZhciBkPWEuRjtkJiZkKGUsYi5jb250ZXh0P3tpZDpiWzBdLGxpbmU6Yi5jb250ZXh0LmxpbmV9Om51bGwpO3Rocm93IGU7fX07dmFyIGZiPWZ1bmN0aW9uKCl7dGhpcy5DPW5ldyB5YTt0aGlzLmg9bmV3IHphKHRoaXMuQyl9O2ZiLnByb3RvdHlwZS5leGVjdXRlPWZ1bmN0aW9uKGEsYil7dmFyIGM9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDApO3JldHVybiB0aGlzLnMoYyl9O2ZiLnByb3RvdHlwZS5zPWZ1bmN0aW9uKGEpe2Zvcih2YXIgYixjPTA7Yzxhcmd1bWVudHMubGVuZ3RoO2MrKyliPWViKHRoaXMuaCxhcmd1bWVudHNbY10pO3JldHVybiBifTtmYi5wcm90b3R5cGUuRj1mdW5jdGlvbihhLGIpe3ZhciBjPUNhKHRoaXMuaCk7Yy5oPWE7Zm9yKHZhciBkLGU9MTtlPGFyZ3VtZW50cy5sZW5ndGg7ZSsrKWQ9ZWIoYyxhcmd1bWVudHNbZV0pO3JldHVybiBkfTt2YXIgZ2I9ZnVuY3Rpb24oKXt4YS5jYWxsKHRoaXMpO3RoaXMucz0hMX07c2EoZ2IseGEpO3ZhciBoYj1mdW5jdGlvbihhLGIpe3ZhciBjPVtdLGQ7Zm9yKGQgaW4gYS5oKWlmKGEuaC5oYXNPd25Qcm9wZXJ0eShkKSlzd2l0Y2goZD1kLnN1YnN0cig1KSxiKXtjYXNlIDE6Yy5wdXNoKGQpO2JyZWFrO2Nhc2UgMjpjLnB1c2goYS5nZXQoZCkpO2JyZWFrO2Nhc2UgMzpjLnB1c2goW2QsYS5nZXQoZCldKX1yZXR1cm4gY307Z2IucHJvdG90eXBlLnNldD1mdW5jdGlvbihhLGIpe3RoaXMuc3x8eGEucHJvdG90eXBlLnNldC5jYWxsKHRoaXMsYSxiKX07Z2IucHJvdG90eXBlLmVpPWZ1bmN0aW9uKGEsYil7dGhpcy5zfHx4YS5wcm90b3R5cGUuZWkuY2FsbCh0aGlzLGEsYil9O2diLnByb3RvdHlwZS5yZW1vdmU9ZnVuY3Rpb24oYSl7dGhpcy5zfHx4YS5wcm90b3R5cGUucmVtb3ZlLmNhbGwodGhpcyxhKX07Z2IucHJvdG90eXBlLkpiPWZ1bmN0aW9uKCl7dGhpcy5zPSEwfTsvKgogalF1ZXJ5IChjKSAyMDA1LCAyMDEyIGpRdWVyeSBGb3VuZGF0aW9uLCBJbmMuIGpxdWVyeS5vcmcvbGljZW5zZS4gKi8KdmFyIGliPS9cW29iamVjdCAoQm9vbGVhbnxOdW1iZXJ8U3RyaW5nfEZ1bmN0aW9ufEFycmF5fERhdGV8UmVnRXhwKVxdLyxqYj1mdW5jdGlvbihhKXtpZihudWxsPT1hKXJldHVybiBTdHJpbmcoYSk7dmFyIGI9aWIuZXhlYyhPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoT2JqZWN0KGEpKSk7cmV0dXJuIGI/YlsxXS50b0xvd2VyQ2FzZSgpOiJvYmplY3QifSxrYj1mdW5jdGlvbihhLGIpe3JldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoT2JqZWN0KGEpLGIpfSxsYj1mdW5jdGlvbihhKXtpZighYXx8Im9iamVjdCIhPWpiKGEpfHxhLm5vZGVUeXBlfHxhPT1hLndpbmRvdylyZXR1cm4hMTt0cnl7aWYoYS5jb25zdHJ1Y3RvciYmIWtiKGEsImNvbnN0cnVjdG9yIikmJiFrYihhLmNvbnN0cnVjdG9yLnByb3RvdHlwZSwiaXNQcm90b3R5cGVPZiIpKXJldHVybiExfWNhdGNoKGMpe3JldHVybiExfWZvcih2YXIgYiBpbiBhKTtyZXR1cm4gdm9pZCAwPT09CmJ8fGtiKGEsYil9LG5iPWZ1bmN0aW9uKGEsYil7dmFyIGM9Ynx8KCJhcnJheSI9PWpiKGEpP1tdOnt9KSxkO2ZvcihkIGluIGEpaWYoa2IoYSxkKSl7dmFyIGU9YVtkXTsiYXJyYXkiPT1qYihlKT8oImFycmF5IiE9amIoY1tkXSkmJihjW2RdPVtdKSxjW2RdPW5iKGUsY1tkXSkpOmxiKGUpPyhsYihjW2RdKXx8KGNbZF09e30pLGNbZF09bmIoZSxjW2RdKSk6Y1tkXT1lfXJldHVybiBjfTt2YXIgb2I9ZnVuY3Rpb24oYSl7Zm9yKHZhciBiPVtdLGM9MDtjPGEubGVuZ3RoKCk7YysrKWEuaGFzKGMpJiYoYltjXT1hLmdldChjKSk7cmV0dXJuIGJ9LHBiPWZ1bmN0aW9uKGEpe2lmKHZvaWQgMD09YXx8SGEoYSl8fGxiKGEpKXJldHVybiEwO3N3aXRjaCh0eXBlb2YgYSl7Y2FzZSAiYm9vbGVhbiI6Y2FzZSAibnVtYmVyIjpjYXNlICJzdHJpbmciOmNhc2UgImZ1bmN0aW9uIjpyZXR1cm4hMH1yZXR1cm4hMX0scWI9ZnVuY3Rpb24oYSl7cmV0dXJuIm51bWJlciI9PT10eXBlb2YgYSYmMDw9YSYmaXNGaW5pdGUoYSkmJjA9PT1hJTF8fCJzdHJpbmciPT09dHlwZW9mIGEmJiItIiE9PWFbMF0mJmE9PT0iIitwYXJzZUludChhLDEwKX07dmFyIHJiPWZ1bmN0aW9uKGEpe3RoaXMucz1uZXcgZ2I7dGhpcy5oPVtdO3RoaXMuQz0hMTthPWF8fFtdO2Zvcih2YXIgYiBpbiBhKWEuaGFzT3duUHJvcGVydHkoYikmJihxYihiKT90aGlzLmhbTnVtYmVyKGIpXT1hW051bWJlcihiKV06dGhpcy5zLnNldChiLGFbYl0pKX07YWE9cmIucHJvdG90eXBlO2FhLnRvU3RyaW5nPWZ1bmN0aW9uKGEpe2lmKGEmJjA8PWEuaW5kZXhPZih0aGlzKSlyZXR1cm4iIjtmb3IodmFyIGI9W10sYz0wO2M8dGhpcy5oLmxlbmd0aDtjKyspe3ZhciBkPXRoaXMuaFtjXTtudWxsPT09ZHx8dm9pZCAwPT09ZD9iLnB1c2goIiIpOmQgaW5zdGFuY2VvZiByYj8oYT1hfHxbXSxhLnB1c2godGhpcyksYi5wdXNoKGQudG9TdHJpbmcoYSkpLGEucG9wKCkpOmIucHVzaChTdHJpbmcoZCkpfXJldHVybiBiLmpvaW4oIiwiKX07CmFhLnNldD1mdW5jdGlvbihhLGIpe2lmKCF0aGlzLkMpaWYoImxlbmd0aCI9PT1hKXtpZighcWIoYikpdGhyb3cgRXJyb3IoIlJhbmdlRXJyb3I6IExlbmd0aCBwcm9wZXJ0eSBtdXN0IGJlIGEgdmFsaWQgaW50ZWdlci4iKTt0aGlzLmgubGVuZ3RoPU51bWJlcihiKX1lbHNlIHFiKGEpP3RoaXMuaFtOdW1iZXIoYSldPWI6dGhpcy5zLnNldChhLGIpfTthYS5nZXQ9ZnVuY3Rpb24oYSl7cmV0dXJuImxlbmd0aCI9PT1hP3RoaXMubGVuZ3RoKCk6cWIoYSk/dGhpcy5oW051bWJlcihhKV06dGhpcy5zLmdldChhKX07YWEubGVuZ3RoPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaC5sZW5ndGh9O2FhLmFjPWZ1bmN0aW9uKCl7Zm9yKHZhciBhPWhiKHRoaXMucywxKSxiPTA7Yjx0aGlzLmgubGVuZ3RoO2IrKylhLnB1c2goYisiIik7cmV0dXJuIG5ldyByYihhKX07YWEucmVtb3ZlPWZ1bmN0aW9uKGEpe3FiKGEpP2RlbGV0ZSB0aGlzLmhbTnVtYmVyKGEpXTp0aGlzLnMucmVtb3ZlKGEpfTsKYWEucG9wPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaC5wb3AoKX07YWEucHVzaD1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5oLnB1c2guYXBwbHkodGhpcy5oLEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cykpfTthYS5zaGlmdD1mdW5jdGlvbigpe3JldHVybiB0aGlzLmguc2hpZnQoKX07YWEuc3BsaWNlPWZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gbmV3IHJiKHRoaXMuaC5zcGxpY2UuYXBwbHkodGhpcy5oLGFyZ3VtZW50cykpfTthYS51bnNoaWZ0PWZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLmgudW5zaGlmdC5hcHBseSh0aGlzLmgsQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKSl9O2FhLmhhcz1mdW5jdGlvbihhKXtyZXR1cm4gcWIoYSkmJnRoaXMuaC5oYXNPd25Qcm9wZXJ0eShhKXx8dGhpcy5zLmhhcyhhKX07YWEuSmI9ZnVuY3Rpb24oKXt0aGlzLkM9ITA7T2JqZWN0LmZyZWV6ZSh0aGlzLmgpO3RoaXMucy5KYigpfTt2YXIgc2I9ZnVuY3Rpb24oKXtnYi5jYWxsKHRoaXMpfTtzYShzYixnYik7c2IucHJvdG90eXBlLmFjPWZ1bmN0aW9uKCl7cmV0dXJuIG5ldyByYihoYih0aGlzLDEpKX07ZnVuY3Rpb24gdGIoKXtmb3IodmFyIGE9dWIsYj17fSxjPTA7YzxhLmxlbmd0aDsrK2MpYlthW2NdXT1jO3JldHVybiBifWZ1bmN0aW9uIHZiKCl7dmFyIGE9IkFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaIjthKz1hLnRvTG93ZXJDYXNlKCkrIjAxMjM0NTY3ODktXyI7cmV0dXJuIGErIi4ifXZhciB1Yix3YjtmdW5jdGlvbiB4YihhKXt1Yj11Ynx8dmIoKTt3Yj13Ynx8dGIoKTtmb3IodmFyIGI9W10sYz0wO2M8YS5sZW5ndGg7Yys9Myl7dmFyIGQ9YysxPGEubGVuZ3RoLGU9YysyPGEubGVuZ3RoLGY9YS5jaGFyQ29kZUF0KGMpLGc9ZD9hLmNoYXJDb2RlQXQoYysxKTowLGg9ZT9hLmNoYXJDb2RlQXQoYysyKTowLG09Zj4+MixuPShmJjMpPDw0fGc+PjQscD0oZyYxNSk8PDJ8aD4+NixxPWgmNjM7ZXx8KHE9NjQsZHx8KHA9NjQpKTtiLnB1c2godWJbbV0sdWJbbl0sdWJbcF0sdWJbcV0pfXJldHVybiBiLmpvaW4oIiIpfQpmdW5jdGlvbiB5YihhKXtmdW5jdGlvbiBiKG0pe2Zvcig7ZDxhLmxlbmd0aDspe3ZhciBuPWEuY2hhckF0KGQrKykscD13YltuXTtpZihudWxsIT1wKXJldHVybiBwO2lmKCEvXltcc1x4YTBdKiQvLnRlc3QobikpdGhyb3cgRXJyb3IoIlVua25vd24gYmFzZTY0IGVuY29kaW5nIGF0IGNoYXI6ICIrbik7fXJldHVybiBtfXViPXVifHx2YigpO3diPXdifHx0YigpO2Zvcih2YXIgYz0iIixkPTA7Oyl7dmFyIGU9YigtMSksZj1iKDApLGc9Yig2NCksaD1iKDY0KTtpZig2ND09PWgmJi0xPT09ZSlyZXR1cm4gYztjKz1TdHJpbmcuZnJvbUNoYXJDb2RlKGU8PDJ8Zj4+NCk7NjQhPWcmJihjKz1TdHJpbmcuZnJvbUNoYXJDb2RlKGY8PDQmMjQwfGc+PjIpLDY0IT1oJiYoYys9U3RyaW5nLmZyb21DaGFyQ29kZShnPDw2JjE5MnxoKSkpfX07dmFyIHpiPXt9LEFiPWZ1bmN0aW9uKGEsYil7emJbYV09emJbYV18fFtdO3piW2FdW2JdPSEwfSxCYj1mdW5jdGlvbihhKXt2YXIgYj16YlthXTtpZighYnx8MD09PWIubGVuZ3RoKXJldHVybiIiO2Zvcih2YXIgYz1bXSxkPTAsZT0wO2U8Yi5sZW5ndGg7ZSsrKTA9PT1lJTgmJjA8ZSYmKGMucHVzaChTdHJpbmcuZnJvbUNoYXJDb2RlKGQpKSxkPTApLGJbZV0mJihkfD0xPDxlJTgpOzA8ZCYmYy5wdXNoKFN0cmluZy5mcm9tQ2hhckNvZGUoZCkpO3JldHVybiB4YihjLmpvaW4oIiIpKS5yZXBsYWNlKC9cLiskLywiIil9LENiPWZ1bmN0aW9uKCl7Zm9yKHZhciBhPVtdLGI9emIuZmRyfHxbXSxjPTA7YzxiLmxlbmd0aDtjKyspYltjXSYmYS5wdXNoKGMpO3JldHVybiAwPGEubGVuZ3RoP2E6dm9pZCAwfTt2YXIgRGI9QXJyYXkucHJvdG90eXBlLmluZGV4T2Y/ZnVuY3Rpb24oYSxiKXtyZXR1cm4gQXJyYXkucHJvdG90eXBlLmluZGV4T2YuY2FsbChhLGIsdm9pZCAwKX06ZnVuY3Rpb24oYSxiKXtpZigic3RyaW5nIj09PXR5cGVvZiBhKXJldHVybiJzdHJpbmciIT09dHlwZW9mIGJ8fDEhPWIubGVuZ3RoPy0xOmEuaW5kZXhPZihiLDApO2Zvcih2YXIgYz0wO2M8YS5sZW5ndGg7YysrKWlmKGMgaW4gYSYmYVtjXT09PWIpcmV0dXJuIGM7cmV0dXJuLTF9O3ZhciBFYixGYj1mdW5jdGlvbigpe2lmKHZvaWQgMD09PUViKXt2YXIgYT1udWxsLGI9dWEudHJ1c3RlZFR5cGVzO2lmKGImJmIuY3JlYXRlUG9saWN5KXt0cnl7YT1iLmNyZWF0ZVBvbGljeSgiZ29vZyNodG1sIix7Y3JlYXRlSFRNTDp2YSxjcmVhdGVTY3JpcHQ6dmEsY3JlYXRlU2NyaXB0VVJMOnZhfSl9Y2F0Y2goYyl7dWEuY29uc29sZSYmdWEuY29uc29sZS5lcnJvcihjLm1lc3NhZ2UpfUViPWF9ZWxzZSBFYj1hfXJldHVybiBFYn07dmFyIEdiPWZ1bmN0aW9uKGEpe3RoaXMuaD1hfTtHYi5wcm90b3R5cGUudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5oKyIifTt2YXIgSGI9ZnVuY3Rpb24oYSl7cmV0dXJuIGEgaW5zdGFuY2VvZiBHYiYmYS5jb25zdHJ1Y3Rvcj09PUdiP2EuaDoidHlwZV9lcnJvcjpUcnVzdGVkUmVzb3VyY2VVcmwifSxJYj17fSxKYj1mdW5jdGlvbihhKXt2YXIgYj1hLGM9RmIoKSxkPWM/Yy5jcmVhdGVTY3JpcHRVUkwoYik6YjtyZXR1cm4gbmV3IEdiKGQsSWIpfTt2YXIgS2I9ZnVuY3Rpb24oYSl7dGhpcy5oPWF9O0tiLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiB0aGlzLmgudG9TdHJpbmcoKX07dmFyIExiPWZ1bmN0aW9uKGEpe3JldHVybiBhIGluc3RhbmNlb2YgS2ImJmEuY29uc3RydWN0b3I9PT1LYj9hLmg6InR5cGVfZXJyb3I6U2FmZVVybCJ9LE1iPXt9O3ZhciBOYixPYjthOntmb3IodmFyIFBiPVsiQ0xPU1VSRV9GTEFHUyJdLFFiPXVhLFJiPTA7UmI8UGIubGVuZ3RoO1JiKyspaWYoUWI9UWJbUGJbUmJdXSxudWxsPT1RYil7T2I9bnVsbDticmVhayBhfU9iPVFifXZhciBTYj1PYiYmT2JbNjEwNDAxMzAxXTtOYj1udWxsIT1TYj9TYjohMTtmdW5jdGlvbiBUYigpe3ZhciBhPXVhLm5hdmlnYXRvcjtpZihhKXt2YXIgYj1hLnVzZXJBZ2VudDtpZihiKXJldHVybiBifXJldHVybiIifXZhciBVYixWYj11YS5uYXZpZ2F0b3I7VWI9VmI/VmIudXNlckFnZW50RGF0YXx8bnVsbDpudWxsO2Z1bmN0aW9uIFdiKGEpe3JldHVybiBOYj9VYj9VYi5icmFuZHMuc29tZShmdW5jdGlvbihiKXt2YXIgYz1iLmJyYW5kO3JldHVybiBjJiYtMSE9Yy5pbmRleE9mKGEpfSk6ITE6ITF9ZnVuY3Rpb24gWGIoYSl7cmV0dXJuLTEhPVRiKCkuaW5kZXhPZihhKX07ZnVuY3Rpb24gWWIoKXtyZXR1cm4gTmI/ISFVYiYmMDxVYi5icmFuZHMubGVuZ3RoOiExfWZ1bmN0aW9uIFpiKCl7cmV0dXJuIFliKCk/ITE6WGIoIk9wZXJhIil9ZnVuY3Rpb24gJGIoKXtyZXR1cm4gWGIoIkZpcmVmb3giKXx8WGIoIkZ4aU9TIil9ZnVuY3Rpb24gYWMoKXtyZXR1cm4gWWIoKT9XYigiQ2hyb21pdW0iKTooWGIoIkNocm9tZSIpfHxYYigiQ3JpT1MiKSkmJiEoWWIoKT8wOlhiKCJFZGdlIikpfHxYYigiU2lsayIpfTt2YXIgYmM9e30sY2M9ZnVuY3Rpb24oYSl7dGhpcy5oPWF9O2NjLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiB0aGlzLmgudG9TdHJpbmcoKX07dmFyIGRjPWZ1bmN0aW9uKGEpe3JldHVybiBhIGluc3RhbmNlb2YgY2MmJmEuY29uc3RydWN0b3I9PT1jYz9hLmg6InR5cGVfZXJyb3I6U2FmZUh0bWwifTsvKgoKIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wCiovCnZhciBlYz1kYShbIiJdKSxmYz1lYShbIlx4MDAiXSxbIlxcMCJdKSxnYz1lYShbIlxuIl0sWyJcXG4iXSksaGM9ZWEoWyJceDAwIl0sWyJcXHUwMDAwIl0pO2Z1bmN0aW9uIGljKGEpe3JldHVybi0xPT09YS50b1N0cmluZygpLmluZGV4T2YoImAiKX1pYyhmdW5jdGlvbihhKXtyZXR1cm4gYShlYyl9KXx8aWMoZnVuY3Rpb24oYSl7cmV0dXJuIGEoZmMpfSl8fGljKGZ1bmN0aW9uKGEpe3JldHVybiBhKGdjKX0pfHxpYyhmdW5jdGlvbihhKXtyZXR1cm4gYShoYyl9KTt2YXIgamM9bmV3IEtiKCJhYm91dDppbnZhbGlkI3pDbG9zdXJleiIsTWIpO3ZhciBrYz1mdW5jdGlvbihhKXt0aGlzLkJtPWF9O2Z1bmN0aW9uIGxjKGEpe3JldHVybiBuZXcga2MoZnVuY3Rpb24oYil7cmV0dXJuIGIuc3Vic3RyKDAsYS5sZW5ndGgrMSkudG9Mb3dlckNhc2UoKT09PWErIjoifSl9dmFyIG1jPVtsYygiZGF0YSIpLGxjKCJodHRwIiksbGMoImh0dHBzIiksbGMoIm1haWx0byIpLGxjKCJmdHAiKSxuZXcga2MoZnVuY3Rpb24oYSl7cmV0dXJuL15bXjpdKihbLz8jXXwkKS8udGVzdChhKX0pXTtmdW5jdGlvbiBuYyhhLGIpe2I9dm9pZCAwPT09Yj9tYzpiO2lmKGEgaW5zdGFuY2VvZiBLYilyZXR1cm4gYTtmb3IodmFyIGM9MDtjPGIubGVuZ3RoOysrYyl7dmFyIGQ9YltjXTtpZihkIGluc3RhbmNlb2Yga2MmJmQuQm0oYSkpcmV0dXJuIG5ldyBLYihhLE1iKX19ZnVuY3Rpb24gb2MoYSl7dmFyIGI7Yj12b2lkIDA9PT1iP21jOmI7cmV0dXJuIG5jKGEsYil8fGpjfXZhciBwYz0vXlxzKig/IWphdmFzY3JpcHQ6KSg/OlthLXowLTkrLi1dKzp8W146XC8/I10qKD86W1wvPyNdfCQpKS9pOwpmdW5jdGlvbiBxYyhhKXtpZihwYy50ZXN0KGEpKXJldHVybiBhfTt2YXIgcmM9e307dmFyIHNjPWZ1bmN0aW9uKCl7fSx0Yz1mdW5jdGlvbihhKXt0aGlzLmg9YX07c2EodGMsc2MpO3RjLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiB0aGlzLmh9O2Z1bmN0aW9uIHVjKGEsYil7dmFyIGM9W25ldyB0Yyh2Y1swXS50b0xvd2VyQ2FzZSgpLHJjKV07aWYoMD09PWMubGVuZ3RoKXRocm93IEVycm9yKCIiKTt2YXIgZD1jLm1hcChmdW5jdGlvbihmKXt2YXIgZztpZihmIGluc3RhbmNlb2YgdGMpZz1mLmg7ZWxzZSB0aHJvdyBFcnJvcigiIik7cmV0dXJuIGd9KSxlPWIudG9Mb3dlckNhc2UoKTtpZihkLmV2ZXJ5KGZ1bmN0aW9uKGYpe3JldHVybiAwIT09ZS5pbmRleE9mKGYpfSkpdGhyb3cgRXJyb3IoJ0F0dHJpYnV0ZSAiJytiKyciIGRvZXMgbm90IG1hdGNoIGFueSBvZiB0aGUgYWxsb3dlZCBwcmVmaXhlcy4nKTthLnNldEF0dHJpYnV0ZShiLCJ0cnVlIil9ZnVuY3Rpb24gd2MoYSl7dmFyIGI9YS50YWdOYW1lO2lmKCJTQ1JJUFQiPT09Ynx8IlNUWUxFIj09PWIpdGhyb3cgRXJyb3IoIiIpO307ZnVuY3Rpb24geWMoYSxiKXt2YXIgYz1iIGluc3RhbmNlb2YgS2I/TGIoYik6cWMoYik7dm9pZCAwIT09YyYmKGEuYWN0aW9uPWMpfTsiQVJUSUNMRSBTRUNUSU9OIE5BViBBU0lERSBIMSBIMiBIMyBINCBINSBINiBIRUFERVIgRk9PVEVSIEFERFJFU1MgUCBIUiBQUkUgQkxPQ0tRVU9URSBPTCBVTCBMSCBMSSBETCBEVCBERCBGSUdVUkUgRklHQ0FQVElPTiBNQUlOIERJViBFTSBTVFJPTkcgU01BTEwgUyBDSVRFIFEgREZOIEFCQlIgUlVCWSBSQiBSVCBSVEMgUlAgREFUQSBUSU1FIENPREUgVkFSIFNBTVAgS0JEIFNVQiBTVVAgSSBCIFUgTUFSSyBCREkgQkRPIFNQQU4gQlIgV0JSIElOUyBERUwgUElDVFVSRSBQQVJBTSBUUkFDSyBNQVAgVEFCTEUgQ0FQVElPTiBDT0xHUk9VUCBDT0wgVEJPRFkgVEhFQUQgVEZPT1QgVFIgVEQgVEggU0VMRUNUIERBVEFMSVNUIE9QVEdST1VQIE9QVElPTiBPVVRQVVQgUFJPR1JFU1MgTUVURVIgRklFTERTRVQgTEVHRU5EIERFVEFJTFMgU1VNTUFSWSBNRU5VIERJQUxPRyBTTE9UIENBTlZBUyBGT05UIENFTlRFUiBBQ1JPTllNIEJBU0VGT05UIEJJRyBESVIgSEdST1VQIFNUUklLRSBUVCIuc3BsaXQoIiAiKS5jb25jYXQoWyJCVVRUT04iXSk7ZnVuY3Rpb24gemMoYSl7dmFyIGI9YT1BYyhhKSxjPUZiKCksZD1jP2MuY3JlYXRlSFRNTChiKTpiO3JldHVybiBuZXcgY2MoZCxiYyl9ZnVuY3Rpb24gQWMoYSl7cmV0dXJuIG51bGw9PT1hPyJudWxsIjp2b2lkIDA9PT1hPyJ1bmRlZmluZWQiOmF9O3ZhciB6PXdpbmRvdyxDPWRvY3VtZW50LEJjPW5hdmlnYXRvcixDYz1DLmN1cnJlbnRTY3JpcHQmJkMuY3VycmVudFNjcmlwdC5zcmMsRGM9ZnVuY3Rpb24oYSxiKXt2YXIgYz16W2FdO3pbYV09dm9pZCAwPT09Yz9iOmM7cmV0dXJuIHpbYV19LEVjPWZ1bmN0aW9uKGEsYil7YiYmKGEuYWRkRXZlbnRMaXN0ZW5lcj9hLm9ubG9hZD1iOmEub25yZWFkeXN0YXRlY2hhbmdlPWZ1bmN0aW9uKCl7YS5yZWFkeVN0YXRlIGlue2xvYWRlZDoxLGNvbXBsZXRlOjF9JiYoYS5vbnJlYWR5c3RhdGVjaGFuZ2U9bnVsbCxiKCkpfSl9LEZjPXthc3luYzoxLG5vbmNlOjEsb25lcnJvcjoxLG9ubG9hZDoxLHNyYzoxLHR5cGU6MX0sR2M9e29ubG9hZDoxLHNyYzoxLHdpZHRoOjEsaGVpZ2h0OjEsc3R5bGU6MX07ZnVuY3Rpb24gSGMoYSxiLGMpe2ImJmwoYixmdW5jdGlvbihkLGUpe2Q9ZC50b0xvd2VyQ2FzZSgpO2MuaGFzT3duUHJvcGVydHkoZCl8fGEuc2V0QXR0cmlidXRlKGQsZSl9KX0KdmFyIEljPWZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9Qy5jcmVhdGVFbGVtZW50KCJzY3JpcHQiKTtIYyhmLGQsRmMpO2YudHlwZT0idGV4dC9qYXZhc2NyaXB0IjtmLmFzeW5jPWQmJiExPT09ZC5hc3luYz8hMTohMDt2YXIgZztnPUpiKEFjKGEpKTtmLnNyYz1IYihnKTt2YXIgaCxtLG4scD1udWxsPT0obj0obT0oZi5vd25lckRvY3VtZW50JiZmLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXd8fHdpbmRvdykuZG9jdW1lbnQpLnF1ZXJ5U2VsZWN0b3IpP3ZvaWQgMDpuLmNhbGwobSwic2NyaXB0W25vbmNlXSIpOyhoPXA/cC5ub25jZXx8cC5nZXRBdHRyaWJ1dGUoIm5vbmNlIil8fCIiOiIiKSYmZi5zZXRBdHRyaWJ1dGUoIm5vbmNlIixoKTtFYyhmLGIpO2MmJihmLm9uZXJyb3I9Yyk7aWYoZSllLmFwcGVuZENoaWxkKGYpO2Vsc2V7dmFyIHE9Qy5nZXRFbGVtZW50c0J5VGFnTmFtZSgic2NyaXB0IilbMF18fEMuYm9keXx8Qy5oZWFkO3EucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZiwKcSl9cmV0dXJuIGZ9LEpjPWZ1bmN0aW9uKCl7aWYoQ2Mpe3ZhciBhPUNjLnRvTG93ZXJDYXNlKCk7aWYoMD09PWEuaW5kZXhPZigiaHR0cHM6Ly8iKSlyZXR1cm4gMjtpZigwPT09YS5pbmRleE9mKCJodHRwOi8vIikpcmV0dXJuIDN9cmV0dXJuIDF9LEtjPWZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY7Zj12b2lkIDA9PT1mPyEwOmY7dmFyIGc9ZSxoPSExO2d8fChnPUMuY3JlYXRlRWxlbWVudCgiaWZyYW1lIiksaD0hMCk7SGMoZyxjLEdjKTtkJiZsKGQsZnVuY3Rpb24obixwKXtnLmRhdGFzZXRbbl09cH0pO2YmJihnLmhlaWdodD0iMCIsZy53aWR0aD0iMCIsZy5zdHlsZS5kaXNwbGF5PSJub25lIixnLnN0eWxlLnZpc2liaWxpdHk9ImhpZGRlbiIpO2lmKGgpe3ZhciBtPUMuYm9keSYmQy5ib2R5Lmxhc3RDaGlsZHx8Qy5ib2R5fHxDLmhlYWQ7bS5wYXJlbnROb2RlLmluc2VydEJlZm9yZShnLG0pfUVjKGcsYik7dm9pZCAwIT09YSYmKGcuc3JjPWEpO3JldHVybiBnfSxMYz1mdW5jdGlvbihhLApiLGMsZCl7dmFyIGU9bmV3IEltYWdlKDEsMSk7SGMoZSxkLHt9KTtlLm9ubG9hZD1mdW5jdGlvbigpe2Uub25sb2FkPW51bGw7YiYmYigpfTtlLm9uZXJyb3I9ZnVuY3Rpb24oKXtlLm9uZXJyb3I9bnVsbDtjJiZjKCl9O2Uuc3JjPWF9LE1jPWZ1bmN0aW9uKGEsYixjLGQpe2EuYWRkRXZlbnRMaXN0ZW5lcj9hLmFkZEV2ZW50TGlzdGVuZXIoYixjLCEhZCk6YS5hdHRhY2hFdmVudCYmYS5hdHRhY2hFdmVudCgib24iK2IsYyl9LE5jPWZ1bmN0aW9uKGEsYixjKXthLnJlbW92ZUV2ZW50TGlzdGVuZXI/YS5yZW1vdmVFdmVudExpc3RlbmVyKGIsYywhMSk6YS5kZXRhY2hFdmVudCYmYS5kZXRhY2hFdmVudCgib24iK2IsYyl9LEg9ZnVuY3Rpb24oYSl7ei5zZXRUaW1lb3V0KGEsMCl9LE9jPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGEmJmImJmEuYXR0cmlidXRlcyYmYS5hdHRyaWJ1dGVzW2JdP2EuYXR0cmlidXRlc1tiXS52YWx1ZTpudWxsfSxQYz1mdW5jdGlvbihhKXt2YXIgYj1hLmlubmVyVGV4dHx8CmEudGV4dENvbnRlbnR8fCIiO2ImJiIgIiE9YiYmKGI9Yi5yZXBsYWNlKC9eW1xzXHhhMF0rfFtcc1x4YTBdKyQvZywiIikpO2ImJihiPWIucmVwbGFjZSgvKFx4YTArfFxzezIsfXxcbnxcclx0KS9nLCIgIikpO3JldHVybiBifSxRYz1mdW5jdGlvbihhKXt2YXIgYj1DLmNyZWF0ZUVsZW1lbnQoImRpdiIpLGM9YixkPXpjKCJBPGRpdj4iK2ErIjwvZGl2PiIpOzE9PT1jLm5vZGVUeXBlJiZ3YyhjKTtjLmlubmVySFRNTD1kYyhkKTtiPWIubGFzdENoaWxkO2Zvcih2YXIgZT1bXTtiLmZpcnN0Q2hpbGQ7KWUucHVzaChiLnJlbW92ZUNoaWxkKGIuZmlyc3RDaGlsZCkpO3JldHVybiBlfSxSYz1mdW5jdGlvbihhLGIsYyl7Yz1jfHwxMDA7Zm9yKHZhciBkPXt9LGU9MDtlPGIubGVuZ3RoO2UrKylkW2JbZV1dPSEwO2Zvcih2YXIgZj1hLGc9MDtmJiZnPD1jO2crKyl7aWYoZFtTdHJpbmcoZi50YWdOYW1lKS50b0xvd2VyQ2FzZSgpXSlyZXR1cm4gZjtmPWYucGFyZW50RWxlbWVudH1yZXR1cm4gbnVsbH0sClNjPWZ1bmN0aW9uKGEpe3ZhciBiO3RyeXtiPUJjLnNlbmRCZWFjb24mJkJjLnNlbmRCZWFjb24oYSl9Y2F0Y2goYyl7QWIoIlRBR0dJTkciLDE1KX1ifHxMYyhhKX0sVGM9ZnVuY3Rpb24oYSxiKXt0cnl7aWYoQmMuc2VuZEJlYWNvbilyZXR1cm4gQmMuc2VuZEJlYWNvbihhLGIpfWNhdGNoKGMpe0FiKCJUQUdHSU5HIiwxNSl9cmV0dXJuITF9LFVjPXtjYWNoZToibm8tc3RvcmUiLGNyZWRlbnRpYWxzOiJpbmNsdWRlIixrZWVwYWxpdmU6ITAsbWV0aG9kOiJQT1NUIixtb2RlOiJuby1jb3JzIixyZWRpcmVjdDoiZm9sbG93In0sVmM9ZnVuY3Rpb24oYSxiKXt2YXIgYz17T206ITB9O2lmKCJmZXRjaCJpbiB6KXt2YXIgZD1PYmplY3QuYXNzaWduKHt9LFVjKTtiJiYoZC5ib2R5PWIpO2MmJihjLmF0dHJpYnV0aW9uUmVwb3J0aW5nJiYoZC5hdHRyaWJ1dGlvblJlcG9ydGluZz1jLmF0dHJpYnV0aW9uUmVwb3J0aW5nKSxjLkZsJiYoZC5icm93c2luZ1RvcGljcz1jLkZsKSk7dHJ5e3JldHVybiB6LmZldGNoKGEsCmQpLCEwfWNhdGNoKGUpe319aWYoYyYmYy5PbSlyZXR1cm4hMTtpZihiKXJldHVybiBUYyhhLGIpO1NjKGEpO3JldHVybiEwfSxXYz1mdW5jdGlvbihhLGIpe3ZhciBjPWFbYl07YyYmInN0cmluZyI9PT10eXBlb2YgYy5hbmltVmFsJiYoYz1jLmFuaW1WYWwpO3JldHVybiBjfSxYYz1mdW5jdGlvbigpe3ZhciBhPXoucGVyZm9ybWFuY2U7aWYoYSYmRWEoYS5ub3cpKXJldHVybiBhLm5vdygpfSxZYz1mdW5jdGlvbigpe3JldHVybiB6LnBlcmZvcm1hbmNlfHx2b2lkIDB9O3ZhciBaYz1mdW5jdGlvbihhLGIpe3JldHVybiBJKHRoaXMsYSkmJkkodGhpcyxiKX0sJGM9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gSSh0aGlzLGEpPT09SSh0aGlzLGIpfSxhZD1mdW5jdGlvbihhLGIpe3JldHVybiBJKHRoaXMsYSl8fEkodGhpcyxiKX0sYmQ9ZnVuY3Rpb24oYSxiKXthPUkodGhpcyxhKTtiPUkodGhpcyxiKTtyZXR1cm4tMTxTdHJpbmcoYSkuaW5kZXhPZihTdHJpbmcoYikpfSxjZD1mdW5jdGlvbihhLGIpe2E9U3RyaW5nKEkodGhpcyxhKSk7Yj1TdHJpbmcoSSh0aGlzLGIpKTtyZXR1cm4gYS5zdWJzdHJpbmcoMCxiLmxlbmd0aCk9PT1ifSxkZD1mdW5jdGlvbihhLGIpe2E9SSh0aGlzLGEpO2I9SSh0aGlzLGIpO3N3aXRjaChhKXtjYXNlICJwYWdlTG9jYXRpb24iOnZhciBjPXoubG9jYXRpb24uaHJlZjtiIGluc3RhbmNlb2Ygc2ImJmIuZ2V0KCJzdHJpcFByb3RvY29sIikmJihjPWMucmVwbGFjZSgvXmh0dHBzPzpcL1wvLywiIikpO3JldHVybiBjfX07dmFyIGVkPWZ1bmN0aW9uKGEsYil7Z2IuY2FsbCh0aGlzKTt0aGlzLkY9YTt0aGlzLk09Yn07c2EoZWQsZ2IpO2VkLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiB0aGlzLkZ9O2VkLnByb3RvdHlwZS5hYz1mdW5jdGlvbigpe3JldHVybiBuZXcgcmIoaGIodGhpcywxKSl9O2VkLnByb3RvdHlwZS5pbnZva2U9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdGhpcy5NLmFwcGx5KG5ldyBmZCh0aGlzLGEpLEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywxKSl9O2VkLnByb3RvdHlwZS5lYj1mdW5jdGlvbihhLGIpe3RyeXtyZXR1cm4gdGhpcy5pbnZva2UuYXBwbHkodGhpcyxBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMCkpfWNhdGNoKGMpe319O3ZhciBmZD1mdW5jdGlvbihhLGIpe3RoaXMucz1hO3RoaXMuaD1ifSxJPWZ1bmN0aW9uKGEsYil7dmFyIGM9YS5oO3JldHVybiBIYShiKT9lYihjLGIpOmJ9LEo9ZnVuY3Rpb24oYSl7cmV0dXJuIGEucy5GfTt2YXIgZ2Q9ZnVuY3Rpb24oKXt0aGlzLm1hcD1uZXcgTWFwfTtnZC5wcm90b3R5cGUuc2V0PWZ1bmN0aW9uKGEsYil7dGhpcy5tYXAuc2V0KGEsYil9O2dkLnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMubWFwLmdldChhKX07dmFyIGhkPWZ1bmN0aW9uKCl7dGhpcy5rZXlzPVtdO3RoaXMudmFsdWVzPVtdfTtoZC5wcm90b3R5cGUuc2V0PWZ1bmN0aW9uKGEsYil7dGhpcy5rZXlzLnB1c2goYSk7dGhpcy52YWx1ZXMucHVzaChiKX07aGQucHJvdG90eXBlLmdldD1mdW5jdGlvbihhKXt2YXIgYj10aGlzLmtleXMuaW5kZXhPZihhKTtpZigtMTxiKXJldHVybiB0aGlzLnZhbHVlc1tiXX07ZnVuY3Rpb24gaWQoKXt0cnl7cmV0dXJuIE1hcD9uZXcgZ2Q6bmV3IGhkfWNhdGNoKGEpe3JldHVybiBuZXcgaGR9fTt2YXIgamQ9ZnVuY3Rpb24oYSl7aWYoYSBpbnN0YW5jZW9mIGpkKXJldHVybiBhO2lmKHBiKGEpKXRocm93IEVycm9yKCJUeXBlIG9mIGdpdmVuIHZhbHVlIGhhcyBhbiBlcXVpdmFsZW50IFBpeGllIHR5cGUuIik7dGhpcy5oPWF9O2pkLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiBTdHJpbmcodGhpcy5oKX07dmFyIGxkPWZ1bmN0aW9uKGEpe2diLmNhbGwodGhpcyk7dGhpcy5GPWE7dGhpcy5zZXQoInRoZW4iLGtkKHRoaXMpKTt0aGlzLnNldCgiY2F0Y2giLGtkKHRoaXMsITApKTt0aGlzLnNldCgiZmluYWxseSIsa2QodGhpcywhMSwhMCkpfTtzYShsZCxzYik7dmFyIGtkPWZ1bmN0aW9uKGEsYixjKXtiPXZvaWQgMD09PWI/ITE6YjtjPXZvaWQgMD09PWM/ITE6YztyZXR1cm4gbmV3IGVkKCIiLGZ1bmN0aW9uKGQsZSl7YiYmKGU9ZCxkPXZvaWQgMCk7YyYmKGU9ZCk7ZCBpbnN0YW5jZW9mIGVkfHwoZD12b2lkIDApO2UgaW5zdGFuY2VvZiBlZHx8KGU9dm9pZCAwKTt2YXIgZj1DYSh0aGlzLmgpLGc9ZnVuY3Rpb24obSl7cmV0dXJuIGZ1bmN0aW9uKG4pe3JldHVybiBjPyhtLmludm9rZShmKSxhLkYpOm0uaW52b2tlKGYsbil9fSxoPWEuRi50aGVuKGQmJmcoZCksZSYmZyhlKSk7cmV0dXJuIG5ldyBsZChoKX0pfTt2YXIgbmQ9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWlkKCksZT1mdW5jdGlvbihnLGgpe2Zvcih2YXIgbT1oYihnLDEpLG49MDtuPG0ubGVuZ3RoO24rKyloW21bbl1dPWYoZy5nZXQobVtuXSkpfSxmPWZ1bmN0aW9uKGcpe3ZhciBoPWQuZ2V0KGcpO2lmKGgpcmV0dXJuIGg7aWYoZyBpbnN0YW5jZW9mIHJiKXt2YXIgbT1bXTtkLnNldChnLG0pO2Zvcih2YXIgbj1nLmFjKCkscD0wO3A8bi5sZW5ndGgoKTtwKyspbVtuLmdldChwKV09ZihnLmdldChuLmdldChwKSkpO3JldHVybiBtfWlmKGcgaW5zdGFuY2VvZiBsZClyZXR1cm4gZy5GO2lmKGcgaW5zdGFuY2VvZiBzYil7dmFyIHE9e307ZC5zZXQoZyxxKTtlKGcscSk7cmV0dXJuIHF9aWYoZyBpbnN0YW5jZW9mIGVkKXt2YXIgcj1mdW5jdGlvbigpe2Zvcih2YXIgdT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMCksdj0wO3Y8dS5sZW5ndGg7disrKXVbdl09bWQodVt2XSxiLGMpO3ZhciB3PW5ldyB6YShiP2IuVzoKbmV3IHlhKTtiJiYody5oPWIuaCk7cmV0dXJuIGYoZy5pbnZva2UuYXBwbHkoZyxbd10uY29uY2F0KHUpKSl9O2Quc2V0KGcscik7ZShnLHIpO3JldHVybiByfXZhciB0PSExO3N3aXRjaChjKXtjYXNlIDE6dD0hMDticmVhaztjYXNlIDI6dD0hMTticmVhaztjYXNlIDM6dD0hMTticmVhaztkZWZhdWx0On1pZihnIGluc3RhbmNlb2YgamQmJnQpcmV0dXJuIGcuaDtzd2l0Y2godHlwZW9mIGcpe2Nhc2UgImJvb2xlYW4iOmNhc2UgIm51bWJlciI6Y2FzZSAic3RyaW5nIjpjYXNlICJ1bmRlZmluZWQiOnJldHVybiBnO2Nhc2UgIm9iamVjdCI6aWYobnVsbD09PWcpcmV0dXJuIG51bGx9fTtyZXR1cm4gZihhKX0sbWQ9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWlkKCksZT1mdW5jdGlvbihnLApoKXtmb3IodmFyIG0gaW4gZylnLmhhc093blByb3BlcnR5KG0pJiZoLnNldChtLGYoZ1ttXSkpfSxmPWZ1bmN0aW9uKGcpe3ZhciBoPWQuZ2V0KGcpO2lmKGgpcmV0dXJuIGg7aWYoSGEoZyl8fE1hKGcpKXt2YXIgbT1uZXcgcmIoW10pO2Quc2V0KGcsbSk7Zm9yKHZhciBuIGluIGcpZy5oYXNPd25Qcm9wZXJ0eShuKSYmbS5zZXQobixmKGdbbl0pKTtyZXR1cm4gbX1pZihsYihnKSl7dmFyIHA9bmV3IHNiO2Quc2V0KGcscCk7ZShnLHApO3JldHVybiBwfWlmKCJmdW5jdGlvbiI9PT10eXBlb2YgZyl7dmFyIHE9bmV3IGVkKCIiLGZ1bmN0aW9uKHgpe2Zvcih2YXIgeT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMCksQj0wO0I8eS5sZW5ndGg7QisrKXlbQl09bmQoSSh0aGlzLHlbQl0pLGIsYyk7cmV0dXJuIGYoKDAsdGhpcy5oLk0pKGcsZyx5KSl9KTtkLnNldChnLHEpO2UoZyxxKTtyZXR1cm4gcX12YXIgdj10eXBlb2YgZztpZihudWxsPT09Z3x8InN0cmluZyI9PT12fHwibnVtYmVyIj09PXZ8fCJib29sZWFuIj09PXYpcmV0dXJuIGc7dmFyIHc9ITE7c3dpdGNoKGMpe2Nhc2UgMTp3PSEwO2JyZWFrO2Nhc2UgMjp3PSExO2JyZWFrO2RlZmF1bHQ6fWlmKHZvaWQgMCE9PWcmJncpcmV0dXJuIG5ldyBqZChnKX07cmV0dXJuIGYoYSl9O3ZhciBvZD1mdW5jdGlvbigpe3ZhciBhPSExO3JldHVybiBhfTt2YXIgcGQ9e3N1cHBvcnRlZE1ldGhvZHM6ImNvbmNhdCBldmVyeSBmaWx0ZXIgZm9yRWFjaCBoYXNPd25Qcm9wZXJ0eSBpbmRleE9mIGpvaW4gbGFzdEluZGV4T2YgbWFwIHBvcCBwdXNoIHJlZHVjZSByZWR1Y2VSaWdodCByZXZlcnNlIHNoaWZ0IHNsaWNlIHNvbWUgc29ydCBzcGxpY2UgdW5zaGlmdCB0b1N0cmluZyIuc3BsaXQoIiAiKSxjb25jYXQ6ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9W10sZD0wO2Q8dGhpcy5sZW5ndGgoKTtkKyspYy5wdXNoKHRoaXMuZ2V0KGQpKTtmb3IodmFyIGU9MTtlPGFyZ3VtZW50cy5sZW5ndGg7ZSsrKWlmKGFyZ3VtZW50c1tlXWluc3RhbmNlb2YgcmIpZm9yKHZhciBmPWFyZ3VtZW50c1tlXSxnPTA7ZzxmLmxlbmd0aCgpO2crKyljLnB1c2goZi5nZXQoZykpO2Vsc2UgYy5wdXNoKGFyZ3VtZW50c1tlXSk7cmV0dXJuIG5ldyByYihjKX0sZXZlcnk6ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9dGhpcy5sZW5ndGgoKSxkPTA7ZDx0aGlzLmxlbmd0aCgpJiYKZDxjO2QrKylpZih0aGlzLmhhcyhkKSYmIWIuaW52b2tlKGEsdGhpcy5nZXQoZCksZCx0aGlzKSlyZXR1cm4hMTtyZXR1cm4hMH0sZmlsdGVyOmZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPXRoaXMubGVuZ3RoKCksZD1bXSxlPTA7ZTx0aGlzLmxlbmd0aCgpJiZlPGM7ZSsrKXRoaXMuaGFzKGUpJiZiLmludm9rZShhLHRoaXMuZ2V0KGUpLGUsdGhpcykmJmQucHVzaCh0aGlzLmdldChlKSk7cmV0dXJuIG5ldyByYihkKX0sZm9yRWFjaDpmdW5jdGlvbihhLGIpe2Zvcih2YXIgYz10aGlzLmxlbmd0aCgpLGQ9MDtkPHRoaXMubGVuZ3RoKCkmJmQ8YztkKyspdGhpcy5oYXMoZCkmJmIuaW52b2tlKGEsdGhpcy5nZXQoZCksZCx0aGlzKX0saGFzT3duUHJvcGVydHk6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdGhpcy5oYXMoYil9LGluZGV4T2Y6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPXRoaXMubGVuZ3RoKCksZT12b2lkIDA9PT1jPzA6TnVtYmVyKGMpOzA+ZSYmKGU9TWF0aC5tYXgoZCtlLDApKTtmb3IodmFyIGY9CmU7ZjxkO2YrKylpZih0aGlzLmhhcyhmKSYmdGhpcy5nZXQoZik9PT1iKXJldHVybiBmO3JldHVybi0xfSxqb2luOmZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPVtdLGQ9MDtkPHRoaXMubGVuZ3RoKCk7ZCsrKWMucHVzaCh0aGlzLmdldChkKSk7cmV0dXJuIGMuam9pbihiKX0sbGFzdEluZGV4T2Y6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPXRoaXMubGVuZ3RoKCksZT1kLTE7dm9pZCAwIT09YyYmKGU9MD5jP2QrYzpNYXRoLm1pbihjLGUpKTtmb3IodmFyIGY9ZTswPD1mO2YtLSlpZih0aGlzLmhhcyhmKSYmdGhpcy5nZXQoZik9PT1iKXJldHVybiBmO3JldHVybi0xfSxtYXA6ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9dGhpcy5sZW5ndGgoKSxkPVtdLGU9MDtlPHRoaXMubGVuZ3RoKCkmJmU8YztlKyspdGhpcy5oYXMoZSkmJihkW2VdPWIuaW52b2tlKGEsdGhpcy5nZXQoZSksZSx0aGlzKSk7cmV0dXJuIG5ldyByYihkKX0scG9wOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucG9wKCl9LHB1c2g6ZnVuY3Rpb24oYSwKYil7cmV0dXJuIHRoaXMucHVzaC5hcHBseSh0aGlzLEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywxKSl9LHJlZHVjZTpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9dGhpcy5sZW5ndGgoKSxlLGY9MDtpZih2b2lkIDAhPT1jKWU9YztlbHNle2lmKDA9PT1kKXRocm93IEVycm9yKCJUeXBlRXJyb3I6IFJlZHVjZSBvbiBMaXN0IHdpdGggbm8gZWxlbWVudHMuIik7Zm9yKHZhciBnPTA7ZzxkO2crKylpZih0aGlzLmhhcyhnKSl7ZT10aGlzLmdldChnKTtmPWcrMTticmVha31pZihnPT09ZCl0aHJvdyBFcnJvcigiVHlwZUVycm9yOiBSZWR1Y2Ugb24gTGlzdCB3aXRoIG5vIGVsZW1lbnRzLiIpO31mb3IodmFyIGg9ZjtoPGQ7aCsrKXRoaXMuaGFzKGgpJiYoZT1iLmludm9rZShhLGUsdGhpcy5nZXQoaCksaCx0aGlzKSk7cmV0dXJuIGV9LHJlZHVjZVJpZ2h0OmZ1bmN0aW9uKGEsYixjKXt2YXIgZD10aGlzLmxlbmd0aCgpLGUsZj1kLTE7aWYodm9pZCAwIT09YyllPWM7ZWxzZXtpZigwPT09CmQpdGhyb3cgRXJyb3IoIlR5cGVFcnJvcjogUmVkdWNlUmlnaHQgb24gTGlzdCB3aXRoIG5vIGVsZW1lbnRzLiIpO2Zvcih2YXIgZz0xO2c8PWQ7ZysrKWlmKHRoaXMuaGFzKGQtZykpe2U9dGhpcy5nZXQoZC1nKTtmPWQtKGcrMSk7YnJlYWt9aWYoZz5kKXRocm93IEVycm9yKCJUeXBlRXJyb3I6IFJlZHVjZVJpZ2h0IG9uIExpc3Qgd2l0aCBubyBlbGVtZW50cy4iKTt9Zm9yKHZhciBoPWY7MDw9aDtoLS0pdGhpcy5oYXMoaCkmJihlPWIuaW52b2tlKGEsZSx0aGlzLmdldChoKSxoLHRoaXMpKTtyZXR1cm4gZX0scmV2ZXJzZTpmdW5jdGlvbigpe2Zvcih2YXIgYT1vYih0aGlzKSxiPWEubGVuZ3RoLTEsYz0wOzA8PWI7Yi0tLGMrKylhLmhhc093blByb3BlcnR5KGIpP3RoaXMuc2V0KGMsYVtiXSk6dGhpcy5yZW1vdmUoYyk7cmV0dXJuIHRoaXN9LHNoaWZ0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc2hpZnQoKX0sc2xpY2U6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPXRoaXMubGVuZ3RoKCk7CnZvaWQgMD09PWImJihiPTApO2I9MD5iP01hdGgubWF4KGQrYiwwKTpNYXRoLm1pbihiLGQpO2M9dm9pZCAwPT09Yz9kOjA+Yz9NYXRoLm1heChkK2MsMCk6TWF0aC5taW4oYyxkKTtjPU1hdGgubWF4KGIsYyk7Zm9yKHZhciBlPVtdLGY9YjtmPGM7ZisrKWUucHVzaCh0aGlzLmdldChmKSk7cmV0dXJuIG5ldyByYihlKX0sc29tZTpmdW5jdGlvbihhLGIpe2Zvcih2YXIgYz10aGlzLmxlbmd0aCgpLGQ9MDtkPHRoaXMubGVuZ3RoKCkmJmQ8YztkKyspaWYodGhpcy5oYXMoZCkmJmIuaW52b2tlKGEsdGhpcy5nZXQoZCksZCx0aGlzKSlyZXR1cm4hMDtyZXR1cm4hMX0sc29ydDpmdW5jdGlvbihhLGIpe3ZhciBjPW9iKHRoaXMpO3ZvaWQgMD09PWI/Yy5zb3J0KCk6Yy5zb3J0KGZ1bmN0aW9uKGUsZil7cmV0dXJuIE51bWJlcihiLmludm9rZShhLGUsZikpfSk7Zm9yKHZhciBkPTA7ZDxjLmxlbmd0aDtkKyspYy5oYXNPd25Qcm9wZXJ0eShkKT90aGlzLnNldChkLGNbZF0pOnRoaXMucmVtb3ZlKGQpOwpyZXR1cm4gdGhpc30sc3BsaWNlOmZ1bmN0aW9uKGEsYixjLGQpe3JldHVybiB0aGlzLnNwbGljZS5hcHBseSh0aGlzLEFycmF5LnByb3RvdHlwZS5zcGxpY2UuY2FsbChhcmd1bWVudHMsMSxhcmd1bWVudHMubGVuZ3RoLTEpKX0sdG9TdHJpbmc6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50b1N0cmluZygpfSx1bnNoaWZ0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIHRoaXMudW5zaGlmdC5hcHBseSh0aGlzLEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywxKSl9fTt2YXIgcWQ9ZnVuY3Rpb24oYSl7dmFyIGI7Yj1FcnJvci5jYWxsKHRoaXMsYSk7dGhpcy5tZXNzYWdlPWIubWVzc2FnZTsic3RhY2siaW4gYiYmKHRoaXMuc3RhY2s9Yi5zdGFjayl9O3NhKHFkLEVycm9yKTt2YXIgcmQ9e2NoYXJBdDoxLGNvbmNhdDoxLGluZGV4T2Y6MSxsYXN0SW5kZXhPZjoxLG1hdGNoOjEscmVwbGFjZToxLHNlYXJjaDoxLHNsaWNlOjEsc3BsaXQ6MSxzdWJzdHJpbmc6MSx0b0xvd2VyQ2FzZToxLHRvTG9jYWxlTG93ZXJDYXNlOjEsdG9TdHJpbmc6MSx0b1VwcGVyQ2FzZToxLHRvTG9jYWxlVXBwZXJDYXNlOjEsdHJpbToxfSxzZD1uZXcgd2EoImJyZWFrIiksdGQ9bmV3IHdhKCJjb250aW51ZSIpLHVkPWZ1bmN0aW9uKGEsYil7cmV0dXJuIEkodGhpcyxhKStJKHRoaXMsYil9LHZkPWZ1bmN0aW9uKGEsYil7cmV0dXJuIEkodGhpcyxhKSYmSSh0aGlzLGIpfSx3ZD1mdW5jdGlvbihhLGIsYyl7YT1JKHRoaXMsYSk7Yj1JKHRoaXMsYik7Yz1JKHRoaXMsYyk7aWYoIShjIGluc3RhbmNlb2YgcmIpKXRocm93IEVycm9yKCJFcnJvcjogTm9uLUxpc3QgYXJndW1lbnQgZ2l2ZW4gdG8gQXBwbHkgaW5zdHJ1Y3Rpb24uIik7aWYobnVsbD09PWF8fHZvaWQgMD09PWEpe3ZhciBkPSJUeXBlRXJyb3I6IENhbid0IHJlYWQgcHJvcGVydHkgIisKYisiIG9mICIrYSsiLiI7aWYob2QoKSl0aHJvdyBuZXcgcWQoZCk7dGhyb3cgRXJyb3IoZCk7fXZhciBlPSJudW1iZXIiPT09dHlwZW9mIGE7aWYoImJvb2xlYW4iPT09dHlwZW9mIGF8fGUpe2lmKCJ0b1N0cmluZyI9PT1iKXtpZihlJiZjLmxlbmd0aCgpKXt2YXIgZj1uZChjLmdldCgwKSk7dHJ5e3JldHVybiBhLnRvU3RyaW5nKGYpfWNhdGNoKHkpe319cmV0dXJuIGEudG9TdHJpbmcoKX12YXIgZz0iVHlwZUVycm9yOiAiK2ErIi4iK2IrIiBpcyBub3QgYSBmdW5jdGlvbi4iO2lmKG9kKCkpdGhyb3cgbmV3IHFkKGcpO3Rocm93IEVycm9yKGcpO31pZigic3RyaW5nIj09PXR5cGVvZiBhKXtpZihyZC5oYXNPd25Qcm9wZXJ0eShiKSl7dmFyIGg9MjtoPTE7CnZhciBtPW5kKGMsdm9pZCAwLGgpO3JldHVybiBtZChhW2JdLmFwcGx5KGEsbSksdGhpcy5oKX12YXIgbj0iVHlwZUVycm9yOiAiK2IrIiBpcyBub3QgYSBmdW5jdGlvbiI7aWYob2QoKSl0aHJvdyBuZXcgcWQobik7dGhyb3cgRXJyb3Iobik7fWlmKGEgaW5zdGFuY2VvZiByYil7aWYoYS5oYXMoYikpe3ZhciBwPWEuZ2V0KGIpO2lmKHAgaW5zdGFuY2VvZiBlZCl7dmFyIHE9b2IoYyk7cS51bnNoaWZ0KHRoaXMuaCk7cmV0dXJuIHAuaW52b2tlLmFwcGx5KHAscSl9dmFyIHI9IlR5cGVFcnJvcjogIitiKyIgaXMgbm90IGEgZnVuY3Rpb24iO2lmKG9kKCkpdGhyb3cgbmV3IHFkKHIpO3Rocm93IEVycm9yKHIpO31pZigwPD1wZC5zdXBwb3J0ZWRNZXRob2RzLmluZGV4T2YoYikpe3ZhciB0PW9iKGMpO3QudW5zaGlmdCh0aGlzLmgpO3JldHVybiBwZFtiXS5hcHBseShhLHQpfX1pZihhIGluc3RhbmNlb2YgZWR8fGEgaW5zdGFuY2VvZiBzYil7aWYoYS5oYXMoYikpe3ZhciB1PWEuZ2V0KGIpOwppZih1IGluc3RhbmNlb2YgZWQpe3ZhciB2PW9iKGMpO3YudW5zaGlmdCh0aGlzLmgpO3JldHVybiB1Lmludm9rZS5hcHBseSh1LHYpfXZhciB3PSJUeXBlRXJyb3I6ICIrYisiIGlzIG5vdCBhIGZ1bmN0aW9uIjtpZihvZCgpKXRocm93IG5ldyBxZCh3KTt0aHJvdyBFcnJvcih3KTt9aWYoInRvU3RyaW5nIj09PWIpcmV0dXJuIGEgaW5zdGFuY2VvZiBlZD9hLkY6YS50b1N0cmluZygpO2lmKCJoYXNPd25Qcm9wZXJ0eSI9PT1iKXJldHVybiBhLmhhcy5hcHBseShhLG9iKGMpKX1pZihhIGluc3RhbmNlb2YgamQmJiJ0b1N0cmluZyI9PT1iKXJldHVybiBhLnRvU3RyaW5nKCk7dmFyIHg9IlR5cGVFcnJvcjogT2JqZWN0IGhhcyBubyAnIitiKyInIHByb3BlcnR5LiI7aWYob2QoKSl0aHJvdyBuZXcgcWQoeCk7dGhyb3cgRXJyb3IoeCk7fSx4ZD1mdW5jdGlvbihhLGIpe2E9SSh0aGlzLGEpO2lmKCJzdHJpbmciIT09dHlwZW9mIGEpdGhyb3cgRXJyb3IoIkludmFsaWQga2V5IG5hbWUgZ2l2ZW4gZm9yIGFzc2lnbm1lbnQuIik7CnZhciBjPXRoaXMuaDtpZighYy5oYXMoYSkpdGhyb3cgRXJyb3IoIkF0dGVtcHRpbmcgdG8gYXNzaWduIHRvIHVuZGVmaW5lZCB2YWx1ZSAiK2IpO3ZhciBkPUkodGhpcyxiKTtjLnNldChhLGQpO3JldHVybiBkfSx5ZD1mdW5jdGlvbihhKXt2YXIgYj1DYSh0aGlzLmgpLGM9ZGIoYixBcnJheS5wcm90b3R5cGUuc2xpY2UuYXBwbHkoYXJndW1lbnRzKSk7aWYoYyBpbnN0YW5jZW9mIHdhKXJldHVybiBjfSx6ZD1mdW5jdGlvbigpe3JldHVybiBzZH0sQWQ9ZnVuY3Rpb24oYSl7Zm9yKHZhciBiPUkodGhpcyxhKSxjPTA7YzxiLmxlbmd0aDtjKyspe3ZhciBkPUkodGhpcyxiW2NdKTtpZihkIGluc3RhbmNlb2Ygd2EpcmV0dXJuIGR9fSxDZD1mdW5jdGlvbihhKXtmb3IodmFyIGI9dGhpcy5oLGM9MDtjPGFyZ3VtZW50cy5sZW5ndGgtMTtjKz0yKXt2YXIgZD1hcmd1bWVudHNbY107aWYoInN0cmluZyI9PT10eXBlb2YgZCl7dmFyIGU9SSh0aGlzLGFyZ3VtZW50c1tjKzFdKTtCYShiLGQsZSwKITApfX19LERkPWZ1bmN0aW9uKCl7cmV0dXJuIHRkfSxFZD1mdW5jdGlvbihhLGIpe3JldHVybiBuZXcgd2EoYSxJKHRoaXMsYikpfSxGZD1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9bmV3IHJiO2I9SSh0aGlzLGIpO2Zvcih2YXIgZT0wO2U8Yi5sZW5ndGg7ZSsrKWQucHVzaChiW2VdKTt2YXIgZj1bNTEsYSxkXS5jb25jYXQoQXJyYXkucHJvdG90eXBlLnNwbGljZS5jYWxsKGFyZ3VtZW50cywyLGFyZ3VtZW50cy5sZW5ndGgtMikpO3RoaXMuaC5hZGQoYSxJKHRoaXMsZikpfSxHZD1mdW5jdGlvbihhLGIpe3JldHVybiBJKHRoaXMsYSkvSSh0aGlzLGIpfSxIZD1mdW5jdGlvbihhLGIpe2E9SSh0aGlzLGEpO2I9SSh0aGlzLGIpO3ZhciBjPWEgaW5zdGFuY2VvZiBqZCxkPWIgaW5zdGFuY2VvZiBqZDtyZXR1cm4gY3x8ZD9jJiZkP2EuaD09Yi5oOiExOmE9PWJ9LElkPWZ1bmN0aW9uKGEpe2Zvcih2YXIgYixjPTA7Yzxhcmd1bWVudHMubGVuZ3RoO2MrKyliPUkodGhpcyxhcmd1bWVudHNbY10pOwpyZXR1cm4gYn07ZnVuY3Rpb24gSmQoYSxiLGMsZCl7Zm9yKHZhciBlPTA7ZTxiKCk7ZSsrKXt2YXIgZj1hKGMoZSkpLGc9ZGIoZixkKTtpZihnIGluc3RhbmNlb2Ygd2Epe2lmKCJicmVhayI9PT1nLmgpYnJlYWs7aWYoInJldHVybiI9PT1nLmgpcmV0dXJuIGd9fX1mdW5jdGlvbiBLZChhLGIsYyl7aWYoInN0cmluZyI9PT10eXBlb2YgYilyZXR1cm4gSmQoYSxmdW5jdGlvbigpe3JldHVybiBiLmxlbmd0aH0sZnVuY3Rpb24oZil7cmV0dXJuIGZ9LGMpO2lmKGIgaW5zdGFuY2VvZiBzYnx8YiBpbnN0YW5jZW9mIHJifHxiIGluc3RhbmNlb2YgZWQpe3ZhciBkPWIuYWMoKSxlPWQubGVuZ3RoKCk7cmV0dXJuIEpkKGEsZnVuY3Rpb24oKXtyZXR1cm4gZX0sZnVuY3Rpb24oZil7cmV0dXJuIGQuZ2V0KGYpfSxjKX19CnZhciBMZD1mdW5jdGlvbihhLGIsYyl7YT1JKHRoaXMsYSk7Yj1JKHRoaXMsYik7Yz1JKHRoaXMsYyk7dmFyIGQ9dGhpcy5oO3JldHVybiBLZChmdW5jdGlvbihlKXtkLnNldChhLGUpO3JldHVybiBkfSxiLGMpfSxNZD1mdW5jdGlvbihhLGIsYyl7YT1JKHRoaXMsYSk7Yj1JKHRoaXMsYik7Yz1JKHRoaXMsYyk7dmFyIGQ9dGhpcy5oO3JldHVybiBLZChmdW5jdGlvbihlKXt2YXIgZj1DYShkKTtCYShmLGEsZSwhMCk7cmV0dXJuIGZ9LGIsYyl9LE5kPWZ1bmN0aW9uKGEsYixjKXthPUkodGhpcyxhKTtiPUkodGhpcyxiKTtjPUkodGhpcyxjKTt2YXIgZD10aGlzLmg7cmV0dXJuIEtkKGZ1bmN0aW9uKGUpe3ZhciBmPUNhKGQpO2YuYWRkKGEsZSk7cmV0dXJuIGZ9LGIsYyl9LFBkPWZ1bmN0aW9uKGEsYixjKXthPUkodGhpcyxhKTtiPUkodGhpcyxiKTtjPUkodGhpcyxjKTt2YXIgZD10aGlzLmg7cmV0dXJuIE9kKGZ1bmN0aW9uKGUpe2Quc2V0KGEsZSk7cmV0dXJuIGR9LGIsYyl9LFFkPQpmdW5jdGlvbihhLGIsYyl7YT1JKHRoaXMsYSk7Yj1JKHRoaXMsYik7Yz1JKHRoaXMsYyk7dmFyIGQ9dGhpcy5oO3JldHVybiBPZChmdW5jdGlvbihlKXt2YXIgZj1DYShkKTtCYShmLGEsZSwhMCk7cmV0dXJuIGZ9LGIsYyl9LFJkPWZ1bmN0aW9uKGEsYixjKXthPUkodGhpcyxhKTtiPUkodGhpcyxiKTtjPUkodGhpcyxjKTt2YXIgZD10aGlzLmg7cmV0dXJuIE9kKGZ1bmN0aW9uKGUpe3ZhciBmPUNhKGQpO2YuYWRkKGEsZSk7cmV0dXJuIGZ9LGIsYyl9OwpmdW5jdGlvbiBPZChhLGIsYyl7aWYoInN0cmluZyI9PT10eXBlb2YgYilyZXR1cm4gSmQoYSxmdW5jdGlvbigpe3JldHVybiBiLmxlbmd0aH0sZnVuY3Rpb24oZCl7cmV0dXJuIGJbZF19LGMpO2lmKGIgaW5zdGFuY2VvZiByYilyZXR1cm4gSmQoYSxmdW5jdGlvbigpe3JldHVybiBiLmxlbmd0aCgpfSxmdW5jdGlvbihkKXtyZXR1cm4gYi5nZXQoZCl9LGMpO2lmKG9kKCkpdGhyb3cgbmV3IHFkKCJUaGUgdmFsdWUgaXMgbm90IGl0ZXJhYmxlLiIpO3Rocm93IG5ldyBUeXBlRXJyb3IoIlRoZSB2YWx1ZSBpcyBub3QgaXRlcmFibGUuIik7fQp2YXIgU2Q9ZnVuY3Rpb24oYSxiLGMsZCl7ZnVuY3Rpb24gZShwLHEpe2Zvcih2YXIgcj0wO3I8Zi5sZW5ndGgoKTtyKyspe3ZhciB0PWYuZ2V0KHIpO3EuYWRkKHQscC5nZXQodCkpfX12YXIgZj1JKHRoaXMsYSk7aWYoIShmIGluc3RhbmNlb2YgcmIpKXRocm93IEVycm9yKCJUeXBlRXJyb3I6IE5vbi1MaXN0IGFyZ3VtZW50IGdpdmVuIHRvIEZvckxldCBpbnN0cnVjdGlvbi4iKTt2YXIgZz10aGlzLmg7ZD1JKHRoaXMsZCk7dmFyIGg9Q2EoZyk7Zm9yKGUoZyxoKTtlYihoLGIpOyl7dmFyIG09ZGIoaCxkKTtpZihtIGluc3RhbmNlb2Ygd2Epe2lmKCJicmVhayI9PT1tLmgpYnJlYWs7aWYoInJldHVybiI9PT1tLmgpcmV0dXJuIG19dmFyIG49Q2EoZyk7ZShoLG4pO2ViKG4sYyk7aD1ufX0sVGQ9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPXRoaXMuaCxlPUkodGhpcyxiKTtpZighKGUgaW5zdGFuY2VvZiByYikpdGhyb3cgRXJyb3IoIkVycm9yOiBub24tTGlzdCB2YWx1ZSBnaXZlbiBmb3IgRm4gYXJndW1lbnQgbmFtZXMuIik7CnZhciBmPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywyKTtyZXR1cm4gbmV3IGVkKGEsZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24oZyl7dmFyIGg9Q2EoZCk7dm9pZCAwPT09aC5oJiYoaC5oPXRoaXMuaC5oKTtmb3IodmFyIG09QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDApLG49MDtuPG0ubGVuZ3RoO24rKylpZihtW25dPUkodGhpcyxtW25dKSxtW25daW5zdGFuY2VvZiB3YSlyZXR1cm4gbVtuXTtmb3IodmFyIHA9ZS5nZXQoImxlbmd0aCIpLHE9MDtxPHA7cSsrKXE8bS5sZW5ndGg/aC5hZGQoZS5nZXQocSksbVtxXSk6aC5hZGQoZS5nZXQocSksdm9pZCAwKTtoLmFkZCgiYXJndW1lbnRzIixuZXcgcmIobSkpO3ZhciByPWRiKGgsZik7aWYociBpbnN0YW5jZW9mIHdhKXJldHVybiJyZXR1cm4iPT09ci5oP3IuczpyfX0oKSl9LFVkPWZ1bmN0aW9uKGEpe2E9SSh0aGlzLGEpO3ZhciBiPXRoaXMuaCxjPSExO2lmKGMmJiFiLmhhcyhhKSl0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoYSsiIGlzIG5vdCBkZWZpbmVkLiIpO3JldHVybiBiLmdldChhKX0sVmQ9ZnVuY3Rpb24oYSxiKXt2YXIgYzthPUkodGhpcyxhKTtiPUkodGhpcyxiKTtpZih2b2lkIDA9PT1hfHxudWxsPT09YSl7dmFyIGQ9IlR5cGVFcnJvcjogQ2Fubm90IHJlYWQgcHJvcGVydGllcyBvZiAiK2ErIiAocmVhZGluZyAnIitiKyInKSI7aWYob2QoKSl0aHJvdyBuZXcgcWQoZCk7dGhyb3cgRXJyb3IoZCk7fWlmKGEgaW5zdGFuY2VvZiBzYnx8YSBpbnN0YW5jZW9mIHJifHxhIGluc3RhbmNlb2YgZWQpYz1hLmdldChiKTtlbHNlIGlmKCJzdHJpbmciPT09dHlwZW9mIGEpImxlbmd0aCI9PT1iP2M9YS5sZW5ndGg6cWIoYikmJihjPWFbYl0pO2Vsc2UgaWYoYSBpbnN0YW5jZW9mIGpkKXJldHVybjsKcmV0dXJuIGN9LFdkPWZ1bmN0aW9uKGEsYil7cmV0dXJuIEkodGhpcyxhKT5JKHRoaXMsYil9LFhkPWZ1bmN0aW9uKGEsYil7cmV0dXJuIEkodGhpcyxhKT49SSh0aGlzLGIpfSxZZD1mdW5jdGlvbihhLGIpe2E9SSh0aGlzLGEpO2I9SSh0aGlzLGIpO2EgaW5zdGFuY2VvZiBqZCYmKGE9YS5oKTtiIGluc3RhbmNlb2YgamQmJihiPWIuaCk7cmV0dXJuIGE9PT1ifSxaZD1mdW5jdGlvbihhLGIpe3JldHVybiFZZC5jYWxsKHRoaXMsYSxiKX0sJGQ9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPVtdO0kodGhpcyxhKT9kPUkodGhpcyxiKTpjJiYoZD1JKHRoaXMsYykpO3ZhciBlPWRiKHRoaXMuaCxkKTtpZihlIGluc3RhbmNlb2Ygd2EpcmV0dXJuIGV9LGFlPWZ1bmN0aW9uKGEsYil7cmV0dXJuIEkodGhpcyxhKTxJKHRoaXMsYil9LGJlPWZ1bmN0aW9uKGEsYil7cmV0dXJuIEkodGhpcyxhKTw9SSh0aGlzLGIpfSxjZT1mdW5jdGlvbihhKXtmb3IodmFyIGI9bmV3IHJiLGM9MDtjPGFyZ3VtZW50cy5sZW5ndGg7YysrKXt2YXIgZD0KSSh0aGlzLGFyZ3VtZW50c1tjXSk7Yi5wdXNoKGQpfXJldHVybiBifSxkZT1mdW5jdGlvbihhKXtmb3IodmFyIGI9bmV3IHNiLGM9MDtjPGFyZ3VtZW50cy5sZW5ndGgtMTtjKz0yKXt2YXIgZD1JKHRoaXMsYXJndW1lbnRzW2NdKSsiIixlPUkodGhpcyxhcmd1bWVudHNbYysxXSk7Yi5zZXQoZCxlKX1yZXR1cm4gYn0sZWU9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gSSh0aGlzLGEpJUkodGhpcyxiKX0sZmU9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gSSh0aGlzLGEpKkkodGhpcyxiKX0sZ2U9ZnVuY3Rpb24oYSl7cmV0dXJuLUkodGhpcyxhKX0saGU9ZnVuY3Rpb24oYSl7cmV0dXJuIUkodGhpcyxhKX0saWU9ZnVuY3Rpb24oYSxiKXtyZXR1cm4hSGQuY2FsbCh0aGlzLGEsYil9LGplPWZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LGtlPWZ1bmN0aW9uKGEsYil7cmV0dXJuIEkodGhpcyxhKXx8SSh0aGlzLGIpfSxsZT1mdW5jdGlvbihhLGIpe3ZhciBjPUkodGhpcyxhKTtJKHRoaXMsYik7cmV0dXJuIGN9LAptZT1mdW5jdGlvbihhKXtyZXR1cm4gSSh0aGlzLGEpfSxuZT1mdW5jdGlvbihhKXtyZXR1cm4gQXJyYXkucHJvdG90eXBlLnNsaWNlLmFwcGx5KGFyZ3VtZW50cyl9LG9lPWZ1bmN0aW9uKGEpe3JldHVybiBuZXcgd2EoInJldHVybiIsSSh0aGlzLGEpKX0scGU9ZnVuY3Rpb24oYSxiLGMpe2E9SSh0aGlzLGEpO2I9SSh0aGlzLGIpO2M9SSh0aGlzLGMpO2lmKG51bGw9PT1hfHx2b2lkIDA9PT1hKXt2YXIgZD0iVHlwZUVycm9yOiBDYW4ndCBzZXQgcHJvcGVydHkgIitiKyIgb2YgIithKyIuIjtpZihvZCgpKXRocm93IG5ldyBxZChkKTt0aHJvdyBFcnJvcihkKTt9KGEgaW5zdGFuY2VvZiBlZHx8YSBpbnN0YW5jZW9mIHJifHxhIGluc3RhbmNlb2Ygc2IpJiZhLnNldChiLGMpO3JldHVybiBjfSxxZT1mdW5jdGlvbihhLGIpe3JldHVybiBJKHRoaXMsYSktSSh0aGlzLGIpfSxyZT1mdW5jdGlvbihhLGIsYyl7YT1JKHRoaXMsYSk7dmFyIGQ9SSh0aGlzLGIpLGU9SSh0aGlzLGMpO2lmKCFIYShkKXx8CiFIYShlKSl0aHJvdyBFcnJvcigiRXJyb3I6IE1hbGZvcm1lZCBzd2l0Y2ggaW5zdHJ1Y3Rpb24uIik7Zm9yKHZhciBmLGc9ITEsaD0wO2g8ZC5sZW5ndGg7aCsrKWlmKGd8fGE9PT1JKHRoaXMsZFtoXSkpaWYoZj1JKHRoaXMsZVtoXSksZiBpbnN0YW5jZW9mIHdhKXt2YXIgbT1mLmg7aWYoImJyZWFrIj09PW0pcmV0dXJuO2lmKCJyZXR1cm4iPT09bXx8ImNvbnRpbnVlIj09PW0pcmV0dXJuIGZ9ZWxzZSBnPSEwO2lmKGUubGVuZ3RoPT09ZC5sZW5ndGgrMSYmKGY9SSh0aGlzLGVbZS5sZW5ndGgtMV0pLGYgaW5zdGFuY2VvZiB3YSYmKCJyZXR1cm4iPT09Zi5ofHwiY29udGludWUiPT09Zi5oKSkpcmV0dXJuIGZ9LHNlPWZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gSSh0aGlzLGEpP0kodGhpcyxiKTpJKHRoaXMsYyl9LHRlPWZ1bmN0aW9uKGEpe2E9SSh0aGlzLGEpO3JldHVybiBhIGluc3RhbmNlb2YgZWQ/ImZ1bmN0aW9uIjp0eXBlb2YgYX0sdWU9ZnVuY3Rpb24oYSl7Zm9yKHZhciBiPQp0aGlzLmgsYz0wO2M8YXJndW1lbnRzLmxlbmd0aDtjKyspe3ZhciBkPWFyZ3VtZW50c1tjXTsic3RyaW5nIiE9PXR5cGVvZiBkfHxiLmFkZChkLHZvaWQgMCl9fSx2ZT1mdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1JKHRoaXMsZCk7aWYoSSh0aGlzLGMpKXt2YXIgZj1kYih0aGlzLmgsZSk7aWYoZiBpbnN0YW5jZW9mIHdhKXtpZigiYnJlYWsiPT09Zi5oKXJldHVybjtpZigicmV0dXJuIj09PWYuaClyZXR1cm4gZn19Zm9yKDtJKHRoaXMsYSk7KXt2YXIgZz1kYih0aGlzLmgsZSk7aWYoZyBpbnN0YW5jZW9mIHdhKXtpZigiYnJlYWsiPT09Zy5oKWJyZWFrO2lmKCJyZXR1cm4iPT09Zy5oKXJldHVybiBnfUkodGhpcyxiKX19LHdlPWZ1bmN0aW9uKGEpe3JldHVybn5OdW1iZXIoSSh0aGlzLGEpKX0seGU9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gTnVtYmVyKEkodGhpcyxhKSk8PE51bWJlcihJKHRoaXMsYikpfSx5ZT1mdW5jdGlvbihhLGIpe3JldHVybiBOdW1iZXIoSSh0aGlzLGEpKT4+TnVtYmVyKEkodGhpcywKYikpfSx6ZT1mdW5jdGlvbihhLGIpe3JldHVybiBOdW1iZXIoSSh0aGlzLGEpKT4+Pk51bWJlcihJKHRoaXMsYikpfSxBZT1mdW5jdGlvbihhLGIpe3JldHVybiBOdW1iZXIoSSh0aGlzLGEpKSZOdW1iZXIoSSh0aGlzLGIpKX0sQmU9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gTnVtYmVyKEkodGhpcyxhKSleTnVtYmVyKEkodGhpcyxiKSl9LENlPWZ1bmN0aW9uKGEsYil7cmV0dXJuIE51bWJlcihJKHRoaXMsYSkpfE51bWJlcihJKHRoaXMsYikpfSxEZT1mdW5jdGlvbigpe30sRWU9ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZj0hMDt0cnl7dmFyIGc9SSh0aGlzLGMpO2lmKGcgaW5zdGFuY2VvZiB3YSlyZXR1cm4gZ31jYXRjaChyKXtpZighKHIgaW5zdGFuY2VvZiBxZCYmYSkpdGhyb3cgZj1yIGluc3RhbmNlb2YgcWQscjt2YXIgaD1DYSh0aGlzLmgpLG09bmV3IGpkKHIpO2guYWRkKGIsbSk7dmFyIG49SSh0aGlzLGQpLHA9ZGIoaCxuKTtpZihwIGluc3RhbmNlb2Ygd2EpcmV0dXJuIHB9ZmluYWxseXtpZihmJiYKdm9pZCAwIT09ZSl7dmFyIHE9SSh0aGlzLGUpO2lmKHEgaW5zdGFuY2VvZiB3YSlyZXR1cm4gcX19fTt2YXIgR2U9ZnVuY3Rpb24oKXt0aGlzLmg9bmV3IGZiO0ZlKHRoaXMpfTtHZS5wcm90b3R5cGUuZXhlY3V0ZT1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5oLnMoYSl9O3ZhciBGZT1mdW5jdGlvbihhKXt2YXIgYj1mdW5jdGlvbihjLGQpe3ZhciBlPW5ldyBlZChTdHJpbmcoYyksZCk7ZS5KYigpO2EuaC5oLnNldChTdHJpbmcoYyksZSl9O2IoIm1hcCIsZGUpO2IoImFuZCIsWmMpO2IoImNvbnRhaW5zIixiZCk7YigiZXF1YWxzIiwkYyk7Yigib3IiLGFkKTtiKCJzdGFydHNXaXRoIixjZCk7YigidmFyaWFibGUiLGRkKX07dmFyIEllPWZ1bmN0aW9uKCl7dGhpcy5oPW5ldyBmYjtIZSh0aGlzKX07SWUucHJvdG90eXBlLmV4ZWN1dGU9ZnVuY3Rpb24oYSl7cmV0dXJuIEplKHRoaXMuaC5zKGEpKX07CnZhciBLZT1mdW5jdGlvbihhLGIsYyl7cmV0dXJuIEplKGEuaC5GKGIsYykpfSxIZT1mdW5jdGlvbihhKXt2YXIgYj1mdW5jdGlvbihjLGQpe3ZhciBlPVN0cmluZyhjKSxmPW5ldyBlZChlLGQpO2YuSmIoKTthLmguaC5zZXQoZSxmKX07YigwLHVkKTtiKDEsdmQpO2IoMix3ZCk7YigzLHhkKTtiKDU2LEFlKTtiKDU3LHhlKTtiKDU4LHdlKTtiKDU5LENlKTtiKDYwLHllKTtiKDYxLHplKTtiKDYyLEJlKTtiKDUzLHlkKTtiKDQsemQpO2IoNSxBZCk7Yig1MixDZCk7Yig2LERkKTtiKDQ5LEVkKTtiKDcsY2UpO2IoOCxkZSk7Yig5LEFkKTtiKDUwLEZkKTtiKDEwLEdkKTtiKDEyLEhkKTtiKDEzLElkKTtiKDUxLFRkKTtiKDQ3LExkKTtiKDU0LE1kKTtiKDU1LE5kKTtiKDYzLFNkKTtiKDY0LFBkKTtiKDY1LFFkKTtiKDY2LFJkKTtiKDE1LFVkKTtiKDE2LFZkKTtiKDE3LFZkKTtiKDE4LFdkKTtiKDE5LFhkKTtiKDIwLFlkKTtiKDIxLFpkKTtiKDIyLCRkKTtiKDIzLGFlKTtiKDI0LGJlKTsKYigyNSxlZSk7YigyNixmZSk7YigyNyxnZSk7YigyOCxoZSk7YigyOSxpZSk7Yig0NSxqZSk7YigzMCxrZSk7YigzMixsZSk7YigzMyxsZSk7YigzNCxtZSk7YigzNSxtZSk7Yig0NixuZSk7YigzNixvZSk7Yig0MyxwZSk7YigzNyxxZSk7YigzOCxyZSk7YigzOSxzZSk7Yig2NyxFZSk7Yig0MCx0ZSk7Yig0NCxEZSk7Yig0MSx1ZSk7Yig0Mix2ZSl9O2Z1bmN0aW9uIEplKGEpe2lmKGEgaW5zdGFuY2VvZiB3YXx8YSBpbnN0YW5jZW9mIGVkfHxhIGluc3RhbmNlb2YgcmJ8fGEgaW5zdGFuY2VvZiBzYnx8YSBpbnN0YW5jZW9mIGpkfHxudWxsPT09YXx8dm9pZCAwPT09YXx8InN0cmluZyI9PT10eXBlb2YgYXx8Im51bWJlciI9PT10eXBlb2YgYXx8ImJvb2xlYW4iPT09dHlwZW9mIGEpcmV0dXJuIGF9O3ZhciBMZT1mdW5jdGlvbihhKXt0aGlzLm1lc3NhZ2U9YX07ZnVuY3Rpb24gTWUoYSl7dmFyIGI9IjAxMjM0NTY3ODlhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ekFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaLV8iW2FdO3JldHVybiB2b2lkIDA9PT1iP25ldyBMZSgiVmFsdWUgIithKyIgY2FuIG5vdCBiZSBlbmNvZGVkIGluIHdlYi1zYWZlIGJhc2U2NCBkaWN0aW9uYXJ5LiIpOmJ9O2Z1bmN0aW9uIE5lKGEpe3N3aXRjaChhKXtjYXNlIDE6cmV0dXJuIjEiO2Nhc2UgMjpjYXNlIDQ6cmV0dXJuIjAiO2RlZmF1bHQ6cmV0dXJuIi0ifX07dmFyIE9lPWZ1bmN0aW9uKCl7dmFyIGE9ZnVuY3Rpb24oYil7cmV0dXJue3RvU3RyaW5nOmZ1bmN0aW9uKCl7cmV0dXJuIGJ9fX07cmV0dXJue3ZrOmEoImNvbnNlbnQiKSxvaTphKCJjb252ZXJ0X2Nhc2VfdG8iKSxyaTphKCJjb252ZXJ0X2ZhbHNlX3RvIiksc2k6YSgiY29udmVydF9udWxsX3RvIiksdWk6YSgiY29udmVydF90cnVlX3RvIiksdmk6YSgiY29udmVydF91bmRlZmluZWRfdG8iKSxJbjphKCJkZWJ1Z19tb2RlX21ldGFkYXRhIiksbWE6YSgiZnVuY3Rpb24iKSxlaDphKCJpbnN0YW5jZV9uYW1lIiksYmw6YSgibGl2ZV9vbmx5IiksZmw6YSgibWFsd2FyZV9kaXNhYmxlZCIpLGlsOmEoIm1ldGFkYXRhIiksbWw6YSgib3JpZ2luYWxfYWN0aXZpdHlfaWQiKSxXbjphKCJvcmlnaW5hbF92ZW5kb3JfdGVtcGxhdGVfaWQiKSxWbjphKCJvbmNlX29uX2xvYWQiKSxrbDphKCJvbmNlX3Blcl9ldmVudCIpLHNqOmEoIm9uY2VfcGVyX2xvYWQiKSxhbzphKCJwcmlvcml0eV9vdmVycmlkZSIpLApibzphKCJyZXNwZWN0ZWRfY29uc2VudF90eXBlcyIpLHhqOmEoInNldHVwX3RhZ3MiKSx3ZTphKCJ0YWdfaWQiKSxDajphKCJ0ZWFyZG93bl90YWdzIil9fSgpO3ZhciBrZjsKdmFyIGxmPVtdLG1mPVtdLG5mPVtdLG9mPVtdLHBmPVtdLHFmPXt9LHJmLHNmLHRmPWZ1bmN0aW9uKGEpe3NmPXNmfHxhfSx1Zj1mdW5jdGlvbihhKXt9LHZmLHdmPVtdLHhmPVtdLHlmPWZ1bmN0aW9uKGEsYil7dmFyIGM9e307Y1tPZS5tYV09Il9fIithO2Zvcih2YXIgZCBpbiBiKWIuaGFzT3duUHJvcGVydHkoZCkmJihjWyJ2dHBfIitkXT1iW2RdKTtyZXR1cm4gY30sCnpmPWZ1bmN0aW9uKGEsYil7dmFyIGM9YVtPZS5tYV0sZD1iJiZiLmV2ZW50O2lmKCFjKXRocm93IEVycm9yKCJFcnJvcjogTm8gZnVuY3Rpb24gbmFtZSBnaXZlbiBmb3IgZnVuY3Rpb24gY2FsbC4iKTt2YXIgZT1xZltjXSxmPWImJjI9PT1iLnR5cGUmJmQucmVwb3J0TWFjcm9EaXNjcmVwYW5jeSYmZSYmLTEhPT13Zi5pbmRleE9mKGMpLGc9e30saD17fSxtO2ZvcihtIGluIGEpYS5oYXNPd25Qcm9wZXJ0eShtKSYmMD09PW0uaW5kZXhPZigidnRwXyIpJiYoZSYmKGdbbV09YVttXSksIWV8fGYpJiYoaFttLnN1YnN0cig0KV09YVttXSk7ZSYmZCYmZC5jYWNoZWRNb2RlbFZhbHVlcyYmKGcudnRwX2d0bUNhY2hlZFZhbHVlcz1kLmNhY2hlZE1vZGVsVmFsdWVzKTtpZihiKXtpZihudWxsPT1iLm5hbWUpe3ZhciBuO2E6e3ZhciBwPWIudHlwZSxxPWIuaW5kZXg7aWYobnVsbD09cSluPSIiO2Vsc2V7dmFyIHI7c3dpdGNoKHApe2Nhc2UgMjpyPWxmW3FdO2JyZWFrO2Nhc2UgMTpyPW9mW3FdOwpicmVhaztkZWZhdWx0Om49IiI7YnJlYWsgYX12YXIgdD1yJiZyW09lLmVoXTtuPXQ/U3RyaW5nKHQpOiIifX1iLm5hbWU9bn1lJiYoZy52dHBfZ3RtRW50aXR5SW5kZXg9Yi5pbmRleCxnLnZ0cF9ndG1FbnRpdHlOYW1lPWIubmFtZSl9dmFyIHUsdix3O2lmKGYmJi0xPT09eGYuaW5kZXhPZihjKSl7eGYucHVzaChjKTt2YXIgeD1UYSgpO3U9ZShnKTt2YXIgeT1UYSgpLXgsQj1UYSgpO3Y9a2YoYyxoLGIpO3c9eS0oVGEoKS1CKX1lbHNlIGlmKGUmJih1PWUoZykpLCFlfHxmKXY9a2YoYyxoLGIpO2YmJmQmJihkLnJlcG9ydE1hY3JvRGlzY3JlcGFuY3koZC5pZCxjLHZvaWQgMCwhMCkscGIodSk/KEhhKHUpP0hhKHYpOmxiKHUpP2xiKHYpOnU9PT12KXx8ZC5yZXBvcnRNYWNyb0Rpc2NyZXBhbmN5KGQuaWQsYyk6dSE9PXYmJmQucmVwb3J0TWFjcm9EaXNjcmVwYW5jeShkLmlkLGMpLHZvaWQgMCE9dyYmZC5yZXBvcnRNYWNyb0Rpc2NyZXBhbmN5KGQuaWQsYyx3KSk7cmV0dXJuIGU/dToKdn0sQmY9ZnVuY3Rpb24oYSxiLGMpe2M9Y3x8W107dmFyIGQ9e30sZTtmb3IoZSBpbiBhKWEuaGFzT3duUHJvcGVydHkoZSkmJihkW2VdPUFmKGFbZV0sYixjKSk7cmV0dXJuIGR9LEFmPWZ1bmN0aW9uKGEsYixjKXtpZihIYShhKSl7dmFyIGQ7c3dpdGNoKGFbMF0pe2Nhc2UgImZ1bmN0aW9uX2lkIjpyZXR1cm4gYVsxXTtjYXNlICJsaXN0IjpkPVtdO2Zvcih2YXIgZT0xO2U8YS5sZW5ndGg7ZSsrKWQucHVzaChBZihhW2VdLGIsYykpO3JldHVybiBkO2Nhc2UgIm1hY3JvIjp2YXIgZj1hWzFdO2lmKGNbZl0pcmV0dXJuO3ZhciBnPWxmW2ZdO2lmKCFnfHxiLmlzQmxvY2tlZChnKSlyZXR1cm47Y1tmXT0hMDt2YXIgaD1TdHJpbmcoZ1tPZS5laF0pO3RyeXt2YXIgbT1CZihnLGIsYyk7bS52dHBfZ3RtRXZlbnRJZD1iLmlkO2IucHJpb3JpdHlJZCYmKG0udnRwX2d0bVByaW9yaXR5SWQ9Yi5wcmlvcml0eUlkKTtkPXpmKG0se2V2ZW50OmIsaW5kZXg6Zix0eXBlOjIsbmFtZTpofSk7dmYmJgooZD12Zi5IbChkLG0pKX1jYXRjaCh5KXtiLmxvZ01hY3JvRXJyb3ImJmIubG9nTWFjcm9FcnJvcih5LE51bWJlcihmKSxoKSxkPSExfWNbZl09ITE7cmV0dXJuIGQ7Y2FzZSAibWFwIjpkPXt9O2Zvcih2YXIgbj0xO248YS5sZW5ndGg7bis9MilkW0FmKGFbbl0sYixjKV09QWYoYVtuKzFdLGIsYyk7cmV0dXJuIGQ7Y2FzZSAidGVtcGxhdGUiOmQ9W107Zm9yKHZhciBwPSExLHE9MTtxPGEubGVuZ3RoO3ErKyl7dmFyIHI9QWYoYVtxXSxiLGMpO3NmJiYocD1wfHxzZi55bShyKSk7ZC5wdXNoKHIpfXJldHVybiBzZiYmcD9zZi5KbChkKTpkLmpvaW4oIiIpO2Nhc2UgImVzY2FwZSI6ZD1BZihhWzFdLGIsYyk7aWYoc2YmJkhhKGFbMV0pJiYibWFjcm8iPT09YVsxXVswXSYmc2Yuem0oYSkpcmV0dXJuIHNmLlptKGQpO2Q9U3RyaW5nKGQpO2Zvcih2YXIgdD0yO3Q8YS5sZW5ndGg7dCsrKVBlW2FbdF1dJiYoZD1QZVthW3RdXShkKSk7cmV0dXJuIGQ7Y2FzZSAidGFnIjp2YXIgdT1hWzFdO2lmKCFvZlt1XSl0aHJvdyBFcnJvcigiVW5hYmxlIHRvIHJlc29sdmUgdGFnIHJlZmVyZW5jZSAiKwp1KyIuIik7cmV0dXJuIGQ9e01qOmFbMl0saW5kZXg6dX07Y2FzZSAiemIiOnZhciB2PXthcmcwOmFbMl0sYXJnMTphWzNdLGlnbm9yZV9jYXNlOmFbNV19O3ZbT2UubWFdPWFbMV07dmFyIHc9Q2YodixiLGMpLHg9ISFhWzRdO3JldHVybiB4fHwyIT09dz94IT09KDE9PT13KTpudWxsO2RlZmF1bHQ6dGhyb3cgRXJyb3IoIkF0dGVtcHRpbmcgdG8gZXhwYW5kIHVua25vd24gVmFsdWUgdHlwZTogIithWzBdKyIuIik7fX1yZXR1cm4gYX0sQ2Y9ZnVuY3Rpb24oYSxiLGMpe3RyeXtyZXR1cm4gcmYoQmYoYSxiLGMpKX1jYXRjaChkKXtKU09OLnN0cmluZ2lmeShhKX1yZXR1cm4gMn0sRGY9ZnVuY3Rpb24oYSl7dmFyIGI9YVtPZS5tYV07aWYoIWIpdGhyb3cgRXJyb3IoIkVycm9yOiBObyBmdW5jdGlvbiBuYW1lIGdpdmVuIGZvciBmdW5jdGlvbiBjYWxsLiIpO3JldHVybiEhcWZbYl19O3ZhciBFZj1mdW5jdGlvbihhLGIsYyl7dmFyIGQ7ZD1FcnJvci5jYWxsKHRoaXMsYyk7dGhpcy5tZXNzYWdlPWQubWVzc2FnZTsic3RhY2siaW4gZCYmKHRoaXMuc3RhY2s9ZC5zdGFjayk7dGhpcy5oPWF9O3NhKEVmLEVycm9yKTtmdW5jdGlvbiBGZihhLGIpe2lmKEhhKGEpKXtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSwiY29udGV4dCIse3ZhbHVlOntsaW5lOmJbMF19fSk7Zm9yKHZhciBjPTE7YzxhLmxlbmd0aDtjKyspRmYoYVtjXSxiW2NdKX19O3ZhciBHZj1mdW5jdGlvbihhLGIpe3ZhciBjO2M9RXJyb3IuY2FsbCh0aGlzKTt0aGlzLm1lc3NhZ2U9Yy5tZXNzYWdlOyJzdGFjayJpbiBjJiYodGhpcy5zdGFjaz1jLnN0YWNrKTt0aGlzLlVtPWE7dGhpcy5zPWI7dGhpcy5oPVtdfTtzYShHZixFcnJvcik7dmFyIElmPWZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKGEsYil7YSBpbnN0YW5jZW9mIEdmfHwoYT1uZXcgR2YoYSxIZikpO2ImJmEuaC5wdXNoKGIpO3Rocm93IGE7fX07ZnVuY3Rpb24gSGYoYSl7aWYoIWEubGVuZ3RoKXJldHVybiBhO2EucHVzaCh7aWQ6Im1haW4iLGxpbmU6MH0pO2Zvcih2YXIgYj1hLmxlbmd0aC0xOzA8YjtiLS0pR2EoYVtiXS5pZCkmJmEuc3BsaWNlKGIrKywxKTtmb3IodmFyIGM9YS5sZW5ndGgtMTswPGM7Yy0tKWFbY10ubGluZT1hW2MtMV0ubGluZTthLnNwbGljZSgwLDEpO3JldHVybiBhfTt2YXIgTGY9ZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYihyKXtmb3IodmFyIHQ9MDt0PHIubGVuZ3RoO3QrKylkW3JbdF1dPSEwfWZvcih2YXIgYz1bXSxkPVtdLGU9SmYoYSksZj0wO2Y8bWYubGVuZ3RoO2YrKyl7dmFyIGc9bWZbZl0saD1LZihnLGUpO2lmKGgpe2Zvcih2YXIgbT1nLmFkZHx8W10sbj0wO248bS5sZW5ndGg7bisrKWNbbVtuXV09ITA7YihnLmJsb2NrfHxbXSl9ZWxzZSBudWxsPT09aCYmYihnLmJsb2NrfHxbXSk7fWZvcih2YXIgcD1bXSxxPTA7cTxvZi5sZW5ndGg7cSsrKWNbcV0mJiFkW3FdJiYocFtxXT0hMCk7cmV0dXJuIHB9LEtmPWZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPWFbImlmIl18fFtdLGQ9MDtkPGMubGVuZ3RoO2QrKyl7dmFyIGU9YihjW2RdKTtpZigwPT09ZSlyZXR1cm4hMTsKaWYoMj09PWUpcmV0dXJuIG51bGx9Zm9yKHZhciBmPWEudW5sZXNzfHxbXSxnPTA7ZzxmLmxlbmd0aDtnKyspe3ZhciBoPWIoZltnXSk7aWYoMj09PWgpcmV0dXJuIG51bGw7aWYoMT09PWgpcmV0dXJuITF9cmV0dXJuITB9LEpmPWZ1bmN0aW9uKGEpe3ZhciBiPVtdO3JldHVybiBmdW5jdGlvbihjKXt2b2lkIDA9PT1iW2NdJiYoYltjXT1DZihuZltjXSxhKSk7cmV0dXJuIGJbY119fTt2YXIgTWY9e0hsOmZ1bmN0aW9uKGEsYil7YltPZS5vaV0mJiJzdHJpbmciPT09dHlwZW9mIGEmJihhPTE9PWJbT2Uub2ldP2EudG9Mb3dlckNhc2UoKTphLnRvVXBwZXJDYXNlKCkpO2IuaGFzT3duUHJvcGVydHkoT2Uuc2kpJiZudWxsPT09YSYmKGE9YltPZS5zaV0pO2IuaGFzT3duUHJvcGVydHkoT2UudmkpJiZ2b2lkIDA9PT1hJiYoYT1iW09lLnZpXSk7Yi5oYXNPd25Qcm9wZXJ0eShPZS51aSkmJiEwPT09YSYmKGE9YltPZS51aV0pO2IuaGFzT3duUHJvcGVydHkoT2UucmkpJiYhMT09PWEmJihhPWJbT2UucmldKTtyZXR1cm4gYX19O3ZhciBOZj1mdW5jdGlvbigpe3RoaXMuaD17fX0sUGY9ZnVuY3Rpb24oYSxiKXt2YXIgYz1PZi5zLGQ7bnVsbCE9KGQ9Yy5oKVthXXx8KGRbYV09W10pO2MuaFthXS5wdXNoKGZ1bmN0aW9uKCl7cmV0dXJuIGIuYXBwbHkobnVsbCxrYSh0YS5hcHBseSgwLGFyZ3VtZW50cykpKX0pfTtmdW5jdGlvbiBRZihhLGIsYyxkKXtpZihhKWZvcih2YXIgZT0wO2U8YS5sZW5ndGg7ZSsrKXt2YXIgZj12b2lkIDAsZz0iQSBwb2xpY3kgZnVuY3Rpb24gZGVuaWVkIHRoZSBwZXJtaXNzaW9uIHJlcXVlc3QiO3RyeXtmPWFbZV0oYixjLGQpLGcrPSIuIn1jYXRjaChoKXtnPSJzdHJpbmciPT09dHlwZW9mIGg/ZysoIjogIitoKTpoIGluc3RhbmNlb2YgRXJyb3I/ZysoIjogIitoLm1lc3NhZ2UpOmcrIi4ifWlmKCFmKXRocm93IG5ldyBFZihjLGQsZyk7fX0KZnVuY3Rpb24gUmYoYSxiLGMpe3JldHVybiBmdW5jdGlvbigpe3ZhciBkPWFyZ3VtZW50c1swXTtpZihkKXt2YXIgZT1hLmhbZF0sZj1hLmguYWxsO2lmKGV8fGYpe3ZhciBnPWMuYXBwbHkodm9pZCAwLEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywwKSk7UWYoZSxiLGQsZyk7UWYoZixiLGQsZyl9fX19O3ZhciBTZj1bXSxUZj17fSxVZj1mdW5jdGlvbihhKXtyZXR1cm4gdm9pZCAwPT1TZlthXT8hMTpTZlthXX07dmFyIFlmPWZ1bmN0aW9uKCl7dmFyIGE9ZGF0YS5wZXJtaXNzaW9uc3x8e30sYj1WZi5jdGlkLGM9dGhpczt0aGlzLnM9bmV3IE5mO3RoaXMuaD17fTt2YXIgZD1VZigxNSksZT17fSxmPXt9LGc9UmYodGhpcy5zLGIsZnVuY3Rpb24oKXt2YXIgaD1hcmd1bWVudHNbMF07cmV0dXJuIGgmJmVbaF0/ZVtoXS5hcHBseSh2b2lkIDAsQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDApKTp7fX0pO2woYSxmdW5jdGlvbihoLG0pe3ZhciBuPXt9O2wobSxmdW5jdGlvbihxLHIpe3ZhciB0PVdmKHEscik7bltxXT10LmFzc2VydDtlW3FdfHwoZVtxXT10LkspO2QmJnQuRmomJiFmW3FdJiYoZltxXT10LkZqKX0pO3ZhciBwO2QmJihwPWZ1bmN0aW9uKHEpe3ZhciByPXRhLmFwcGx5KDEsYXJndW1lbnRzKTtpZighbltxXSl0aHJvdyBYZihxLHt9LCJUaGUgcmVxdWVzdGVkIGFkZGl0aW9uYWwgcGVybWlzc2lvbiAiK3ErIiBpcyBub3QgY29uZmlndXJlZC4iKTtnLmFwcGx5KG51bGwsCltxXS5jb25jYXQoa2EocikpKX0pO2MuaFtoXT1mdW5jdGlvbihxLHIpe3ZhciB0PW5bcV07aWYoIXQpdGhyb3cgWGYocSx7fSwiVGhlIHJlcXVlc3RlZCBwZXJtaXNzaW9uICIrcSsiIGlzIG5vdCBjb25maWd1cmVkLiIpO3ZhciB1PUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywwKTt0LmFwcGx5KHZvaWQgMCx1KTtnLmFwcGx5KHZvaWQgMCx1KTtpZihkKXt2YXIgdj1mW3FdO3YmJnYuYXBwbHkobnVsbCxbcF0uY29uY2F0KGthKHUuc2xpY2UoMSkpKSl9fX0pfSxaZj1mdW5jdGlvbihhKXtyZXR1cm4gT2YuaFthXXx8ZnVuY3Rpb24oKXt9fTsKZnVuY3Rpb24gV2YoYSxiKXt2YXIgYz15ZihhLGIpO2MudnRwX3Blcm1pc3Npb25OYW1lPWE7Yy52dHBfY3JlYXRlUGVybWlzc2lvbkVycm9yPVhmO3RyeXtyZXR1cm4gemYoYyl9Y2F0Y2goZCl7cmV0dXJue2Fzc2VydDpmdW5jdGlvbihlKXt0aHJvdyBuZXcgRWYoZSx7fSwiUGVybWlzc2lvbiAiK2UrIiBpcyB1bmtub3duLiIpO30sSzpmdW5jdGlvbigpe2lmKFVmKDE1KSl0aHJvdyBuZXcgRWYoYSx7fSwiUGVybWlzc2lvbiAiK2ErIiBpcyB1bmtub3duLiIpO2Zvcih2YXIgZT17fSxmPTA7Zjxhcmd1bWVudHMubGVuZ3RoOysrZillWyJhcmciKyhmKzEpXT1hcmd1bWVudHNbZl07cmV0dXJuIGV9fX19ZnVuY3Rpb24gWGYoYSxiLGMpe3JldHVybiBuZXcgRWYoYSxiLGMpfTt2YXIgJGY9ITE7dmFyIGFnPXt9O2FnLkJuPU9hKCcnKTthZy5MbD1PYSgnJyk7dmFyIGJnPSRmLGNnPWFnLkxsLGRnPWFnLkJuOwp2YXIgaGc9ZnVuY3Rpb24oYSl7dmFyIGI9e30sYz0wO2woYSxmdW5jdGlvbihlLGYpe2lmKG51bGwhPWYpaWYoZj0oIiIrZikucmVwbGFjZSgvfi9nLCJ+fiIpLGVnLmhhc093blByb3BlcnR5KGUpKWJbZWdbZV1dPWY7ZWxzZSBpZihmZy5oYXNPd25Qcm9wZXJ0eShlKSl7dmFyIGc9ZmdbZV0saD1mO2IuaGFzT3duUHJvcGVydHkoZyl8fChiW2ddPWgpfWVsc2UgaWYoImNhdGVnb3J5Ij09PWUpZm9yKHZhciBtPWYuc3BsaXQoIi8iLDUpLG49MDtuPG0ubGVuZ3RoO24rKyl7dmFyIHA9YixxPWdnW25dLHI9bVtuXTtwLmhhc093blByb3BlcnR5KHEpfHwocFtxXT1yKX1lbHNlIGlmKDI3PmMpe3ZhciB0PVN0cmluZy5mcm9tQ2hhckNvZGUoMTA+Yz80OCtjOjY1K2MtMTApO2JbImsiK3RdPSgiIitTdHJpbmcoZSkpLnJlcGxhY2UoL34vZywifn4iKTtiWyJ2Iit0XT1mO2MrK319KTt2YXIgZD1bXTtsKGIsZnVuY3Rpb24oZSxmKXtkLnB1c2goIiIrZStmKX0pO3JldHVybiBkLmpvaW4oIn4iKX0sCmVnPXtpdGVtX2lkOiJpZCIsaXRlbV9uYW1lOiJubSIsaXRlbV9icmFuZDoiYnIiLGl0ZW1fY2F0ZWdvcnk6ImNhIixpdGVtX2NhdGVnb3J5MjoiYzIiLGl0ZW1fY2F0ZWdvcnkzOiJjMyIsaXRlbV9jYXRlZ29yeTQ6ImM0IixpdGVtX2NhdGVnb3J5NToiYzUiLGl0ZW1fdmFyaWFudDoidmEiLHByaWNlOiJwciIscXVhbnRpdHk6InF0Iixjb3Vwb246ImNwIixpdGVtX2xpc3RfbmFtZToibG4iLGluZGV4OiJscCIsaXRlbV9saXN0X2lkOiJsaSIsZGlzY291bnQ6ImRzIixhZmZpbGlhdGlvbjoiYWYiLHByb21vdGlvbl9pZDoicGkiLHByb21vdGlvbl9uYW1lOiJwbiIsY3JlYXRpdmVfbmFtZToiY24iLGNyZWF0aXZlX3Nsb3Q6ImNzIixsb2NhdGlvbl9pZDoibG8ifSxmZz17aWQ6ImlkIixuYW1lOiJubSIsYnJhbmQ6ImJyIix2YXJpYW50OiJ2YSIsbGlzdF9uYW1lOiJsbiIsbGlzdF9wb3NpdGlvbjoibHAiLGxpc3Q6ImxuIixwb3NpdGlvbjoibHAiLGNyZWF0aXZlOiJjbiJ9LGdnPVsiY2EiLAoiYzIiLCJjMyIsImM0IiwiYzUiXTt2YXIgaWc9ZnVuY3Rpb24oYSl7dmFyIGI9W107bChhLGZ1bmN0aW9uKGMsZCl7bnVsbCE9ZCYmYi5wdXNoKGVuY29kZVVSSUNvbXBvbmVudChjKSsiPSIrZW5jb2RlVVJJQ29tcG9uZW50KFN0cmluZyhkKSkpfSk7cmV0dXJuIGIuam9pbigiJiIpfSxqZz1mdW5jdGlvbihhLGIsYyxkKXt0aGlzLm9hPWEub2E7dGhpcy5PYz1hLk9jO3RoaXMudGg9YS50aDt0aGlzLnM9Yjt0aGlzLkY9Yzt0aGlzLkM9aWcoYS5vYSk7dGhpcy5oPWlnKGEudGgpO3RoaXMuTT10aGlzLmgubGVuZ3RoO2lmKGQmJjE2Mzg0PHRoaXMuTSl0aHJvdyBFcnJvcigiRVZFTlRfVE9PX0xBUkdFIik7fTsKdmFyIGtnPWZ1bmN0aW9uKCl7dGhpcy5ldmVudHM9W107dGhpcy5oPSIiO3RoaXMub2E9e307dGhpcy5zPSIiO3RoaXMuRj0wO3RoaXMuTT10aGlzLkM9ITE7fTtrZy5wcm90b3R5cGUuYWRkPWZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLlcoYSk/KHRoaXMuZXZlbnRzLnB1c2goYSksdGhpcy5oPWEuQyx0aGlzLm9hPWEub2EsdGhpcy5zPWEucyx0aGlzLkYrPWEuTSx0aGlzLkM9YS5GLCEwKTohMX07a2cucHJvdG90eXBlLlc9ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMuZXZlbnRzLmxlbmd0aD8yMDw9dGhpcy5ldmVudHMubGVuZ3RofHwxNjM4NDw9YS5NK3RoaXMuRj8hMTp0aGlzLnM9PT1hLnMmJnRoaXMuQz09PWEuRiYmdGhpcy5FYShhKToKITB9O2tnLnByb3RvdHlwZS5FYT1mdW5jdGlvbihhKXt2YXIgYj10aGlzO2lmKHRoaXMuTSl7dmFyIGM9T2JqZWN0LmtleXModGhpcy5vYSk7cmV0dXJuIGMubGVuZ3RoPT09T2JqZWN0LmtleXMoYS5vYSkubGVuZ3RoJiZjLmV2ZXJ5KGZ1bmN0aW9uKGQpe3JldHVybiBhLm9hLmhhc093blByb3BlcnR5KGQpJiZTdHJpbmcoYi5vYVtkXSk9PT1TdHJpbmcoYS5vYVtkXSl9KX1yZXR1cm4gdGhpcy5oPT09YS5DfTsKdmFyIGxnPWZ1bmN0aW9uKGEsYil7bChhLGZ1bmN0aW9uKGMsZCl7bnVsbCE9ZCYmYi5wdXNoKGVuY29kZVVSSUNvbXBvbmVudChjKSsiPSIrZW5jb2RlVVJJQ29tcG9uZW50KGQpKX0pfSxtZz1mdW5jdGlvbihhLGIpe3ZhciBjPVtdO2EuQyYmYy5wdXNoKGEuQyk7YiYmYy5wdXNoKCJfcz0iK2IpO2xnKGEuT2MsYyk7dmFyIGQ9ITE7YS5oJiYoYy5wdXNoKGEuaCksZD0hMCk7dmFyIGU9Yy5qb2luKCImIiksZj0iIixnPWUubGVuZ3RoK2Eucy5sZW5ndGgrMTtkJiYyMDQ4PGcmJihmPWMucG9wKCksZT1jLmpvaW4oIiYiKSk7cmV0dXJue3BhcmFtczplLGJvZHk6Zn19LG5nPWZ1bmN0aW9uKGEsYil7dmFyIGM9YS5ldmVudHM7aWYoMT09Yy5sZW5ndGgpcmV0dXJuIG1nKGNbMF0sYik7dmFyIGQ9W107YS5oJiZkLnB1c2goYS5oKTtmb3IodmFyIGU9e30sZj0wO2Y8Yy5sZW5ndGg7ZisrKWwoY1tmXS5PYyxmdW5jdGlvbih0LHUpe251bGwhPXUmJihlW3RdPWVbdF18fHt9LGVbdF1bU3RyaW5nKHUpXT0KZVt0XVtTdHJpbmcodSldKzF8fDEpfSk7dmFyIGc9e307bChlLGZ1bmN0aW9uKHQsdSl7dmFyIHYsdz0tMSx4PTA7bCh1LGZ1bmN0aW9uKHksQil7eCs9Qjt2YXIgQT0oeS5sZW5ndGgrdC5sZW5ndGgrMikqKEItMSk7QT53JiYodj15LHc9QSl9KTt4PT1jLmxlbmd0aCYmKGdbdF09dil9KTtsZyhnLGQpO2ImJmQucHVzaCgiX3M9IitiKTtmb3IodmFyIGg9ZC5qb2luKCImIiksbT1bXSxuPXt9LHA9MDtwPGMubGVuZ3RoO249e01oOnZvaWQgMH0scCsrKXt2YXIgcT1bXTtuLk1oPXt9O2woY1twXS5PYyxmdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24odSx2KXtnW3VdIT0iIit2JiYodC5NaFt1XT12KX19KG4pKTtjW3BdLmgmJnEucHVzaChjW3BdLmgpO2xnKG4uTWgscSk7bS5wdXNoKHEuam9pbigiJiIpKX12YXIgcj1tLmpvaW4oIlxyXG4iKTtyZXR1cm57cGFyYW1zOmgsYm9keTpyfX07dmFyIHJnPVsibWF0Y2hlcyIsIndlYmtpdE1hdGNoZXNTZWxlY3RvciIsIm1vek1hdGNoZXNTZWxlY3RvciIsIm1zTWF0Y2hlc1NlbGVjdG9yIiwib01hdGNoZXNTZWxlY3RvciJdO2Z1bmN0aW9uIHNnKGEsYil7YT1TdHJpbmcoYSk7Yj1TdHJpbmcoYik7dmFyIGM9YS5sZW5ndGgtYi5sZW5ndGg7cmV0dXJuIDA8PWMmJmEuaW5kZXhPZihiLGMpPT09Y312YXIgdGc9bmV3IEthO2Z1bmN0aW9uIHVnKGEsYixjKXt2YXIgZD1jPyJpIjp2b2lkIDA7dHJ5e3ZhciBlPVN0cmluZyhiKStkLGY9dGcuZ2V0KGUpO2Z8fChmPW5ldyBSZWdFeHAoYixkKSx0Zy5zZXQoZSxmKSk7cmV0dXJuIGYudGVzdChhKX1jYXRjaChnKXtyZXR1cm4hMX19ZnVuY3Rpb24gdmcoYSxiKXtyZXR1cm4gMDw9U3RyaW5nKGEpLmluZGV4T2YoU3RyaW5nKGIpKX1mdW5jdGlvbiB3ZyhhLGIpe3JldHVybiBTdHJpbmcoYSk9PT1TdHJpbmcoYil9CmZ1bmN0aW9uIHhnKGEsYil7cmV0dXJuIE51bWJlcihhKT49TnVtYmVyKGIpfWZ1bmN0aW9uIHlnKGEsYil7cmV0dXJuIE51bWJlcihhKTw9TnVtYmVyKGIpfWZ1bmN0aW9uIHpnKGEsYil7cmV0dXJuIE51bWJlcihhKT5OdW1iZXIoYil9ZnVuY3Rpb24gQWcoYSxiKXtyZXR1cm4gTnVtYmVyKGEpPE51bWJlcihiKX1mdW5jdGlvbiBCZyhhLGIpe3JldHVybiAwPT09U3RyaW5nKGEpLmluZGV4T2YoU3RyaW5nKGIpKX07dmFyIElnPS9eWzEtOWEtekEtWl8tXVsxLTlhLWNdWzEtOWEtdl1cZCQvO2Z1bmN0aW9uIEpnKGEsYil7Zm9yKHZhciBjPSIiLGQ9ITA7NzxhOyl7dmFyIGU9YSYzMTthPj49NTtkP2Q9ITE6ZXw9MzI7Yz1NZShlKStjfWE8PD0yO2R8fChhfD0zMik7cmV0dXJuIGM9TWUoYXxiKStjfTt2YXIgS2c9L14oW2Etel1bYS16MC05XSopOighfFw/KShcKnxzdHJpbmd8Ym9vbGVhbnxudW1iZXJ8Rm58UGl4aWVNYXB8TGlzdHxPcGFxdWVWYWx1ZSkkL2ksTGc9e0ZuOiJmdW5jdGlvbiIsUGl4aWVNYXA6Ik9iamVjdCIsTGlzdDoiQXJyYXkifSxLPWZ1bmN0aW9uKGEsYixjKXtmb3IodmFyIGQ9MDtkPGIubGVuZ3RoO2QrKyl7dmFyIGU9S2cuZXhlYyhiW2RdKTtpZighZSl0aHJvdyBFcnJvcigiSW50ZXJuYWwgRXJyb3IgaW4gIithKTt2YXIgZj1lWzFdLGc9IiEiPT09ZVsyXSxoPWVbM10sbT1jW2RdO2lmKG51bGw9PW0pe2lmKGcpdGhyb3cgRXJyb3IoIkVycm9yIGluICIrYSsiLiBSZXF1aXJlZCBhcmd1bWVudCAiK2YrIiBub3Qgc3VwcGxpZWQuIik7fWVsc2UgaWYoIioiIT09aCl7dmFyIG49dHlwZW9mIG07bSBpbnN0YW5jZW9mIGVkP249IkZuIjptIGluc3RhbmNlb2YgcmI/bj0iTGlzdCI6bSBpbnN0YW5jZW9mIHNiP249IlBpeGllTWFwIjptIGluc3RhbmNlb2YgamQmJihuPQoiT3BhcXVlVmFsdWUiKTtpZihuIT1oKXRocm93IEVycm9yKCJFcnJvciBpbiAiK2ErIi4gQXJndW1lbnQgIitmKyIgaGFzIHR5cGUgIisoTGdbbl18fG4pKyIsIHdoaWNoIGRvZXMgbm90IG1hdGNoIHJlcXVpcmVkIHR5cGUgIisoTGdbaF18fGgpKyIuIik7fX19O2Z1bmN0aW9uIE1nKGEpe3JldHVybiIiK2F9CmZ1bmN0aW9uIE5nKGEsYil7dmFyIGM9W107cmV0dXJuIGN9O3ZhciBPZz1mdW5jdGlvbihhLGIpe3ZhciBjPW5ldyBlZChhLGZ1bmN0aW9uKCl7Zm9yKHZhciBkPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywwKSxlPTA7ZTxkLmxlbmd0aDtlKyspZFtlXT1JKHRoaXMsZFtlXSk7dHJ5e3JldHVybiBiLmFwcGx5KHRoaXMsZCl9Y2F0Y2goZyl7aWYob2QoKSl0aHJvdyBuZXcgcWQoZy5tZXNzYWdlKTt0aHJvdyBnO319KTtjLkpiKCk7cmV0dXJuIGN9LFBnPWZ1bmN0aW9uKGEsYil7dmFyIGM9bmV3IHNiLGQ7Zm9yKGQgaW4gYilpZihiLmhhc093blByb3BlcnR5KGQpKXt2YXIgZT1iW2RdO0VhKGUpP2Muc2V0KGQsT2coYSsiXyIrZCxlKSk6bGIoZSk/Yy5zZXQoZCxQZyhhKyJfIitkLAplKSk6KEdhKGUpfHxrKGUpfHwiYm9vbGVhbiI9PT10eXBlb2YgZSkmJmMuc2V0KGQsZSl9Yy5KYigpO3JldHVybiBjfTt2YXIgUWc9ZnVuY3Rpb24oYSxiKXtLKEoodGhpcyksWyJhcGlOYW1lOiFzdHJpbmciLCJtZXNzYWdlOj9zdHJpbmciXSxhcmd1bWVudHMpO3ZhciBjPXt9LGQ9bmV3IHNiO3JldHVybiBkPVBnKCJBc3NlcnRBcGlTdWJqZWN0IixjKX07dmFyIFJnPWZ1bmN0aW9uKGEsYil7SyhKKHRoaXMpLFsiYWN0dWFsOj8qIiwibWVzc2FnZTo/c3RyaW5nIl0sYXJndW1lbnRzKTtpZihhIGluc3RhbmNlb2YgbGQpdGhyb3cgRXJyb3IoIkFyZ3VtZW50IGFjdHVhbCBjYW5ub3QgaGF2ZSB0eXBlIFByb21pc2UuIEFzc2VydGlvbnMgb24gYXN5bmNocm9ub3VzIGNvZGUgYXJlbid0IHN1cHBvcnRlZC4iKTt2YXIgYz17fSxkPW5ldyBzYjtyZXR1cm4gZD1QZygiQXNzZXJ0VGhhdFN1YmplY3QiLGMpfTtmdW5jdGlvbiBTZyhhKXtyZXR1cm4gZnVuY3Rpb24oKXtmb3IodmFyIGI9W10sYz10aGlzLmgsZD0wO2Q8YXJndW1lbnRzLmxlbmd0aDsrK2QpYi5wdXNoKG5kKGFyZ3VtZW50c1tkXSxjKSk7cmV0dXJuIG1kKGEuYXBwbHkobnVsbCxiKSl9fXZhciBVZz1mdW5jdGlvbigpe2Zvcih2YXIgYT1NYXRoLGI9VGcsYz17fSxkPTA7ZDxiLmxlbmd0aDtkKyspe3ZhciBlPWJbZF07YS5oYXNPd25Qcm9wZXJ0eShlKSYmKGNbZV09U2coYVtlXS5iaW5kKGEpKSl9cmV0dXJuIGN9O3ZhciBWZz1mdW5jdGlvbihhKXt2YXIgYjtyZXR1cm4gYn07dmFyIFdnPWZ1bmN0aW9uKGEpe3ZhciBiO3JldHVybiBifTt2YXIgWGc9ZnVuY3Rpb24oYSl7dHJ5e3JldHVybiBlbmNvZGVVUkkoYSl9Y2F0Y2goYil7fX07dmFyIFlnPWZ1bmN0aW9uKGEpe3RyeXtyZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KGEpfWNhdGNoKGIpe319O2Z1bmN0aW9uIFpnKGEsYil7dmFyIGM9ITE7SyhKKHRoaXMpLFsiYm9vbGVhbkV4cHJlc3Npb246IXN0cmluZyIsImNvbnRleHQ6P1BpeGllTWFwIl0sYXJndW1lbnRzKTt2YXIgZD1KU09OLnBhcnNlKGEpO2lmKCFkKXRocm93IEVycm9yKCJJbnZhbGlkIGJvb2xlYW4gZXhwcmVzc2lvbiBzdHJpbmcgd2FzIGdpdmVuLiIpO3ZhciBlPWI/bmQoYik6e307Yz0kZyhkLGUpO3JldHVybiBjfQp2YXIgYWg9ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9MDtjPGIubGVuZ3RoO2MrKyl7aWYodm9pZCAwPT09YSlyZXR1cm47YT1hW2JbY11dfXJldHVybiBhfSxiaD1mdW5jdGlvbihhLGIpe3ZhciBjPWIucHJlSGl0O2lmKGMpe3ZhciBkPWFbMF07c3dpdGNoKGQpe2Nhc2UgImhpdERhdGEiOnJldHVybiAyPmEubGVuZ3RoP3ZvaWQgMDphaChjLmdldEhpdERhdGEoYVsxXSksYS5zbGljZSgyKSk7Y2FzZSAibWV0YWRhdGEiOnJldHVybiAyPmEubGVuZ3RoP3ZvaWQgMDphaChjLmdldE1ldGFkYXRhKGFbMV0pLGEuc2xpY2UoMikpO2Nhc2UgImV2ZW50TmFtZSI6cmV0dXJuIGMuZ2V0RXZlbnROYW1lKCk7Y2FzZSAiZGVzdGluYXRpb25JZCI6cmV0dXJuIGMuZ2V0RGVzdGluYXRpb25JZCgpO2RlZmF1bHQ6dGhyb3cgRXJyb3IoZCsiIGlzIG5vdCBhIHZhbGlkIGZpZWxkIHRoYXQgY2FuIGJlIGFjY2Vzc2VkXG4gICAgICAgICAgICAgICAgICAgICAgZnJvbSBQcmVIaXQgZGF0YS4iKTt9fX0sCmNoPWZ1bmN0aW9uKGEsYil7aWYoYSl7aWYodm9pZCAwIT09YS5jb250ZXh0VmFsdWUpe3ZhciBjO2E6e3ZhciBkPWEuY29udGV4dFZhbHVlLGU9ZC5rZXlQYXJ0cztpZihlJiYwIT09ZS5sZW5ndGgpe3ZhciBmPWQubmFtZXNwYWNlVHlwZTtzd2l0Y2goZil7Y2FzZSAxOmM9YmgoZSxiKTticmVhayBhO2Nhc2UgMjp2YXIgZz1iLm1hY3JvO2M9Zz9nW2VbMF1dOnZvaWQgMDticmVhayBhO2RlZmF1bHQ6dGhyb3cgRXJyb3IoIlVua25vd24gTmFtZXNwYWNlIFR5cGUgdXNlZDogIitmKTt9fWM9dm9pZCAwfXJldHVybiBjfWlmKHZvaWQgMCE9PWEuYm9vbGVhbkV4cHJlc3Npb25WYWx1ZSlyZXR1cm4gJGcoYS5ib29sZWFuRXhwcmVzc2lvblZhbHVlLGIpO2lmKHZvaWQgMCE9PWEuYm9vbGVhblZhbHVlKXJldHVybiEhYS5ib29sZWFuVmFsdWU7aWYodm9pZCAwIT09YS5zdHJpbmdWYWx1ZSlyZXR1cm4gU3RyaW5nKGEuc3RyaW5nVmFsdWUpO2lmKHZvaWQgMCE9PWEuaW50ZWdlclZhbHVlKXJldHVybiBOdW1iZXIoYS5pbnRlZ2VyVmFsdWUpOwppZih2b2lkIDAhPT1hLmRvdWJsZVZhbHVlKXJldHVybiBOdW1iZXIoYS5kb3VibGVWYWx1ZSk7dGhyb3cgRXJyb3IoIlVua25vd24gZmllbGQgdXNlZCBmb3IgdmFyaWFibGUgb2YgdHlwZSBFeHByZXNzaW9uVmFsdWU6IithKTt9fSwkZz1mdW5jdGlvbihhLGIpe3ZhciBjPWEuYXJncztpZighSGEoYyl8fDA9PT1jLmxlbmd0aCl0aHJvdyBFcnJvcignSW52YWxpZCBib29sZWFuIGV4cHJlc3Npb24gZm9ybWF0LiBFeHBlY3RlZCAiYXJncyI6JytjKyIgcHJvcGVydHkgdG9cbiAgICAgICAgIGJlIG5vbi1lbXB0eSBhcnJheS4iKTt2YXIgZD1mdW5jdGlvbihnKXtyZXR1cm4gY2goZyxiKX07c3dpdGNoKGEudHlwZSl7Y2FzZSAxOmZvcih2YXIgZT0wO2U8Yy5sZW5ndGg7ZSsrKWlmKGQoY1tlXSkpcmV0dXJuITA7cmV0dXJuITE7Y2FzZSAyOmZvcih2YXIgZj0wO2Y8Yy5sZW5ndGg7ZisrKWlmKCFkKGNbZl0pKXJldHVybiExO3JldHVybiAwPGMubGVuZ3RoO2Nhc2UgMzpyZXR1cm4hZChjWzBdKTsKY2FzZSA0OnJldHVybiB1ZyhkKGNbMF0pLGQoY1sxXSksITEpO2Nhc2UgNTpyZXR1cm4gd2coZChjWzBdKSxkKGNbMV0pKTtjYXNlIDY6cmV0dXJuIEJnKGQoY1swXSksZChjWzFdKSk7Y2FzZSA3OnJldHVybiBzZyhkKGNbMF0pLGQoY1sxXSkpO2Nhc2UgODpyZXR1cm4gdmcoZChjWzBdKSxkKGNbMV0pKTtjYXNlIDk6cmV0dXJuIEFnKGQoY1swXSksZChjWzFdKSk7Y2FzZSAxMDpyZXR1cm4geWcoZChjWzBdKSxkKGNbMV0pKTtjYXNlIDExOnJldHVybiB6ZyhkKGNbMF0pLGQoY1sxXSkpO2Nhc2UgMTI6cmV0dXJuIHhnKGQoY1swXSksZChjWzFdKSk7ZGVmYXVsdDp0aHJvdyBFcnJvcignSW52YWxpZCBib29sZWFuIGV4cHJlc3Npb24gZm9ybWF0LiBFeHBlY3RlZCAidHlwZSIgcHJvcGVydHkgdG9iZSBhIHBvc2l0aXZlIGludGVnZXIgd2hpY2ggaXMgbGVzcyB0aGFuIDEzLicpO319OwpaZy5EPSJpbnRlcm5hbC5ldmFsdWF0ZUJvb2xlYW5FeHByZXNzaW9uIjt2YXIgZGg9ZnVuY3Rpb24oYSl7SyhKKHRoaXMpLFsibWVzc2FnZTo/c3RyaW5nIl0sYXJndW1lbnRzKTt9O3ZhciBlaD1mdW5jdGlvbihhLGIpe0soSih0aGlzKSxbIm1pbjohbnVtYmVyIiwibWF4OiFudW1iZXIiXSxhcmd1bWVudHMpO3JldHVybiBKYShhLGIpfTt2YXIgZmg9ZnVuY3Rpb24oKXtyZXR1cm4obmV3IERhdGUpLmdldFRpbWUoKX07dmFyIGdoPWZ1bmN0aW9uKGEpe2lmKG51bGw9PT1hKXJldHVybiJudWxsIjtpZihhIGluc3RhbmNlb2YgcmIpcmV0dXJuImFycmF5IjtpZihhIGluc3RhbmNlb2YgZWQpcmV0dXJuImZ1bmN0aW9uIjtpZihhIGluc3RhbmNlb2YgamQpe2E9YS5oO2lmKHZvaWQgMD09PWEuY29uc3RydWN0b3J8fHZvaWQgMD09PWEuY29uc3RydWN0b3IubmFtZSl7dmFyIGI9U3RyaW5nKGEpO3JldHVybiBiLnN1YnN0cmluZyg4LGIubGVuZ3RoLTEpfXJldHVybiBTdHJpbmcoYS5jb25zdHJ1Y3Rvci5uYW1lKX1yZXR1cm4gdHlwZW9mIGF9O3ZhciBoaD1mdW5jdGlvbihhKXtmdW5jdGlvbiBiKGMpe3JldHVybiBmdW5jdGlvbihkKXt0cnl7cmV0dXJuIGMoZCl9Y2F0Y2goZSl7KGJnfHxkZykmJmEuY2FsbCh0aGlzLGUubWVzc2FnZSl9fX1yZXR1cm57cGFyc2U6YihmdW5jdGlvbihjKXtyZXR1cm4gbWQoSlNPTi5wYXJzZShjKSl9KSxzdHJpbmdpZnk6YihmdW5jdGlvbihjKXtyZXR1cm4gSlNPTi5zdHJpbmdpZnkobmQoYykpfSl9fTt2YXIgaWg9ZnVuY3Rpb24oYSl7cmV0dXJuIE5hKG5kKGEsdGhpcy5oKSl9O3ZhciBqaD1mdW5jdGlvbihhKXtyZXR1cm4gTnVtYmVyKG5kKGEsdGhpcy5oKSl9O3ZhciBraD1mdW5jdGlvbihhKXtyZXR1cm4gbnVsbD09PWE/Im51bGwiOnZvaWQgMD09PWE/InVuZGVmaW5lZCI6YS50b1N0cmluZygpfTt2YXIgcGg9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPW51bGwsZT0hMTtyZXR1cm4gZT9kOm51bGx9O3ZhciBUZz0iZmxvb3IgY2VpbCByb3VuZCBtYXggbWluIGFicyBwb3cgc3FydCIuc3BsaXQoIiAiKTt2YXIgcWg9ZnVuY3Rpb24oKXt2YXIgYT17fTtyZXR1cm57WGw6ZnVuY3Rpb24oYil7cmV0dXJuIGEuaGFzT3duUHJvcGVydHkoYik/YVtiXTp2b2lkIDB9LHVuOmZ1bmN0aW9uKGIsYyl7YVtiXT1jfSxyZXNldDpmdW5jdGlvbigpe2E9e319fX0scmg9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgYz1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMCk7Yy51bnNoaWZ0KGIpO3JldHVybiBlZC5wcm90b3R5cGUuaW52b2tlLmFwcGx5KGEsYyl9fSxzaD1mdW5jdGlvbihhLGIpe0soSih0aGlzKSxbImFwaU5hbWU6IXN0cmluZyIsIm1vY2s6PyoiXSxhcmd1bWVudHMpO307dmFyIHRoPXt9Owp0aC5rZXlzPWZ1bmN0aW9uKGEpe3JldHVybiBuZXcgcmJ9Owp0aC52YWx1ZXM9ZnVuY3Rpb24oYSl7cmV0dXJuIG5ldyByYn07CnRoLmVudHJpZXM9ZnVuY3Rpb24oYSl7cmV0dXJuIG5ldyByYn07CnRoLmZyZWV6ZT1mdW5jdGlvbihhKXtyZXR1cm4gYX07dGguZGVsZXRlPWZ1bmN0aW9uKGEsYil7cmV0dXJuITF9O3ZhciBMPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1hLmguaDtpZighZCl0aHJvdyBFcnJvcigiTWlzc2luZyBwcm9ncmFtIHN0YXRlLiIpO2lmKGQua24pe3RyeXtkLkhqLmFwcGx5KG51bGwsQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDEpKX1jYXRjaChlKXt0aHJvdyBBYigiVEFHR0lORyIsMjEpLGU7fXJldHVybn1kLkhqLmFwcGx5KG51bGwsQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDEpKX07dmFyIHZoPWZ1bmN0aW9uKCl7dGhpcy5oPXt9O3RoaXMucz17fTt9O3ZoLnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzLmguaGFzT3duUHJvcGVydHkoYSk/dGhpcy5oW2FdOnZvaWQgMDtyZXR1cm4gY307CnZoLnByb3RvdHlwZS5hZGQ9ZnVuY3Rpb24oYSxiLGMpe2lmKHRoaXMuaC5oYXNPd25Qcm9wZXJ0eShhKSl0aHJvdyJBdHRlbXB0aW5nIHRvIGFkZCBhIGZ1bmN0aW9uIHdoaWNoIGFscmVhZHkgZXhpc3RzOiAiK2ErIi4iO2lmKHRoaXMucy5oYXNPd25Qcm9wZXJ0eShhKSl0aHJvdyJBdHRlbXB0aW5nIHRvIGFkZCBhbiBBUEkgd2l0aCBhbiBleGlzdGluZyBwcml2YXRlIEFQSSBuYW1lOiAiK2ErIi4iO3RoaXMuaFthXT1jP3ZvaWQgMDpFYShiKT9PZyhhLGIpOlBnKGEsYil9O2Z1bmN0aW9uIHdoKGEsYil7dmFyIGM9dm9pZCAwO3JldHVybiBjfTtmdW5jdGlvbiB4aCgpe3ZhciBhPXt9OwpyZXR1cm4gYX07dmFyIHpoPWZ1bmN0aW9uKGEpe3JldHVybiB5aD9DLnF1ZXJ5U2VsZWN0b3JBbGwoYSk6bnVsbH0sQWg9ZnVuY3Rpb24oYSxiKXtpZigheWgpcmV0dXJuIG51bGw7aWYoRWxlbWVudC5wcm90b3R5cGUuY2xvc2VzdCl0cnl7cmV0dXJuIGEuY2xvc2VzdChiKX1jYXRjaChlKXtyZXR1cm4gbnVsbH12YXIgYz1FbGVtZW50LnByb3RvdHlwZS5tYXRjaGVzfHxFbGVtZW50LnByb3RvdHlwZS53ZWJraXRNYXRjaGVzU2VsZWN0b3J8fEVsZW1lbnQucHJvdG90eXBlLm1vek1hdGNoZXNTZWxlY3Rvcnx8RWxlbWVudC5wcm90b3R5cGUubXNNYXRjaGVzU2VsZWN0b3J8fEVsZW1lbnQucHJvdG90eXBlLm9NYXRjaGVzU2VsZWN0b3IsZD1hO2lmKCFDLmRvY3VtZW50RWxlbWVudC5jb250YWlucyhkKSlyZXR1cm4gbnVsbDtkb3t0cnl7aWYoYy5jYWxsKGQsYikpcmV0dXJuIGR9Y2F0Y2goZSl7YnJlYWt9ZD1kLnBhcmVudEVsZW1lbnR8fGQucGFyZW50Tm9kZX13aGlsZShudWxsIT09ZCYmMT09PWQubm9kZVR5cGUpOwpyZXR1cm4gbnVsbH0sQmg9ITE7aWYoQy5xdWVyeVNlbGVjdG9yQWxsKXRyeXt2YXIgQ2g9Qy5xdWVyeVNlbGVjdG9yQWxsKCI6cm9vdCIpO0NoJiYxPT1DaC5sZW5ndGgmJkNoWzBdPT1DLmRvY3VtZW50RWxlbWVudCYmKEJoPSEwKX1jYXRjaChhKXt9dmFyIHloPUJoO3ZhciBNPWZ1bmN0aW9uKGEpe0FiKCJHVE0iLGEpfTsKdmFyIERoPWZ1bmN0aW9uKGEpe3JldHVybiBudWxsPT1hPyIiOmsoYSk/UmEoU3RyaW5nKGEpKToiZTAifSxGaD1mdW5jdGlvbihhKXtyZXR1cm4gYS5yZXBsYWNlKEVoLCIiKX0sSGg9ZnVuY3Rpb24oYSl7cmV0dXJuIEdoKGEucmVwbGFjZSgvXHMvZywiIikpfSxHaD1mdW5jdGlvbihhKXtyZXR1cm4gUmEoYS5yZXBsYWNlKEloLCIiKS50b0xvd2VyQ2FzZSgpKX0sS2g9ZnVuY3Rpb24oYSl7YT1hLnJlcGxhY2UoL1tccy0oKS8uXS9nLCIiKTsiKyIhPT1hLmNoYXJBdCgwKSYmKGE9IisiK2EpO3JldHVybiBKaC50ZXN0KGEpP2E6ImUwIn0sTWg9ZnVuY3Rpb24oYSl7dmFyIGI9YS50b0xvd2VyQ2FzZSgpLnNwbGl0KCJAIik7aWYoMj09Yi5sZW5ndGgpe3ZhciBjPWJbMF07L14oZ21haWx8Z29vZ2xlbWFpbClcLi8udGVzdChiWzFdKSYmKGM9Yy5yZXBsYWNlKC9cLi9nLCIiKSk7Yz1jKyJAIitiWzFdO2lmKExoLnRlc3QoYykpcmV0dXJuIGN9cmV0dXJuImUwIn0sUGg9ZnVuY3Rpb24oYSl7aWYoIiI9PT0KYXx8ImUwIj09PWEpcmV0dXJuIFByb21pc2UucmVzb2x2ZShhKTtpZih6LmNyeXB0byYmei5jcnlwdG8uc3VidGxlKXtpZihOaC50ZXN0KGEpKXJldHVybiBQcm9taXNlLnJlc29sdmUoYSk7dHJ5e3ZhciBiPU9oKGEpO3JldHVybiB6LmNyeXB0by5zdWJ0bGUuZGlnZXN0KCJTSEEtMjU2IixiKS50aGVuKGZ1bmN0aW9uKGMpe3ZhciBkPUFycmF5LmZyb20obmV3IFVpbnQ4QXJyYXkoYykpLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShlKX0pLmpvaW4oIiIpO3JldHVybiB6LmJ0b2EoZCkucmVwbGFjZSgvXCsvZywiLSIpLnJlcGxhY2UoL1wvL2csIl8iKS5yZXBsYWNlKC89KyQvLCIiKX0pLmNhdGNoKGZ1bmN0aW9uKCl7cmV0dXJuImUyIn0pfWNhdGNoKGMpe3JldHVybiBQcm9taXNlLnJlc29sdmUoImUyIil9fWVsc2UgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgiZTEiKX0sT2g9ZnVuY3Rpb24oYSl7dmFyIGI7aWYoei5UZXh0RW5jb2RlciliPShuZXcgVGV4dEVuY29kZXIoInV0Zi04IikpLmVuY29kZShhKTsKZWxzZXtmb3IodmFyIGM9W10sZD0wO2Q8YS5sZW5ndGg7ZCsrKXt2YXIgZT1hLmNoYXJDb2RlQXQoZCk7MTI4PmU/Yy5wdXNoKGUpOjIwNDg+ZT9jLnB1c2goMTkyfGU+PjYsMTI4fGUmNjMpOjU1Mjk2PmV8fDU3MzQ0PD1lP2MucHVzaCgyMjR8ZT4+MTIsMTI4fGU+PjYmNjMsMTI4fGUmNjMpOihlPTY1NTM2KygoZSYxMDIzKTw8MTB8YS5jaGFyQ29kZUF0KCsrZCkmMTAyMyksYy5wdXNoKDI0MHxlPj4xOCwxMjh8ZT4+MTImNjMsMTI4fGU+PjYmNjMsMTI4fGUmNjMpKX1iPW5ldyBVaW50OEFycmF5KGMpfXJldHVybiBifSxJaD0vWzAtOWB+IUAjJCVeJiooKV9cLSs9Ojs8PiwuP3wvXFxbXF1dL2csTGg9L15cUytAXFMrXC5cUyskLyxKaD0vXlwrXGR7MTAsMTV9JC8sRWg9L1sufl0vZyxRaD0vXlswLTlBLVphLXpfLV17NDN9JC8sTmg9L15bMC05QS1GYS1mXXs2NH0kLyxSaD17fSxTaD0oUmguZW1haWw9ImVtIixSaC5waG9uZV9udW1iZXI9InBuIixSaC5maXJzdF9uYW1lPSJmbiIsClJoLmxhc3RfbmFtZT0ibG4iLFJoLnN0cmVldD0ic2EiLFJoLmNpdHk9ImN0IixSaC5yZWdpb249InJnIixSaC5jb3VudHJ5PSJjbyIsUmgucG9zdGFsX2NvZGU9InBjIixSaC5lcnJvcl9jb2RlPSJlYyIsUmgpLFRoPXt9LFVoPShUaC5lbWFpbD0ic2hhMjU2X2VtYWlsX2FkZHJlc3MiLFRoLnBob25lX251bWJlcj0ic2hhMjU2X3Bob25lX251bWJlciIsVGguZmlyc3RfbmFtZT0ic2hhMjU2X2ZpcnN0X25hbWUiLFRoLmxhc3RfbmFtZT0ic2hhMjU2X2xhc3RfbmFtZSIsVGguc3RyZWV0PSJzaGEyNTZfc3RyZWV0IixUaCksV2g9ZnVuY3Rpb24oYSxiKXthLnNvbWUoZnVuY3Rpb24oYyl7Yy52YWx1ZSYmVmguaW5kZXhPZihjLm5hbWUpfSk/YihhKTp6LlByb21pc2U/UHJvbWlzZS5hbGwoYS5tYXAoZnVuY3Rpb24oYyl7cmV0dXJuIGMudmFsdWUmJi0xIT09VmguaW5kZXhPZihjLm5hbWUpP1BoKGMudmFsdWUpLnRoZW4oZnVuY3Rpb24oZCl7Yy52YWx1ZT1kfSk6UHJvbWlzZS5yZXNvbHZlKCl9KSkudGhlbihmdW5jdGlvbigpe2IoYSl9KS5jYXRjaChmdW5jdGlvbigpe2IoW10pfSk6CmIoW10pfSxZaD1mdW5jdGlvbihhLGIpe3ZhciBjPVhoKGEpO1doKGMsYil9LFhoPWZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIocix0LHUsdil7dmFyIHc9RGgocik7IiIhPT13JiYoTmgudGVzdCh3KT9oLnB1c2goe25hbWU6dCx2YWx1ZTp3LGluZGV4OnZ9KTpoLnB1c2goe25hbWU6dCx2YWx1ZTp1KHcpLGluZGV4OnZ9KSl9ZnVuY3Rpb24gYyhyLHQpe3ZhciB1PXI7aWYoayh1KXx8SGEodSkpe3U9SGEocik/cjpbcl07Zm9yKHZhciB2PTA7djx1Lmxlbmd0aDsrK3Ype3ZhciB3PURoKHVbdl0pLHg9TmgudGVzdCh3KTt0JiYheCYmTSg4OSk7IXQmJngmJk0oODgpfX19ZnVuY3Rpb24gZChyLHQpe3ZhciB1PXJbdF07Yyh1LCExKTt2YXIgdj1VaFt0XTtyLmhhc093blByb3BlcnR5KHYpJiYoci5oYXNPd25Qcm9wZXJ0eSh0KSYmTSg5MCksdT1yW3ZdLGModSwhMCkpO3JldHVybiB1fWZ1bmN0aW9uIGUocix0LHUpe3ZhciB2PWQocix0KTt2PUhhKHYpP3Y6W3ZdO2Zvcih2YXIgdz0wO3c8di5sZW5ndGg7Kyt3KWIodlt3XSwKdCx1KX1mdW5jdGlvbiBmKHIsdCx1LHYpe3ZhciB3PWQocix0KTtiKHcsdCx1LHYpfWZ1bmN0aW9uIGcocil7cmV0dXJuIGZ1bmN0aW9uKHQpe00oNjQpO3JldHVybiByKHQpfX12YXIgaD1bXTtpZigiaHR0cHM6IiE9PXoubG9jYXRpb24ucHJvdG9jb2wpcmV0dXJuIGgucHVzaCh7bmFtZToiZXJyb3JfY29kZSIsdmFsdWU6ImUzIixpbmRleDp2b2lkIDB9KSxoO2UoYSwiZW1haWwiLE1oKTtlKGEsInBob25lX251bWJlciIsS2gpO2UoYSwiZmlyc3RfbmFtZSIsZyhIaCkpO2UoYSwibGFzdF9uYW1lIixnKEhoKSk7dmFyIG09YS5ob21lX2FkZHJlc3N8fHt9O2UobSwic3RyZWV0IixnKEdoKSk7ZShtLCJjaXR5IixnKEdoKSk7ZShtLCJwb3N0YWxfY29kZSIsZyhGaCkpO2UobSwicmVnaW9uIixnKEdoKSk7ZShtLCJjb3VudHJ5IixnKEZoKSk7dmFyIG49YS5hZGRyZXNzfHx7fTtuPUhhKG4pP246W25dO2Zvcih2YXIgcD0wO3A8bi5sZW5ndGg7cCsrKXt2YXIgcT1uW3BdO2YocSwiZmlyc3RfbmFtZSIsCkhoLHApO2YocSwibGFzdF9uYW1lIixIaCxwKTtmKHEsInN0cmVldCIsR2gscCk7ZihxLCJjaXR5IixHaCxwKTtmKHEsInBvc3RhbF9jb2RlIixGaCxwKTtmKHEsInJlZ2lvbiIsR2gscCk7ZihxLCJjb3VudHJ5IixGaCxwKX1yZXR1cm4gaH0sJGg9ZnVuY3Rpb24oYSxiKXtZaChhLGZ1bmN0aW9uKGMpe3ZhciBkPVpoKGMpO2IoZC5YZixkLlRoKX0pfSxaaD1mdW5jdGlvbihhKXtmb3IodmFyIGI9WyJ0di4xIl0sYz0wLGQ9MDtkPGEubGVuZ3RoOysrZCl7dmFyIGU9YVtkXS5uYW1lLGY9YVtkXS52YWx1ZSxnPWFbZF0uaW5kZXgsaD1TaFtlXTtoJiZmJiYoLTE9PT1WaC5pbmRleE9mKGUpfHwvXmVcZCskLy50ZXN0KGYpfHxRaC50ZXN0KGYpfHxOaC50ZXN0KGYpKSYmKHZvaWQgMCE9PWcmJihoKz1nKSxiLnB1c2goaCsiLiIrZiksYysrKX0xPT09YS5sZW5ndGgmJiJlcnJvcl9jb2RlIj09PWFbMF0ubmFtZSYmKGM9MCk7cmV0dXJue1hmOmVuY29kZVVSSUNvbXBvbmVudChiLmpvaW4oIn4iKSksClRoOmN9fSxhaT1mdW5jdGlvbihhKXtpZih6LlByb21pc2UpdHJ5e3JldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihiKXskaChhLGZ1bmN0aW9uKGMsZCl7Yih7VWo6YyxUaDpkfSl9KX0pfWNhdGNoKGIpe319LFZoPU9iamVjdC5mcmVlemUoWyJlbWFpbCIsInBob25lX251bWJlciIsImZpcnN0X25hbWUiLCJsYXN0X25hbWUiLCJzdHJlZXQiXSk7dmFyIE49e2c6e3hhOiJhZF9wZXJzb25hbGl6YXRpb24iLEo6ImFkX3N0b3JhZ2UiLE46ImFkX3VzZXJfZGF0YSIsUjoiYW5hbHl0aWNzX3N0b3JhZ2UiLEFiOiJyZWdpb24iLGtjOiJjb25zZW50X3VwZGF0ZWQiLGpmOiJ3YWl0X2Zvcl91cGRhdGUiLHdpOiJhZHMiLG1nOiJhbGwiLHlrOiJtYXBzIix6azoicGxheXN0b3JlIixBazoic2VhcmNoIixCazoic2hvcHBpbmciLENrOiJ5b3V0dWJlIix4aToiYXBwX3JlbW92ZSIseWk6ImFwcF9zdG9yZV9yZWZ1bmQiLHppOiJhcHBfc3RvcmVfc3Vic2NyaXB0aW9uX2NhbmNlbCIsQWk6ImFwcF9zdG9yZV9zdWJzY3JpcHRpb25fY29udmVydCIsQmk6ImFwcF9zdG9yZV9zdWJzY3JpcHRpb25fcmVuZXciLG9nOiJhZGRfcGF5bWVudF9pbmZvIixwZzoiYWRkX3NoaXBwaW5nX2luZm8iLG1jOiJhZGRfdG9fY2FydCIsbmM6InJlbW92ZV9mcm9tX2NhcnQiLHFnOiJ2aWV3X2NhcnQiLE9iOiJiZWdpbl9jaGVja291dCIsb2M6InNlbGVjdF9pdGVtIiwKaWI6InZpZXdfaXRlbV9saXN0IixCYjoic2VsZWN0X3Byb21vdGlvbiIsamI6InZpZXdfcHJvbW90aW9uIix5YToicHVyY2hhc2UiLHFjOiJyZWZ1bmQiLExhOiJ2aWV3X2l0ZW0iLHJnOiJhZGRfdG9fd2lzaGxpc3QiLEVrOiJleGNlcHRpb24iLENpOiJmaXJzdF9vcGVuIixEaToiZmlyc3RfdmlzaXQiLGRhOiJndGFnLmNvbmZpZyIsU2E6Imd0YWcuZ2V0IixFaToiaW5fYXBwX3B1cmNoYXNlIixzYzoicGFnZV92aWV3IixGazoic2NyZWVuX3ZpZXciLEZpOiJzZXNzaW9uX3N0YXJ0IixHazoidGltaW5nX2NvbXBsZXRlIixIazoidHJhY2tfc29jaWFsIixDZDoidXNlcl9lbmdhZ2VtZW50IixrYjoiZ2NsZ2IiLFRhOiJnY2xpZCIsYWE6ImFkc19kYXRhX3JlZGFjdGlvbiIsR2k6ImdhZF9zb3VyY2UiLERkOiJnY2xpZF91cmwiLEhpOiJnY2xzcmMiLGtmOiJ3YnJhaWQiLGthOiJhbGxvd19hZF9wZXJzb25hbGl6YXRpb25fc2lnbmFscyIsbGY6ImFsbG93X2N1c3RvbV9zY3JpcHRzIixuZjoiYWxsb3dfZGlzcGxheV9mZWF0dXJlcyIsCkVkOiJhbGxvd19lbmhhbmNlZF9jb252ZXJzaW9ucyIsbGI6ImFsbG93X2dvb2dsZV9zaWduYWxzIixGYToiYWxsb3dfaW50ZXJlc3RfZ3JvdXBzIixJazoiYXBwX2lkIixKazoiYXBwX2luc3RhbGxlcl9pZCIsS2s6ImFwcF9uYW1lIixMazoiYXBwX3ZlcnNpb24iLENiOiJhdWlkIixJaToiYXV0b19kZXRlY3Rpb25fZW5hYmxlZCIsUGI6ImF3X3JlbWFya2V0aW5nIixwZjoiYXdfcmVtYXJrZXRpbmdfb25seSIsRmQ6ImRpc2NvdW50IixHZDoiYXdfZmVlZF9jb3VudHJ5IixIZDoiYXdfZmVlZF9sYW5ndWFnZSIsWjoiaXRlbXMiLElkOiJhd19tZXJjaGFudF9pZCIsc2c6ImF3X2Jhc2tldF90eXBlIixQYzoiY2FtcGFpZ25fY29udGVudCIsUWM6ImNhbXBhaWduX2lkIixSYzoiY2FtcGFpZ25fbWVkaXVtIixTYzoiY2FtcGFpZ25fbmFtZSIsVGM6ImNhbXBhaWduIixVYzoiY2FtcGFpZ25fc291cmNlIixWYzoiY2FtcGFpZ25fdGVybSIsbmI6ImNsaWVudF9pZCIsSmk6InJuZCIsS2k6ImNvbnRlbnRfZ3JvdXAiLApMaToiY29udGVudF90eXBlIixYYToiY29udmVyc2lvbl9jb29raWVfcHJlZml4IixXYzoiY29udmVyc2lvbl9pZCIsemE6ImNvbnZlcnNpb25fbGlua2VyIixNazoiY29udmVyc2lvbl9saW5rZXJfZGlzYWJsZWQiLFFiOiJjb252ZXJzaW9uX2FwaSIscWY6ImNvb2tpZV9kZXByZWNhdGlvbiIsVWE6ImNvb2tpZV9kb21haW4iLFZhOiJjb29raWVfZXhwaXJlcyIsWWE6ImNvb2tpZV9mbGFncyIsdWM6ImNvb2tpZV9uYW1lIixSYjoiY29va2llX3BhdGgiLE9hOiJjb29raWVfcHJlZml4Iix2YzoiY29va2llX3VwZGF0ZSIsd2M6ImNvdW50cnkiLEFhOiJjdXJyZW5jeSIsSmQ6ImN1c3RvbWVyX2xpZmV0aW1lX3ZhbHVlIixYYzoiY3VzdG9tX21hcCIsdWc6ImdjbGRjIixLZDoiZGNsaWQiLE1pOiJkZWJ1Z19tb2RlIixmYToiZGV2ZWxvcGVyX2lkIixOaToiZGlzYWJsZV9tZXJjaGFudF9yZXBvcnRlZF9wdXJjaGFzZXMiLFljOiJkY19jdXN0b21fcGFyYW1zIixPaToiZGNfbmF0dXJhbF9zZWFyY2giLAp2ZzoiZHluYW1pY19ldmVudF9zZXR0aW5ncyIsd2c6ImFmZmlsaWF0aW9uIixMZDoiY2hlY2tvdXRfb3B0aW9uIixyZjoiY2hlY2tvdXRfc3RlcCIseGc6ImNvdXBvbiIsWmM6Iml0ZW1fbGlzdF9uYW1lIix0ZjoibGlzdF9uYW1lIixQaToicHJvbW90aW9ucyIsYWQ6InNoaXBwaW5nIix1ZjoidGF4IixNZDoiZW5nYWdlbWVudF90aW1lX21zZWMiLE5kOiJlbmhhbmNlZF9jbGllbnRfaWQiLE9kOiJlbmhhbmNlZF9jb252ZXJzaW9ucyIseWc6ImVuaGFuY2VkX2NvbnZlcnNpb25zX2F1dG9tYXRpY19zZXR0aW5ncyIsUGQ6ImVzdGltYXRlZF9kZWxpdmVyeV9kYXRlIix2ZjoiZXVpZF9sb2dnZWRfaW5fc3RhdGUiLGJkOiJldmVudF9jYWxsYmFjayIsTms6ImV2ZW50X2NhdGVnb3J5IixwYjoiZXZlbnRfZGV2ZWxvcGVyX2lkX3N0cmluZyIsT2s6ImV2ZW50X2xhYmVsIixRZDoiZXZlbnQiLFJkOiJldmVudF9zZXR0aW5ncyIsU2Q6ImV2ZW50X3RpbWVvdXQiLFBrOiJkZXNjcmlwdGlvbiIsClFrOiJmYXRhbCIsUWk6ImV4cGVyaW1lbnRzIix3ZjoiZmlyZWJhc2VfaWQiLHhjOiJmaXJzdF9wYXJ0eV9jb2xsZWN0aW9uIixUZDoiX3hfMjAiLHFiOiJfeF8xOSIsUmk6ImZsZWRnZV9kcm9wX3JlYXNvbiIsemc6ImZsZWRnZSIsQWc6ImZsaWdodF9lcnJvcl9jb2RlIixCZzoiZmxpZ2h0X2Vycm9yX21lc3NhZ2UiLFNpOiJmbF9hY3Rpdml0eV9jYXRlZ29yeSIsVGk6ImZsX2FjdGl2aXR5X2dyb3VwIixDZzoiZmxfYWR2ZXJ0aXNlcl9pZCIsVWk6ImZsX2FyX2RlZHVwZSIsRGc6Im1hdGNoX2lkIixWaToiZmxfcmFuZG9tX251bWJlciIsV2k6InRyYW4iLFhpOiJ1IixVZDoiZ2FjX2djbGlkIix5YzoiZ2FjX3dicmFpZCIsRWc6ImdhY193YnJhaWRfbXVsdGlwbGVfY29udmVyc2lvbnMiLEZnOiJnYV9yZXN0cmljdF9kb21haW4iLEdnOiJnYV90ZW1wX2NsaWVudF9pZCIsemM6ImdkcHJfYXBwbGllcyIsSGc6Imdlb19ncmFudWxhcml0eSIsRGI6InZhbHVlX2NhbGxiYWNrIixyYjoidmFsdWVfa2V5IiwKUms6Imdvb2dsZV9vbm8iLFNiOiJnb29nbGVfc2lnbmFscyIsSWc6Imdvb2dsZV90bGQiLFZkOiJncm91cHMiLEpnOiJnc2FfZXhwZXJpbWVudF9pZCIsV2Q6ImlmcmFtZV9zdGF0ZSIsZGQ6Imlnbm9yZV9yZWZlcnJlciIseGY6ImludGVybmFsX3RyYWZmaWNfcmVzdWx0cyIsVGI6ImlzX2xlZ2FjeV9jb252ZXJ0ZWQiLEViOiJpc19sZWdhY3lfbG9hZGVkIixYZDoiaXNfcGFzc3Rocm91Z2giLGVkOiJfbHBzIixQYToibGFuZ3VhZ2UiLFlkOiJsZWdhY3lfZGV2ZWxvcGVyX2lkX3N0cmluZyIsQmE6ImxpbmtlciIsVWI6ImFjY2VwdF9pbmNvbWluZyIsdGI6ImRlY29yYXRlX2Zvcm1zIixYOiJkb21haW5zIixGYjoidXJsX3Bvc2l0aW9uIixLZzoibWV0aG9kIixTazoibmFtZSIsZmQ6Im5ld19jdXN0b21lciIsTGc6Im5vbl9pbnRlcmFjdGlvbiIsWWk6Im9wdGltaXplX2lkIixaaToicGFnZV9ob3N0bmFtZSIsZ2Q6InBhZ2VfcGF0aCIsR2E6InBhZ2VfcmVmZXJyZXIiLEdiOiJwYWdlX3RpdGxlIiwKTWc6InBhc3NlbmdlcnMiLE5nOiJwaG9uZV9jb252ZXJzaW9uX2NhbGxiYWNrIixhajoicGhvbmVfY29udmVyc2lvbl9jb3VudHJ5X2NvZGUiLE9nOiJwaG9uZV9jb252ZXJzaW9uX2Nzc19jbGFzcyIsYmo6InBob25lX2NvbnZlcnNpb25faWRzIixQZzoicGhvbmVfY29udmVyc2lvbl9udW1iZXIiLFFnOiJwaG9uZV9jb252ZXJzaW9uX29wdGlvbnMiLFJnOiJfcHJvdGVjdGVkX2F1ZGllbmNlX2VuYWJsZWQiLGhkOiJxdWFudGl0eSIsWmQ6InJlZGFjdF9kZXZpY2VfaW5mbyIseWY6InJlZmVycmFsX2V4Y2x1c2lvbl9kZWZpbml0aW9uIixWYjoicmVzdHJpY3RlZF9kYXRhX3Byb2Nlc3NpbmciLGNqOiJyZXRva2VuIixUazoic2FtcGxlX3JhdGUiLHpmOiJzY3JlZW5fbmFtZSIsSGI6InNjcmVlbl9yZXNvbHV0aW9uIixkajoic2VhcmNoX3Rlcm0iLFFhOiJzZW5kX3BhZ2VfdmlldyIsV2I6InNlbmRfdG8iLGpkOiJzZXJ2ZXJfY29udGFpbmVyX3VybCIsa2Q6InNlc3Npb25fZHVyYXRpb24iLAphZToic2Vzc2lvbl9lbmdhZ2VkIixBZjoic2Vzc2lvbl9lbmdhZ2VkX3RpbWUiLHViOiJzZXNzaW9uX2lkIixiZToic2Vzc2lvbl9udW1iZXIiLGxkOiJkZWxpdmVyeV9wb3N0YWxfY29kZSIsVWs6InRlbXBvcmFyeV9jbGllbnRfaWQiLEJmOiJ0b3Btb3N0X3VybCIsZWo6InRyYWNraW5nX2lkIixDZjoidHJhZmZpY190eXBlIixDYToidHJhbnNhY3Rpb25faWQiLEliOiJ0cmFuc3BvcnRfdXJsIixTZzoidHJpcF90eXBlIixYYjoidXBkYXRlIixaYToidXJsX3Bhc3N0aHJvdWdoIixjZToiX3VzZXJfYWdlbnRfYXJjaGl0ZWN0dXJlIixkZToiX3VzZXJfYWdlbnRfYml0bmVzcyIsZWU6Il91c2VyX2FnZW50X2Z1bGxfdmVyc2lvbl9saXN0IixmZToiX3VzZXJfYWdlbnRfbW9iaWxlIixoZToiX3VzZXJfYWdlbnRfbW9kZWwiLGllOiJfdXNlcl9hZ2VudF9wbGF0Zm9ybSIsamU6Il91c2VyX2FnZW50X3BsYXRmb3JtX3ZlcnNpb24iLGtlOiJfdXNlcl9hZ2VudF93b3c2NCIsSGE6InVzZXJfZGF0YSIsClRnOiJ1c2VyX2RhdGFfYXV0b19sYXRlbmN5IixVZzoidXNlcl9kYXRhX2F1dG9fbWV0YSIsVmc6InVzZXJfZGF0YV9hdXRvX211bHRpIixXZzoidXNlcl9kYXRhX2F1dG9fc2VsZWN0b3JzIixYZzoidXNlcl9kYXRhX2F1dG9fc3RhdHVzIixtZToidXNlcl9kYXRhX21vZGUiLG5lOiJ1c2VyX2RhdGFfc2V0dGluZ3MiLFJhOiJ1c2VyX2lkIixhYjoidXNlcl9wcm9wZXJ0aWVzIixmajoiX3VzZXJfcmVnaW9uIixvZToidXNfcHJpdmFjeV9zdHJpbmciLGxhOiJ2YWx1ZSIsWWc6IndicmFpZF9tdWx0aXBsZV9jb252ZXJzaW9ucyIsbWo6Il9ob3N0X25hbWUiLG5qOiJfaW5fcGFnZV9jb21tYW5kIixvajoiX2lzX3Bhc3N0aHJvdWdoX2NpZCIsS2I6Im5vbl9wZXJzb25hbGl6ZWRfYWRzIix2ZToiX3NzdF9wYXJhbWV0ZXJzIixvYjoiY29udmVyc2lvbl9sYWJlbCIscmE6InBhZ2VfbG9jYXRpb24iLHNiOiJnbG9iYWxfZGV2ZWxvcGVyX2lkX3N0cmluZyIsQWM6InRjX3ByaXZhY3lfc3RyaW5nIn19LApiaT17fSxjaT1PYmplY3QuZnJlZXplKChiaVtOLmcua2FdPTEsYmlbTi5nLm5mXT0xLGJpW04uZy5FZF09MSxiaVtOLmcubGJdPTEsYmlbTi5nLlpdPTEsYmlbTi5nLlVhXT0xLGJpW04uZy5WYV09MSxiaVtOLmcuWWFdPTEsYmlbTi5nLnVjXT0xLGJpW04uZy5SYl09MSxiaVtOLmcuT2FdPTEsYmlbTi5nLnZjXT0xLGJpW04uZy5YY109MSxiaVtOLmcuZmFdPTEsYmlbTi5nLnZnXT0xLGJpW04uZy5iZF09MSxiaVtOLmcuUmRdPTEsYmlbTi5nLlNkXT0xLGJpW04uZy54Y109MSxiaVtOLmcuRmddPTEsYmlbTi5nLlNiXT0xLGJpW04uZy5JZ109MSxiaVtOLmcuVmRdPTEsYmlbTi5nLnhmXT0xLGJpW04uZy5UYl09MSxiaVtOLmcuRWJdPTEsYmlbTi5nLkJhXT0xLGJpW04uZy55Zl09MSxiaVtOLmcuVmJdPTEsYmlbTi5nLlFhXT0xLGJpW04uZy5XYl09MSxiaVtOLmcuamRdPTEsYmlbTi5nLmtkXT0xLGJpW04uZy5BZl09MSxiaVtOLmcubGRdPTEsYmlbTi5nLkliXT0xLGJpW04uZy5YYl09CjEsYmlbTi5nLm5lXT0xLGJpW04uZy5hYl09MSxiaVtOLmcudmVdPTEsYmkpKTtPYmplY3QuZnJlZXplKFtOLmcucmEsTi5nLkdhLE4uZy5HYixOLmcuUGEsTi5nLnpmLE4uZy5SYSxOLmcud2YsTi5nLktpXSk7CnZhciBkaT17fSxlaT1PYmplY3QuZnJlZXplKChkaVtOLmcueGldPTEsZGlbTi5nLnlpXT0xLGRpW04uZy56aV09MSxkaVtOLmcuQWldPTEsZGlbTi5nLkJpXT0xLGRpW04uZy5DaV09MSxkaVtOLmcuRGldPTEsZGlbTi5nLkVpXT0xLGRpW04uZy5GaV09MSxkaVtOLmcuQ2RdPTEsZGkpKSxmaT17fSxnaT1PYmplY3QuZnJlZXplKChmaVtOLmcub2ddPTEsZmlbTi5nLnBnXT0xLGZpW04uZy5tY109MSxmaVtOLmcubmNdPTEsZmlbTi5nLnFnXT0xLGZpW04uZy5PYl09MSxmaVtOLmcub2NdPTEsZmlbTi5nLmliXT0xLGZpW04uZy5CYl09MSxmaVtOLmcuamJdPTEsZmlbTi5nLnlhXT0xLGZpW04uZy5xY109MSxmaVtOLmcuTGFdPTEsZmlbTi5nLnJnXT0xLGZpKSksaGk9T2JqZWN0LmZyZWV6ZShbTi5nLmthLE4uZy5sYixOLmcudmMsTi5nLnhjLE4uZy5kZCxOLmcuUWEsTi5nLlhiXSksaWk9T2JqZWN0LmZyZWV6ZShbXS5jb25jYXQoaGkpKSxqaT1PYmplY3QuZnJlZXplKFtOLmcuVmEsTi5nLlNkLApOLmcua2QsTi5nLkFmLE4uZy5NZF0pLGtpPU9iamVjdC5mcmVlemUoW10uY29uY2F0KGppKSksbGk9e30sbWk9KGxpW04uZy5KXT0iMSIsbGlbTi5nLlJdPSIyIixsaVtOLmcuTl09IjMiLGxpW04uZy54YV09IjQiLGxpKSxuaT17fSxvaT1PYmplY3QuZnJlZXplKChuaVtOLmcua2FdPTEsbmlbTi5nLkVkXT0xLG5pW04uZy5GYV09MSxuaVtOLmcuUGJdPTEsbmlbTi5nLnBmXT0xLG5pW04uZy5GZF09MSxuaVtOLmcuR2RdPTEsbmlbTi5nLkhkXT0xLG5pW04uZy5aXT0xLG5pW04uZy5JZF09MSxuaVtOLmcuWGFdPTEsbmlbTi5nLnphXT0xLG5pW04uZy5VYV09MSxuaVtOLmcuVmFdPTEsbmlbTi5nLllhXT0xLG5pW04uZy5PYV09MSxuaVtOLmcuQWFdPTEsbmlbTi5nLkpkXT0xLG5pW04uZy5mYV09MSxuaVtOLmcuTmldPTEsbmlbTi5nLk9kXT0xLG5pW04uZy5QZF09MSxuaVtOLmcud2ZdPTEsbmlbTi5nLnhjXT0xLG5pW04uZy5UYl09MSxuaVtOLmcuRWJdPTEsbmlbTi5nLlBhXT0xLG5pW04uZy5mZF09CjEsbmlbTi5nLnJhXT0xLG5pW04uZy5HYV09MSxuaVtOLmcuTmddPTEsbmlbTi5nLk9nXT0xLG5pW04uZy5QZ109MSxuaVtOLmcuUWddPTEsbmlbTi5nLlZiXT0xLG5pW04uZy5RYV09MSxuaVtOLmcuV2JdPTEsbmlbTi5nLmpkXT0xLG5pW04uZy5sZF09MSxuaVtOLmcuQ2FdPTEsbmlbTi5nLkliXT0xLG5pW04uZy5YYl09MSxuaVtOLmcuWmFdPTEsbmlbTi5nLkhhXT0xLG5pW04uZy5SYV09MSxuaVtOLmcubGFdPTEsbmkpKSxwaT17fSxxaT1PYmplY3QuZnJlZXplKChwaVtOLmcuQWtdPSJzIixwaVtOLmcuQ2tdPSJ5IixwaVtOLmcuemtdPSJwIixwaVtOLmcuQmtdPSJoIixwaVtOLmcud2ldPSJhIixwaVtOLmcueWtdPSJtIixwaSkpO09iamVjdC5mcmVlemUoTi5nKTt2YXIgcmk9e30sc2k9ei5nb29nbGVfdGFnX21hbmFnZXI9ei5nb29nbGVfdGFnX21hbmFnZXJ8fHt9LHRpPU1hdGgucmFuZG9tKCk7cmkuZmg9IjQzNjAiO3JpLnVlPU51bWJlcigiMCIpfHwwO3JpLmphPSJkYXRhTGF5ZXIiO3JpLkduPSJDaEFJZ0s2d3J3WVFtYVAyeXRuWHZla0lFaVVBVitDcEdzMUE4WFJZUjR2bG9YUUdXbVhOb0NvakxDVmFkOTRVNEtjQll1NlhZekNLR2dMazZnXHgzZFx4M2QiO3ZhciB1aT17X19jbDoxLF9fZWNsOjEsX19laGw6MSxfX2V2bDoxLF9fZmFsOjEsX19maWw6MSxfX2ZzbDoxLF9faGw6MSxfX2plbDoxLF9fbGNsOjEsX19zZGw6MSxfX3RsOjEsX195dGw6MX0sdmk9e19fcGF1c2VkOjEsX190ZzoxfSx3aTtmb3Iod2kgaW4gdWkpdWkuaGFzT3duUHJvcGVydHkod2kpJiYodmlbd2ldPTEpO3ZhciB4aT1PYSgidHJ1ZSIpLHlpLHppPSExO3ppPSEwOwp5aT16aTt2YXIgQWksQmk9ITE7QWk9Qmk7dmFyIENpLERpPSExO0NpPURpO3JpLkJkPSJ3d3cuZ29vZ2xldGFnbWFuYWdlci5jb20iO3ZhciBFaT0iIityaS5CZCsoeWk/Ii9ndGFnL2pzIjoiL2d0bS5qcyIpLEZpPW51bGwsR2k9bnVsbCxIaT17fSxJaT17fSxKaT1mdW5jdGlvbigpe3ZhciBhPXNpLnNlcXVlbmNlfHwxO3NpLnNlcXVlbmNlPWErMTtyZXR1cm4gYX07cmkud2s9InRydWUiO3ZhciBLaT0iIjtyaS5KZj1LaTt2YXIgTGk9bmV3IGZ1bmN0aW9uKCl7dGhpcy5oPSIiO3RoaXMuRj10aGlzLnM9ITE7dGhpcy5XPXRoaXMuTT10aGlzLkVhPXRoaXMuQz0iIn0sTWk9ZnVuY3Rpb24oKXt2YXIgYT1MaS5DLmxlbmd0aDtyZXR1cm4iLyI9PT1MaS5DW2EtMV0/TGkuQy5zdWJzdHJpbmcoMCxhLTEpOkxpLkN9O2Z1bmN0aW9uIE5pKGEpe2Zvcih2YXIgYj17fSxjPWZhKGEuc3BsaXQoInwiKSksZD1jLm5leHQoKTshZC5kb25lO2Q9Yy5uZXh0KCkpYltkLnZhbHVlXT0hMDtyZXR1cm4gYn12YXIgT2k9bmV3IEthLFBpPXt9LFFpPXt9LFRpPXtuYW1lOnJpLmphLHNldDpmdW5jdGlvbihhLGIpe25iKCRhKGEsYiksUGkpO1JpKCl9LGdldDpmdW5jdGlvbihhKXtyZXR1cm4gU2koYSwyKX0scmVzZXQ6ZnVuY3Rpb24oKXtPaT1uZXcgS2E7UGk9e307UmkoKX19LFNpPWZ1bmN0aW9uKGEsYil7cmV0dXJuIDIhPWI/T2kuZ2V0KGEpOlVpKGEpfSxVaT1mdW5jdGlvbihhLGIpe3ZhciBjPWEuc3BsaXQoIi4iKTtiPWJ8fFtdO2Zvcih2YXIgZD1QaSxlPTA7ZTxjLmxlbmd0aDtlKyspe2lmKG51bGw9PT1kKXJldHVybiExO2lmKHZvaWQgMD09PWQpYnJlYWs7ZD1kW2NbZV1dO2lmKC0xIT09Yi5pbmRleE9mKGQpKXJldHVybn1yZXR1cm4gZH0sVmk9ZnVuY3Rpb24oYSxiKXtRaS5oYXNPd25Qcm9wZXJ0eShhKXx8KE9pLnNldChhLGIpLG5iKCRhKGEsYiksUGkpLFJpKCkpfSxXaT1mdW5jdGlvbigpe2Zvcih2YXIgYT1bImd0bS5hbGxvd2xpc3QiLCJndG0uYmxvY2tsaXN0IiwiZ3RtLndoaXRlbGlzdCIsCiJndG0uYmxhY2tsaXN0IiwidGFnVHlwZUJsYWNrbGlzdCJdLGI9MDtiPGEubGVuZ3RoO2IrKyl7dmFyIGM9YVtiXSxkPVNpKGMsMSk7aWYoSGEoZCl8fGxiKGQpKWQ9bmIoZCk7UWlbY109ZH19LFJpPWZ1bmN0aW9uKGEpe2woUWksZnVuY3Rpb24oYixjKXtPaS5zZXQoYixjKTtuYigkYShiKSxQaSk7bmIoJGEoYixjKSxQaSk7YSYmZGVsZXRlIFFpW2JdfSl9LFhpPWZ1bmN0aW9uKGEsYil7dmFyIGMsZD0xIT09KHZvaWQgMD09PWI/MjpiKT9VaShhKTpPaS5nZXQoYSk7ImFycmF5Ij09PWpiKGQpfHwib2JqZWN0Ij09PWpiKGQpP2M9bmIoZCk6Yz1kO3JldHVybiBjfTsKdmFyIFlpPWZ1bmN0aW9uKGEsYixjKXtpZighYylyZXR1cm4hMTt2YXIgZD1jLnNlbGVjdG9yX3R5cGUsZT1TdHJpbmcoYy52YWx1ZSksZjtpZigianNfdmFyaWFibGUiPT09ZCl7ZT1lLnJlcGxhY2UoL1xbIj8nPy9nLCIuIikucmVwbGFjZSgvIj8nP1xdL2csIiIpO2Zvcih2YXIgZz1lLnNwbGl0KCIsIiksaD0wO2g8Zy5sZW5ndGg7aCsrKXt2YXIgbT1nW2hdLnRyaW0oKTtpZihtKXtpZigwPT09bS5pbmRleE9mKCJkYXRhTGF5ZXIuIikpZj1TaShtLnN1YnN0cmluZygxMCkpO2Vsc2V7dmFyIG49bS5zcGxpdCgiLiIpO2Y9eltuLnNoaWZ0KCldO2Zvcih2YXIgcD0wO3A8bi5sZW5ndGg7cCsrKWY9ZiYmZltuW3BdXX1pZih2b2lkIDAhPT1mKWJyZWFrfX19ZWxzZSBpZigiY3NzX3NlbGVjdG9yIj09PWQmJnloKXt2YXIgcT16aChlKTtpZihxJiYwPHEubGVuZ3RoKXtmPVtdO2Zvcih2YXIgcj0wO3I8cS5sZW5ndGgmJnI8KCJlbWFpbCI9PT1ifHwicGhvbmVfbnVtYmVyIj09PWI/NToxKTtyKyspZi5wdXNoKFBjKHFbcl0pfHwKUmEocVtyXS52YWx1ZSkpO2Y9MT09PWYubGVuZ3RoP2ZbMF06Zn19cmV0dXJuIGY/KGFbYl09ZiwhMCk6ITF9LFppPWZ1bmN0aW9uKGEpe2lmKGEpe3ZhciBiPXt9LGM9ITE7Yz1ZaShiLCJlbWFpbCIsYS5lbWFpbCl8fGM7Yz1ZaShiLCJwaG9uZV9udW1iZXIiLGEucGhvbmUpfHxjO2IuYWRkcmVzcz1bXTtmb3IodmFyIGQ9YS5uYW1lX2FuZF9hZGRyZXNzfHxbXSxlPTA7ZTxkLmxlbmd0aDtlKyspe3ZhciBmPXt9O2M9WWkoZiwiZmlyc3RfbmFtZSIsZFtlXS5maXJzdF9uYW1lKXx8YztjPVlpKGYsImxhc3RfbmFtZSIsZFtlXS5sYXN0X25hbWUpfHxjO2M9WWkoZiwic3RyZWV0IixkW2VdLnN0cmVldCl8fGM7Yz1ZaShmLCJjaXR5IixkW2VdLmNpdHkpfHxjO2M9WWkoZiwicmVnaW9uIixkW2VdLnJlZ2lvbil8fGM7Yz1ZaShmLCJjb3VudHJ5IixkW2VdLmNvdW50cnkpfHxjO2M9WWkoZiwicG9zdGFsX2NvZGUiLGRbZV0ucG9zdGFsX2NvZGUpfHxjO2IuYWRkcmVzcy5wdXNoKGYpfXJldHVybiBjPwpiOnZvaWQgMH19LCRpPWZ1bmN0aW9uKGEpe3JldHVybiBsYihhKT8hIWEuZW5hYmxlX2NvZGU6ITF9O3ZhciBhaj1bXTtmdW5jdGlvbiBiaihhKXtzd2l0Y2goYSl7Y2FzZSAwOnJldHVybiAwO2Nhc2UgMTA6cmV0dXJuIDE5O2Nhc2UgMTg6cmV0dXJuIDE1O2Nhc2UgMzk6cmV0dXJuIDExO2Nhc2UgNDA6cmV0dXJuIDEyO2Nhc2UgNDQ6cmV0dXJuIDE0O2Nhc2UgNDc6cmV0dXJuIDEzO2Nhc2UgNTc6cmV0dXJuIDIwO2Nhc2UgNjk6cmV0dXJuIDE2O2Nhc2UgODE6cmV0dXJuIDE4O2Nhc2UgOTE6cmV0dXJuIDIxO2Nhc2UgOTM6cmV0dXJuIDIyfX1mdW5jdGlvbiBRKGEpe2FqW2FdPSEwO3ZhciBiPWJqKGEpO3ZvaWQgMCE9PWImJihTZltiXT0hMCl9ClEoMjQpO1EoMjEpO1EoMjIpO1EoMjMpOwpRKDQxKTtRKDYpO1EoNDUpO1EoNTkpOwpRKDI2KTtRKDEzKTtRKDg5KTtRKDEyKTsKUSg5Nyk7USg4OCk7ClEoNDQpOwpRKDQ4KTtRKDcwKTtRKDkwKTtRKDM2KTsKUSg3KTtRKDQpOwpRKDYzKTtRKDkpO1EoNzgpOwpRKDg1KTtRKDUzKTtRKDU0KTtRKDU2KTsKUSg1MCk7USg0OSk7USg3OSk7ClEoNTUpO1EoNjgpOwpRKDEwMCk7ClEoMTgpO1EoOTgpOwpRKDg2KTtRKDI3KTtRKDI4KTtRKDI5KTsKUSg2OSk7USgxOSk7CmNqKDkwLDgwKTtRKDQzKTtRKDczKTsKVGZbMV09TnVtYmVyKCcwJyl8fDZFNDsKVGZbMl09TnVtYmVyKCcnKXx8NTA7USg3MSk7USgzNSk7ZnVuY3Rpb24gY2ooYSxiKXtmb3IodmFyIGM9dm9pZCAwLGQ9dm9pZCAwLGU9MDtjPT09ZDspaWYoYz1NYXRoLmZsb29yKDIqTWF0aC5yYW5kb20oKSksZD1NYXRoLmZsb29yKDIqTWF0aC5yYW5kb20oKSksZSsrLDIwPGUpcmV0dXJuO2M/UShhKTpRKGIpfWZ1bmN0aW9uIFIoYSl7cmV0dXJuISFhalthXX12YXIgZGo9ZnVuY3Rpb24oYSl7QWIoIkhFQUxUSCIsYSl9O3ZhciBlajt0cnl7ZWo9SlNPTi5wYXJzZSh5YigiZXlJd0lqb2lVbFVpTENJeElqb2lVbFV0VGtsYUlpd2lNaUk2Wm1Gc2MyVXNJak1pT2lKbmIyOW5iR1V1Y25VaUxDSTBJam9pSWl3aU5TSTZkSEoxWlN3aU5pSTZabUZzYzJVc0lqY2lPaUpoWkY5emRHOXlZV2RsZkdGdVlXeDVkR2xqYzE5emRHOXlZV2RsZkdGa1gzVnpaWEpmWkdGMFlYeGhaRjl3WlhKemIyNWhiR2w2WVhScGIyNGlmUSIpKX1jYXRjaChhKXtNKDEyMyksZGooMiksZWo9e319CnZhciBmaj1mdW5jdGlvbigpe3JldHVybiBlalsiMCJdfHwiIn0sZ2o9ZnVuY3Rpb24oKXtyZXR1cm4gZWpbIjEiXXx8IiJ9LGhqPWZ1bmN0aW9uKCl7dmFyIGE9ITE7YT0hIWVqWyIyIl07cmV0dXJuIGF9LGlqPWZ1bmN0aW9uKCl7cmV0dXJuITEhPT1lalsiNiJdfSxqaj1mdW5jdGlvbigpe3ZhciBhPSIiO2E9ZWpbIjQiXXx8IiI7cmV0dXJuIGF9LGtqPWZ1bmN0aW9uKCl7dmFyIGE9ITE7YT0hIWVqWyI1Il07cmV0dXJuIGF9LGxqPWZ1bmN0aW9uKCl7dmFyIGE9IiI7CmE9ZWpbIjMiXXx8IiI7cmV0dXJuIGF9O3ZhciBtaj0vOlswLTldKyQvLG5qPS9eXGQrXC5mbHNcLmRvdWJsZWNsaWNrXC5uZXQkLyxvaj1mdW5jdGlvbihhLGIsYyxkKXtmb3IodmFyIGU9W10sZj1mYShhLnNwbGl0KCImIikpLGc9Zi5uZXh0KCk7IWcuZG9uZTtnPWYubmV4dCgpKXt2YXIgaD1mYShnLnZhbHVlLnNwbGl0KCI9IikpLG09aC5uZXh0KCkudmFsdWUsbj1pYShoKTtpZihkZWNvZGVVUklDb21wb25lbnQobS5yZXBsYWNlKC9cKy9nLCIgIikpPT09Yil7dmFyIHA9bi5qb2luKCI9Iik7aWYoIWMpcmV0dXJuIGQ/cDpkZWNvZGVVUklDb21wb25lbnQocC5yZXBsYWNlKC9cKy9nLCIgIikpO2UucHVzaChkP3A6ZGVjb2RlVVJJQ29tcG9uZW50KHAucmVwbGFjZSgvXCsvZywiICIpKSl9fXJldHVybiBjP2U6dm9pZCAwfSxyaj1mdW5jdGlvbihhLGIsYyxkLGUpe2ImJihiPVN0cmluZyhiKS50b0xvd2VyQ2FzZSgpKTtpZigicHJvdG9jb2wiPT09Ynx8InBvcnQiPT09YilhLnByb3RvY29sPXBqKGEucHJvdG9jb2wpfHxwaih6LmxvY2F0aW9uLnByb3RvY29sKTsKInBvcnQiPT09Yj9hLnBvcnQ9U3RyaW5nKE51bWJlcihhLmhvc3RuYW1lP2EucG9ydDp6LmxvY2F0aW9uLnBvcnQpfHwoImh0dHAiPT09YS5wcm90b2NvbD84MDoiaHR0cHMiPT09YS5wcm90b2NvbD80NDM6IiIpKToiaG9zdCI9PT1iJiYoYS5ob3N0bmFtZT0oYS5ob3N0bmFtZXx8ei5sb2NhdGlvbi5ob3N0bmFtZSkucmVwbGFjZShtaiwiIikudG9Mb3dlckNhc2UoKSk7cmV0dXJuIHFqKGEsYixjLGQsZSl9LHFqPWZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGYsZz1waihhLnByb3RvY29sKTtiJiYoYj1TdHJpbmcoYikudG9Mb3dlckNhc2UoKSk7c3dpdGNoKGIpe2Nhc2UgInVybF9ub19mcmFnbWVudCI6Zj1zaihhKTticmVhaztjYXNlICJwcm90b2NvbCI6Zj1nO2JyZWFrO2Nhc2UgImhvc3QiOmY9YS5ob3N0bmFtZS5yZXBsYWNlKG1qLCIiKS50b0xvd2VyQ2FzZSgpO2lmKGMpe3ZhciBoPS9ed3d3XGQqXC4vLmV4ZWMoZik7aCYmaFswXSYmKGY9Zi5zdWJzdHIoaFswXS5sZW5ndGgpKX1icmVhazsKY2FzZSAicG9ydCI6Zj1TdHJpbmcoTnVtYmVyKGEucG9ydCl8fCgiaHR0cCI9PT1nPzgwOiJodHRwcyI9PT1nPzQ0MzoiIikpO2JyZWFrO2Nhc2UgInBhdGgiOmEucGF0aG5hbWV8fGEuaG9zdG5hbWV8fEFiKCJUQUdHSU5HIiwxKTtmPSIvIj09PWEucGF0aG5hbWUuc3Vic3RyKDAsMSk/YS5wYXRobmFtZToiLyIrYS5wYXRobmFtZTt2YXIgbT1mLnNwbGl0KCIvIik7MDw9KGR8fFtdKS5pbmRleE9mKG1bbS5sZW5ndGgtMV0pJiYobVttLmxlbmd0aC0xXT0iIik7Zj1tLmpvaW4oIi8iKTticmVhaztjYXNlICJxdWVyeSI6Zj1hLnNlYXJjaC5yZXBsYWNlKCI/IiwiIik7ZSYmKGY9b2ooZixlLCExKSk7YnJlYWs7Y2FzZSAiZXh0ZW5zaW9uIjp2YXIgbj1hLnBhdGhuYW1lLnNwbGl0KCIuIik7Zj0xPG4ubGVuZ3RoP25bbi5sZW5ndGgtMV06IiI7Zj1mLnNwbGl0KCIvIilbMF07YnJlYWs7Y2FzZSAiZnJhZ21lbnQiOmY9YS5oYXNoLnJlcGxhY2UoIiMiLCIiKTticmVhaztkZWZhdWx0OmY9CmEmJmEuaHJlZn1yZXR1cm4gZn0scGo9ZnVuY3Rpb24oYSl7cmV0dXJuIGE/YS5yZXBsYWNlKCI6IiwiIikudG9Mb3dlckNhc2UoKToiIn0sc2o9ZnVuY3Rpb24oYSl7dmFyIGI9IiI7aWYoYSYmYS5ocmVmKXt2YXIgYz1hLmhyZWYuaW5kZXhPZigiIyIpO2I9MD5jP2EuaHJlZjphLmhyZWYuc3Vic3RyKDAsYyl9cmV0dXJuIGJ9LHRqPXt9LHVqPTAsdmo9ZnVuY3Rpb24oYSl7dmFyIGI9dGpbYV07aWYoIWIpe3ZhciBjPUMuY3JlYXRlRWxlbWVudCgiYSIpO2EmJihjLmhyZWY9YSk7dmFyIGQ9Yy5wYXRobmFtZTsiLyIhPT1kWzBdJiYoYXx8QWIoIlRBR0dJTkciLDEpLGQ9Ii8iK2QpO3ZhciBlPWMuaG9zdG5hbWUucmVwbGFjZShtaiwiIik7Yj17aHJlZjpjLmhyZWYscHJvdG9jb2w6Yy5wcm90b2NvbCxob3N0OmMuaG9zdCxob3N0bmFtZTplLHBhdGhuYW1lOmQsc2VhcmNoOmMuc2VhcmNoLGhhc2g6Yy5oYXNoLHBvcnQ6Yy5wb3J0fTs1PnVqJiYodGpbYV09Yix1aisrKX1yZXR1cm4gYn0sCkJqPWZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIobil7dmFyIHA9bi5zcGxpdCgiPSIpWzBdO3JldHVybiAwPmQuaW5kZXhPZihwKT9uOnArIj0wIn1mdW5jdGlvbiBjKG4pe3JldHVybiBuLnNwbGl0KCImIikubWFwKGIpLmZpbHRlcihmdW5jdGlvbihwKXtyZXR1cm4gdm9pZCAwIT09cH0pLmpvaW4oIiYiKX12YXIgZD0iZ2NsaWQgZGNsaWQgZ2JyYWlkIHdicmFpZCBnY2xhdyBnY2xkYyBnY2xoYSBnY2xnZiBnY2xnYiBfZ2wiLnNwbGl0KCIgIiksZT12aihhKSxmPWEuc3BsaXQoL1s/I10vKVswXSxnPWUuc2VhcmNoLGg9ZS5oYXNoOyI/Ij09PWdbMF0mJihnPWcuc3Vic3RyaW5nKDEpKTsiIyI9PT1oWzBdJiYoaD1oLnN1YnN0cmluZygxKSk7Zz1jKGcpO2g9YyhoKTsiIiE9PWcmJihnPSI/IitnKTsiIiE9PWgmJihoPSIjIitoKTt2YXIgbT0iIitmK2craDsiLyI9PT1tW20ubGVuZ3RoLTFdJiYobT1tLnN1YnN0cmluZygwLG0ubGVuZ3RoLTEpKTtyZXR1cm4gbX0sQ2o9ZnVuY3Rpb24oYSl7dmFyIGI9CnZqKHoubG9jYXRpb24uaHJlZiksYz1yaihiLCJob3N0IiwhMSk7aWYoYyYmYy5tYXRjaChuaikpe3ZhciBkPXJqKGIsInBhdGgiKS5zcGxpdChhKyI9Iik7aWYoMTxkLmxlbmd0aClyZXR1cm4gZFsxXS5zcGxpdCgiOyIpWzBdLnNwbGl0KCI/IilbMF19fTt2YXIgRGo9eyJodHRwczovL3d3dy5nb29nbGUuY29tIjoiL2ciLCJodHRwczovL3d3dy5nb29nbGVzeW5kaWNhdGlvbi5jb20iOiIvZ3MiLCJodHRwczovL3d3dy5nb29nbGVhZHNlcnZpY2VzLmNvbSI6Ii9hcyIsImh0dHBzOi8vcGFnZWFkMi5nb29nbGVzeW5kaWNhdGlvbi5jb20iOiIvZ3MifTtmdW5jdGlvbiBFaihhLGIpe2lmKGEpe3ZhciBjPSIiK2E7MCE9PWMuaW5kZXhPZigiaHR0cDovLyIpJiYwIT09Yy5pbmRleE9mKCJodHRwczovLyIpJiYoYz0iaHR0cHM6Ly8iK2MpOyIvIj09PWNbYy5sZW5ndGgtMV0mJihjPWMuc3Vic3RyaW5nKDAsYy5sZW5ndGgtMSkpO3JldHVybiB2aigiIitjK2IpLmhyZWZ9fWZ1bmN0aW9uIEZqKCl7cmV0dXJuIExpLnN8fEFpfWZ1bmN0aW9uIEdqKCl7cmV0dXJuISFyaS5KZiYmIlNHVE1fVE9LRU4iIT09cmkuSmYuc3BsaXQoIkBAIikuam9pbigiIil9CmZ1bmN0aW9uIEhqKGEpe2Zvcih2YXIgYj1mYShbTi5nLmpkLE4uZy5JYl0pLGM9Yi5uZXh0KCk7IWMuZG9uZTtjPWIubmV4dCgpKXt2YXIgZD1WKGEsYy52YWx1ZSk7aWYoZClyZXR1cm4gZH19ZnVuY3Rpb24gSWooYSxiKXtyZXR1cm4gTGkucz8iIitNaSgpKyhiP0RqW2FdfHwiIjoiIik6YX07dmFyIEpqPWZ1bmN0aW9uKGEpe3ZhciBiPVN0cmluZyhhW09lLm1hXXx8IiIpLnJlcGxhY2UoL18vZywiIik7MD09PWIuaW5kZXhPZigiY3Z0IikmJihiPSJjdnQiKTtyZXR1cm4gYn0sS2o9MDw9ei5sb2NhdGlvbi5zZWFyY2guaW5kZXhPZigiP2d0bV9sYXRlbmN5PSIpfHwwPD16LmxvY2F0aW9uLnNlYXJjaC5pbmRleE9mKCImZ3RtX2xhdGVuY3k9Iik7dmFyIE1qPWZ1bmN0aW9uKGEsYil7dmFyIGM9TGooKTtjLnBlbmRpbmd8fChjLnBlbmRpbmc9W10pO0lhKGMucGVuZGluZyxmdW5jdGlvbihkKXtyZXR1cm4gZC50YXJnZXQuY3RpZD09PWEuY3RpZCYmZC50YXJnZXQuaXNEZXN0aW5hdGlvbj09PWEuaXNEZXN0aW5hdGlvbn0pfHxjLnBlbmRpbmcucHVzaCh7dGFyZ2V0OmEsb25Mb2FkOmJ9KX0sTmo9ZnVuY3Rpb24oKXt0aGlzLmNvbnRhaW5lcj17fTt0aGlzLmRlc3RpbmF0aW9uPXt9O3RoaXMuY2Fub25pY2FsPXt9O3RoaXMucGVuZGluZz1bXTt0aGlzLnNpbG9lZD1bXX0sTGo9ZnVuY3Rpb24oKXt2YXIgYT1EYygiZ29vZ2xlX3RhZ19kYXRhIix7fSksYj1hLnRpZHI7Ynx8KGI9bmV3IE5qLGEudGlkcj1iKTtyZXR1cm4gYn07dmFyIE9qPXt9LFBqPSExLFZmPXtjdGlkOiJHLVRCUFlFRDhXU1ciLGNhbm9uaWNhbENvbnRhaW5lcklkOiI5NzQyNDkwMCIsVmo6IkctVEJQWUVEOFdTV3xHVC1NNlBORjdHIixXajoiRy1UQlBZRUQ4V1NXIn07T2oucWU9T2EoIiIpOwp2YXIgU2o9ZnVuY3Rpb24oKXt2YXIgYT1RaigpO3JldHVybiBQaj9hLm1hcChSaik6YX0sVWo9ZnVuY3Rpb24oKXt2YXIgYT1UaigpO3JldHVybiBQaj9hLm1hcChSaik6YX0sV2o9ZnVuY3Rpb24oKXtyZXR1cm4gVmooVmYuY3RpZCl9LFhqPWZ1bmN0aW9uKCl7cmV0dXJuIFZqKFZmLmNhbm9uaWNhbENvbnRhaW5lcklkfHwiXyIrVmYuY3RpZCl9LFFqPWZ1bmN0aW9uKCl7cmV0dXJuIFZmLlZqP1ZmLlZqLnNwbGl0KCJ8Iik6W1ZmLmN0aWRdfSxUaj1mdW5jdGlvbigpe3JldHVybiBWZi5Xaj9WZi5Xai5zcGxpdCgifCIpOltdfSxhaz1mdW5jdGlvbigpe3ZhciBhPVlqKFpqKCkpO2lmKGEpe2Zvcig7YS5wYXJlbnQ7KXt2YXIgYj1ZaihhLnBhcmVudCk7aWYoIWIpYnJlYWs7YT1ifXJldHVybiBhfX0sWWo9ZnVuY3Rpb24oYSl7dmFyIGI9TGooKTtyZXR1cm4gYS5pc0Rlc3RpbmF0aW9uP2IuZGVzdGluYXRpb25bYS5jdGlkXTpiLmNvbnRhaW5lclthLmN0aWRdfSxWaj1mdW5jdGlvbihhKXtyZXR1cm4gUGo/ClJqKGEpOmF9LFJqPWZ1bmN0aW9uKGEpe3JldHVybiJzaWxvZWRfIithfSxjaz1mdW5jdGlvbihhKXtyZXR1cm4gUGo/YmsoYSk6YX07ZnVuY3Rpb24gYmsoYSl7YT1TdHJpbmcoYSk7cmV0dXJuIDA9PT1hLmluZGV4T2YoInNpbG9lZF8iKT9hLnN1YnN0cmluZyg3KTphfQp2YXIgZGs9ZnVuY3Rpb24oKXt2YXIgYT0hMTtpZihhKXt2YXIgYj1MaigpO2lmKGIuc2lsb2VkKXtmb3IodmFyIGM9W10sZD1RaigpLm1hcChSaiksZT1UaigpLm1hcChSaiksZj17fSxnPTA7ZzxiLnNpbG9lZC5sZW5ndGg7Zj17T2Y6dm9pZCAwfSxnKyspZi5PZj1iLnNpbG9lZFtnXSwhUGomJklhKGYuT2YuaXNEZXN0aW5hdGlvbj9lOmQsZnVuY3Rpb24oaCl7cmV0dXJuIGZ1bmN0aW9uKG0pe3JldHVybiBtPT09aC5PZi5jdGlkfX0oZikpP1BqPSEwOmMucHVzaChmLk9mKTtiLnNpbG9lZD1jfX19OwpmdW5jdGlvbiBlaygpe3ZhciBhPUxqKCk7aWYoYS5wZW5kaW5nKXtmb3IodmFyIGIsYz1bXSxkPSExLGU9U2ooKSxmPVVqKCksZz17fSxoPTA7aDxhLnBlbmRpbmcubGVuZ3RoO2c9e1llOnZvaWQgMH0saCsrKWcuWWU9YS5wZW5kaW5nW2hdLElhKGcuWWUudGFyZ2V0LmlzRGVzdGluYXRpb24/ZjplLGZ1bmN0aW9uKG0pe3JldHVybiBmdW5jdGlvbihuKXtyZXR1cm4gbj09PW0uWWUudGFyZ2V0LmN0aWR9fShnKSk/ZHx8KGI9Zy5ZZS5vbkxvYWQsZD0hMCk6Yy5wdXNoKGcuWWUpO2EucGVuZGluZz1jO2lmKGIpdHJ5e2IoWGooKSl9Y2F0Y2gobSl7fX19CnZhciBmaz1mdW5jdGlvbigpe2Zvcih2YXIgYT1WZi5jdGlkLGI9U2ooKSxjPVVqKCksZD1mdW5jdGlvbihuLHApe3ZhciBxPXtjYW5vbmljYWxDb250YWluZXJJZDpWZi5jYW5vbmljYWxDb250YWluZXJJZCxzY3JpcHRDb250YWluZXJJZDphLHN0YXRlOjIsY29udGFpbmVyczpiLnNsaWNlKCksZGVzdGluYXRpb25zOmMuc2xpY2UoKX07Q2MmJihxLnNjcmlwdFNvdXJjZT1DYyk7dmFyIHI9cD9lLmRlc3RpbmF0aW9uOmUuY29udGFpbmVyLHQ9cltuXTt0PyhwJiYwPT09dC5zdGF0ZSYmTSg5MyksT2JqZWN0LmFzc2lnbih0LHEpKTpyW25dPXF9LGU9TGooKSxmPWZhKGIpLGc9Zi5uZXh0KCk7IWcuZG9uZTtnPWYubmV4dCgpKWQoZy52YWx1ZSwhMSk7Zm9yKHZhciBoPWZhKGMpLG09aC5uZXh0KCk7IW0uZG9uZTttPWgubmV4dCgpKWQobS52YWx1ZSwhMCk7ZS5jYW5vbmljYWxbWGooKV09e307ZWsoKX0sZ2s9ZnVuY3Rpb24oYSl7cmV0dXJuISFMaigpLmNvbnRhaW5lclthXX0saGs9ZnVuY3Rpb24oYSl7dmFyIGI9CkxqKCkuZGVzdGluYXRpb25bYV07cmV0dXJuISFiJiYhIWIuc3RhdGV9LFpqPWZ1bmN0aW9uKCl7cmV0dXJue2N0aWQ6V2ooKSxpc0Rlc3RpbmF0aW9uOk9qLnFlfX07ZnVuY3Rpb24gaWsoYSl7dmFyIGI9TGooKTsoYi5zaWxvZWQ9Yi5zaWxvZWR8fFtdKS5wdXNoKGEpfXZhciBqaz1mdW5jdGlvbigpe3ZhciBhPUxqKCkuY29udGFpbmVyLGI7Zm9yKGIgaW4gYSlpZihhLmhhc093blByb3BlcnR5KGIpJiYxPT09YVtiXS5zdGF0ZSlyZXR1cm4hMDtyZXR1cm4hMX0sa2s9ZnVuY3Rpb24oKXt2YXIgYT17fTtsKExqKCkuZGVzdGluYXRpb24sZnVuY3Rpb24oYixjKXswPT09Yy5zdGF0ZSYmKGFbYmsoYildPWMpfSk7cmV0dXJuIGF9LGxrPWZ1bmN0aW9uKGEpe3JldHVybiEhKGEmJmEucGFyZW50JiZhLmNvbnRleHQmJjE9PT1hLmNvbnRleHQuc291cmNlJiYwIT09YS5wYXJlbnQuY3RpZC5pbmRleE9mKCJHVE0tIikpfTt2YXIgbWs9e3NhbXBsZVJhdGU6IjAuMDA1MDAwIixzazoiIixyazpOdW1iZXIoIjUiKSxzbzpOdW1iZXIoIiIpfSxuaz1bXTtmdW5jdGlvbiBvayhhKXtuay5wdXNoKGEpfXZhciBwaz0hMSxxaztpZighKHFrPUtqKSl7dmFyIHJrPU1hdGgucmFuZG9tKCksc2s9bWsuc2FtcGxlUmF0ZTtxaz1yazxOdW1iZXIoc2spfQp2YXIgdGs9cWssdWs9Ii9hP2lkPSIrVmYuY3RpZCx2az0iaHR0cHM6Ly93d3cuZ29vZ2xldGFnbWFuYWdlci5jb20iK3VrLHdrPXZvaWQgMCx4az17fSx5az12b2lkIDAsems9bmV3IGZ1bmN0aW9uKCl7dmFyIGE9NTswPG1rLnJrJiYoYT1tay5yayk7dGhpcy5oPTA7dGhpcy5DPVtdO3RoaXMucz1hfSxBaz0xRTM7CmZ1bmN0aW9uIEJrKGEsYil7dmFyIGM9d2s7aWYodm9pZCAwPT09YylpZihiKWM9SmkoKTtlbHNlIHJldHVybiIiO2Zvcih2YXIgZD1bSWooImh0dHBzOi8vd3d3Lmdvb2dsZXRhZ21hbmFnZXIuY29tIiksdWtdLGU9ZmEobmspLGY9ZS5uZXh0KCk7IWYuZG9uZTtmPWUubmV4dCgpKWZvcih2YXIgZz1mLnZhbHVlLGg9Zyh7ZXZlbnRJZDpjLHpiOiEhYSxkZzpmdW5jdGlvbigpe3BrPSEwfX0pLG09ZmEoaCksbj1tLm5leHQoKTshbi5kb25lO249bS5uZXh0KCkpe3ZhciBwPWZhKG4udmFsdWUpLHE9cC5uZXh0KCkudmFsdWUscj1wLm5leHQoKS52YWx1ZTtkLnB1c2goIiYiK3ErIj0iK3IpfWQucHVzaCgiJno9MCIpO3JldHVybiBkLmpvaW4oIiIpfQpmdW5jdGlvbiBDaygpe3lrJiYoei5jbGVhclRpbWVvdXQoeWspLHlrPXZvaWQgMCk7aWYodm9pZCAwIT09d2smJkRrKXt2YXIgYTsoYT14a1t3a10pfHwoYT16ay5oPHprLnM/ITE6MUUzPlRhKCktemsuQ1t6ay5oJXprLnNdKTtpZihhfHwwPj1Bay0tKU0oMSkseGtbd2tdPSEwO2Vsc2V7dmFyIGI9emsuaCsrJXprLnM7emsuQ1tiXT1UYSgpO3ZhciBjPUJrKCEwKTtMYyhjKTtpZihwayl7dmFyIGQ9Yy5yZXBsYWNlKCIvYT8iLCIvdGQ/Iik7TGMoZCl9RGs9cGs9ITF9fX12YXIgRGs9ITE7ZnVuY3Rpb24gRWsoYSl7eGtbYV18fChhIT09d2smJihDaygpLHdrPWEpLERrPSEwLHlrfHwoeWs9ei5zZXRUaW1lb3V0KENrLDUwMCkpLDIwMjI8PUJrKCkubGVuZ3RoJiZDaygpKX12YXIgRms9SmEoKTtmdW5jdGlvbiBHaygpe0ZrPUphKCl9ZnVuY3Rpb24gSGsoKXtyZXR1cm5bWyJ2IiwiMyJdLFsidCIsInQiXSxbInBpZCIsRmtdXX07dmFyIElrPVtdLEprPVtdO2Z1bmN0aW9uIEtrKGEpe1IoNzEpJiYtMT09PUprLmluZGV4T2YoYSkmJihJay5wdXNoKGEpLEprLnB1c2goYSkpfWZ1bmN0aW9uIExrKGEpe3ZhciBiPVtdO2lmKCFJay5sZW5ndGgpcmV0dXJuIGI7Zm9yKHZhciBjPWZhKElrKSxkPWMubmV4dCgpOyFkLmRvbmU7ZD1jLm5leHQoKSliLnB1c2goW2QudmFsdWUsIjEiXSk7YS56YiYmKGEuZGcoKSxJay5sZW5ndGg9MCk7cmV0dXJuIGJ9O3ZhciBNaz1uZXcgZnVuY3Rpb24oYSxiKXt0aGlzLmg9YTt0aGlzLmRlZmF1bHRWYWx1ZT12b2lkIDA9PT1iPyExOmJ9KDE5MzMpO3ZhciBOaz1mdW5jdGlvbihhKXtOa1siICJdKGEpO3JldHVybiBhfTtOa1siICJdPWZ1bmN0aW9uKCl7fTt2YXIgUGs9ZnVuY3Rpb24oKXt2YXIgYT1PayxiPSJDaCI7aWYoYS5DaCYmYS5oYXNPd25Qcm9wZXJ0eShiKSlyZXR1cm4gYS5DaDt2YXIgYz1uZXcgYTtyZXR1cm4gYS5DaD1jfTt2YXIgT2s9ZnVuY3Rpb24oKXt2YXIgYT17fTt0aGlzLmg9ZnVuY3Rpb24oKXt2YXIgYj1Nay5oLGM9TWsuZGVmYXVsdFZhbHVlO3JldHVybiBudWxsIT1hW2JdP2FbYl06Y307dGhpcy5zPWZ1bmN0aW9uKCl7YVtNay5oXT0hMH19O3ZhciBRaz0hMSxSaz0hMSxTaz17fSxUaz17fSxVaz17YWRfc3RvcmFnZTohMSxhZF91c2VyX2RhdGE6ITEsYWRfcGVyc29uYWxpemF0aW9uOiExfTtmdW5jdGlvbiBWaygpe3ZhciBhPURjKCJnb29nbGVfdGFnX2RhdGEiLHt9KTtyZXR1cm4gYS5pY3M9YS5pY3N8fG5ldyBXa312YXIgV2s9ZnVuY3Rpb24oKXt0aGlzLmVudHJpZXM9e307dGhpcy5jcHM9e307dGhpcy53YWl0UGVyaW9kVGltZWRPdXQ9dGhpcy53YXNTZXRMYXRlPXRoaXMuYWNjZXNzZWRBbnk9dGhpcy5hY2Nlc3NlZERlZmF1bHQ9dGhpcy51c2VkU2V0Q3BzPXRoaXMudXNlZEltcGxpY2l0PXRoaXMudXNlZFVwZGF0ZT10aGlzLnVzZWREZWZhdWx0PXRoaXMudXNlZERlY2xhcmU9dGhpcy5hY3RpdmU9ITE7dGhpcy5oPVtdfTsKV2sucHJvdG90eXBlLmRlZmF1bHQ9ZnVuY3Rpb24oYSxiLGMsZCxlLGYpe3RoaXMudXNlZERlZmF1bHR8fHRoaXMudXNlZERlY2xhcmV8fCF0aGlzLmFjY2Vzc2VkRGVmYXVsdCYmIXRoaXMuYWNjZXNzZWRBbnl8fCh0aGlzLndhc1NldExhdGU9ITApO3RoaXMudXNlZERlZmF1bHQ9dGhpcy5hY3RpdmU9ITA7QWIoIlRBR0dJTkciLDE5KTt2b2lkIDA9PWI/QWIoIlRBR0dJTkciLDE4KTpYayh0aGlzLGEsImdyYW50ZWQiPT09YixjLGQsZSxmKX07V2sucHJvdG90eXBlLndhaXRGb3JVcGRhdGU9ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9MDtjPGEubGVuZ3RoO2MrKylYayh0aGlzLGFbY10sdm9pZCAwLHZvaWQgMCwiIiwiIixiKX07CnZhciBYaz1mdW5jdGlvbihhLGIsYyxkLGUsZixnKXt2YXIgaD1hLmVudHJpZXMsbT1oW2JdfHx7fSxuPW0ucmVnaW9uLHA9ZCYmayhkKT9kLnRvVXBwZXJDYXNlKCk6dm9pZCAwO2U9ZS50b1VwcGVyQ2FzZSgpO2Y9Zi50b1VwcGVyQ2FzZSgpO2lmKFlrKHAsbixlLGYpKXt2YXIgcT0hIShnJiYwPGcmJnZvaWQgMD09PW0udXBkYXRlKSxyPXtyZWdpb246cCxkZWNsYXJlX3JlZ2lvbjptLmRlY2xhcmVfcmVnaW9uLGltcGxpY2l0Om0uaW1wbGljaXQsZGVmYXVsdDp2b2lkIDAhPT1jP2M6bS5kZWZhdWx0LGRlY2xhcmU6bS5kZWNsYXJlLHVwZGF0ZTptLnVwZGF0ZSxxdWlldDpxfTtpZigiIiE9PWV8fCExIT09bS5kZWZhdWx0KWhbYl09cjtxJiZ6LnNldFRpbWVvdXQoZnVuY3Rpb24oKXtoW2JdPT09ciYmci5xdWlldCYmKEFiKCJUQUdHSU5HIiwyKSxhLndhaXRQZXJpb2RUaW1lZE91dD0hMCxhLmNsZWFyVGltZW91dChiLHZvaWQgMCksYS5ub3RpZnlMaXN0ZW5lcnMoKSl9LGcpfX07CmFhPVdrLnByb3RvdHlwZTthYS5jbGVhclRpbWVvdXQ9ZnVuY3Rpb24oYSxiKXt2YXIgYz1bYV0sZDtmb3IoZCBpbiBTaylTay5oYXNPd25Qcm9wZXJ0eShkKSYmU2tbZF09PT1hJiZjLnB1c2goZCk7dmFyIGU9dGhpcy5lbnRyaWVzW2FdfHx7fSxmPXRoaXMuZ2V0Q29uc2VudFN0YXRlKGEpO2lmKGUucXVpZXQpe2UucXVpZXQ9ITE7Zm9yKHZhciBnPWZhKGMpLGg9Zy5uZXh0KCk7IWguZG9uZTtoPWcubmV4dCgpKVprKHRoaXMsaC52YWx1ZSl9ZWxzZSBpZih2b2lkIDAhPT1iJiZmIT09Yilmb3IodmFyIG09ZmEoYyksbj1tLm5leHQoKTshbi5kb25lO249bS5uZXh0KCkpWmsodGhpcyxuLnZhbHVlKX07CmFhLnVwZGF0ZT1mdW5jdGlvbihhLGIpe3RoaXMudXNlZERlZmF1bHR8fHRoaXMudXNlZERlY2xhcmV8fHRoaXMudXNlZFVwZGF0ZXx8IXRoaXMuYWNjZXNzZWRBbnl8fCh0aGlzLndhc1NldExhdGU9ITApO3RoaXMudXNlZFVwZGF0ZT10aGlzLmFjdGl2ZT0hMDtpZih2b2lkIDAhPWIpe3ZhciBjPXRoaXMuZ2V0Q29uc2VudFN0YXRlKGEpLGQ9dGhpcy5lbnRyaWVzOyhkW2FdPWRbYV18fHt9KS51cGRhdGU9ImdyYW50ZWQiPT09Yjt0aGlzLmNsZWFyVGltZW91dChhLGMpfX07CmFhLmRlY2xhcmU9ZnVuY3Rpb24oYSxiLGMsZCxlKXt0aGlzLnVzZWREZWNsYXJlPXRoaXMuYWN0aXZlPSEwO3ZhciBmPXRoaXMuZW50cmllcyxnPWZbYV18fHt9LGg9Zy5kZWNsYXJlX3JlZ2lvbixtPWMmJmsoYyk/Yy50b1VwcGVyQ2FzZSgpOnZvaWQgMDtkPWQudG9VcHBlckNhc2UoKTtlPWUudG9VcHBlckNhc2UoKTtpZihZayhtLGgsZCxlKSl7dmFyIG49e3JlZ2lvbjpnLnJlZ2lvbixkZWNsYXJlX3JlZ2lvbjptLGRlY2xhcmU6ImdyYW50ZWQiPT09YixpbXBsaWNpdDpnLmltcGxpY2l0LGRlZmF1bHQ6Zy5kZWZhdWx0LHVwZGF0ZTpnLnVwZGF0ZSxxdWlldDpnLnF1aWV0fTtpZigiIiE9PWR8fCExIT09Zy5kZWNsYXJlKWZbYV09bn19O2FhLmltcGxpY2l0PWZ1bmN0aW9uKGEsYil7dGhpcy51c2VkSW1wbGljaXQ9ITA7dmFyIGM9dGhpcy5lbnRyaWVzLGQ9Y1thXT1jW2FdfHx7fTshMSE9PWQuaW1wbGljaXQmJihkLmltcGxpY2l0PSJncmFudGVkIj09PWIpfTsKYWEuZ2V0Q29uc2VudFN0YXRlPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMuZW50cmllcyxjPWJbYV18fHt9LGQ9Yy51cGRhdGU7aWYodm9pZCAwIT09ZClyZXR1cm4gZD8xOjI7ZD1jLmRlZmF1bHQ7aWYodm9pZCAwIT09ZClyZXR1cm4gZD8xOjI7aWYoU2suaGFzT3duUHJvcGVydHkoYSkpe3ZhciBlPWJbU2tbYV1dfHx7fTtkPWUudXBkYXRlO2lmKHZvaWQgMCE9PWQpcmV0dXJuIGQ/MToyO2Q9ZS5kZWZhdWx0O2lmKHZvaWQgMCE9PWQpcmV0dXJuIGQ/MToyfWQ9Yy5kZWNsYXJlO2lmKHZvaWQgMCE9PWQpcmV0dXJuIGQ/MToyO2Q9Yy5pbXBsaWNpdDtyZXR1cm4gdm9pZCAwIT09ZD9kPzM6NDpVZigxOSkmJlVrLmhhc093blByb3BlcnR5KGEpPyhBYigiVEFHR0lORyIsMjIpLFVrW2FdPzM6NCk6MH07YWEuc2V0Q3BzPWZ1bmN0aW9uKCl7fTthYS5hZGRMaXN0ZW5lcj1mdW5jdGlvbihhLGIpe3RoaXMuaC5wdXNoKHtjb25zZW50VHlwZXM6YSxRbDpifSl9Owp2YXIgWms9ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9MDtjPGEuaC5sZW5ndGg7KytjKXt2YXIgZD1hLmhbY107SGEoZC5jb25zZW50VHlwZXMpJiYtMSE9PWQuY29uc2VudFR5cGVzLmluZGV4T2YoYikmJihkLlhqPSEwKX19O1drLnByb3RvdHlwZS5ub3RpZnlMaXN0ZW5lcnM9ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9MDtjPHRoaXMuaC5sZW5ndGg7KytjKXt2YXIgZD10aGlzLmhbY107aWYoZC5Yail7ZC5Yaj0hMTt0cnl7ZC5RbCh7Y29uc2VudEV2ZW50SWQ6YSxjb25zZW50UHJpb3JpdHlJZDpifSl9Y2F0Y2goZSl7fX19fTtmdW5jdGlvbiBZayhhLGIsYyxkKXtyZXR1cm4iIj09PWN8fGE9PT1kPyEwOmE9PT1jP2IhPT1kOiFhJiYhYn0KZnVuY3Rpb24gJGsoYSxiLGMpe3ZhciBkPWZqKCksZT1naigpLGY9VGtbYV18fHt9LGc9Zi5yZWdpb24saD1jJiZrKGMpP2MudG9VcHBlckNhc2UoKTp2b2lkIDA7ZD1kLnRvVXBwZXJDYXNlKCk7ZT1lLnRvVXBwZXJDYXNlKCk7aWYoWWsoaCxnLGQsZSkpe3ZhciBtPXtlbmFibGVkOiJncmFudGVkIj09PWIscmVnaW9uOmh9O2lmKCIiIT09ZHx8ITEhPT1mLmVuYWJsZWQpVGtbYV09bX19ZnVuY3Rpb24gYWwoYSl7dmFyIGI9VmsoKTtpZigiYWRfdXNlcl9kYXRhIj09PWEpaWYoVWYoMjIpKXt2YXIgYz1iLmdldENvbnNlbnRTdGF0ZSgiYWRfc3RvcmFnZSIpO2lmKDIhPT1jJiY0IT09YylyZXR1cm4gY31lbHNlIFVmKDIxKSYmKGE9ImFkX3N0b3JhZ2UiKTtyZXR1cm4gYi5nZXRDb25zZW50U3RhdGUoYSl9CnZhciBibD1mdW5jdGlvbihhKXtWaygpLmFjY2Vzc2VkQW55PSEwO3JldHVybihrKGEpP1thXTphKS5ldmVyeShmdW5jdGlvbihiKXtzd2l0Y2goYWwoYikpe2Nhc2UgMTpjYXNlIDM6cmV0dXJuITA7Y2FzZSAyOmNhc2UgNDpyZXR1cm4hMTtkZWZhdWx0OnJldHVybiEwfX0pfSxjbD1mdW5jdGlvbihhKXtWaygpLmFjY2Vzc2VkQW55PSEwO3JldHVybiBhbChhKX0sZGw9ZnVuY3Rpb24oKXt2YXIgYT17fSxiO2ZvcihiIGluIFRrKVRrLmhhc093blByb3BlcnR5KGIpJiYoYVtiXT17ZW5hYmxlZDpUa1tiXS5lbmFibGVkLHJlZ2lvbjpUa1tiXS5yZWdpb259KTtmb3IodmFyIGM9e30sZD1mYShPYmplY3Qua2V5cyhhKSksZT1kLm5leHQoKTshZS5kb25lO2U9ZC5uZXh0KCkpe3ZhciBmPWUudmFsdWU7Y1tmXT1hW2ZdLmVuYWJsZWR9cmV0dXJuIGN9LGVsPWZ1bmN0aW9uKGEpe3ZhciBiPVZrKCk7Yi5hY2Nlc3NlZEFueT0hMDtyZXR1cm4hKGIuZW50cmllc1thXXx8e30pLnF1aWV0fSxmbD0KZnVuY3Rpb24oKXtpZighUGsoKS5oKCkpcmV0dXJuITE7dmFyIGE9VmsoKTthLmFjY2Vzc2VkQW55PSEwO3JldHVybiBhLmFjdGl2ZX0sZ2w9ZnVuY3Rpb24oYSxiKXtpZihVZigyMSkpe2Zvcih2YXIgYz1bXSxkPWEuZmluZChmdW5jdGlvbihoKXtyZXR1cm4iYWRfc3RvcmFnZSI9PT1ofSksZT1mYShhKSxmPWUubmV4dCgpOyFmLmRvbmU7Zj1lLm5leHQoKSl7dmFyIGc9Zi52YWx1ZTtpZigiYWRfdXNlcl9kYXRhIj09PWcpe2lmKGQpY29udGludWU7Yy5wdXNoKCJhZF9zdG9yYWdlIil9Yy5wdXNoKGcpfVZrKCkuYWRkTGlzdGVuZXIoYyxiKX1lbHNlIFZrKCkuYWRkTGlzdGVuZXIoYSxiKX0saGw9ZnVuY3Rpb24oYSxiKXtWaygpLm5vdGlmeUxpc3RlbmVycyhhLGIpfSxpbD1mdW5jdGlvbihhLGIpe2Z1bmN0aW9uIGMoKXtmb3IodmFyIGU9MDtlPGIubGVuZ3RoO2UrKylpZighZWwoYltlXSkpcmV0dXJuITA7cmV0dXJuITF9aWYoYygpKXt2YXIgZD0hMTtnbChiLGZ1bmN0aW9uKGUpe2R8fApjKCl8fChkPSEwLGEoZSkpfSl9ZWxzZSBhKHt9KX0samw9ZnVuY3Rpb24oYSxiKXtmdW5jdGlvbiBjKCl7Zm9yKHZhciBoPVtdLG09MDttPGUubGVuZ3RoO20rKyl7dmFyIG49ZVttXTtibChuKSYmIWZbbl0mJmgucHVzaChuKX1yZXR1cm4gaH1mdW5jdGlvbiBkKGgpe2Zvcih2YXIgbT0wO208aC5sZW5ndGg7bSsrKWZbaFttXV09ITB9dmFyIGU9ayhiKT9bYl06YixmPXt9LGc9YygpO2cubGVuZ3RoIT09ZS5sZW5ndGgmJihkKGcpLGdsKGUsZnVuY3Rpb24oaCl7ZnVuY3Rpb24gbShxKXswIT09cS5sZW5ndGgmJihkKHEpLGguY29uc2VudFR5cGVzPXEsYShoKSl9dmFyIG49YygpO2lmKDAhPT1uLmxlbmd0aCl7dmFyIHA9T2JqZWN0LmtleXMoZikubGVuZ3RoO24ubGVuZ3RoK3A+PWUubGVuZ3RoP20obik6ei5zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7bShjKCkpfSw1MDApfX0pKX07ZnVuY3Rpb24ga2woKXt9ZnVuY3Rpb24gbGwoKXt9O3ZhciBtbD1bTi5nLkosTi5nLlIsTi5nLk4sTi5nLnhhXSxubCxvbCxwbD1mdW5jdGlvbihhKXtmb3IodmFyIGI9YVtOLmcuQWJdLGM9QXJyYXkuaXNBcnJheShiKT9iOltiXSxkPXtNZTowfTtkLk1lPGMubGVuZ3RoO2Q9e01lOmQuTWV9LCsrZC5NZSlsKGEsZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKGYsZyl7aWYoZiE9PU4uZy5BYil7dmFyIGg9Y1tlLk1lXSxtPWZqKCksbj1naigpO1JrPSEwO1FrJiZBYigiVEFHR0lORyIsMjApO1ZrKCkuZGVjbGFyZShmLGcsaCxtLG4pfX19KGQpKX0scWw9ZnVuY3Rpb24oYSl7UigzNykmJighb2wmJm5sJiZLaygiY3JjIiksb2w9ITApO3ZhciBiPWFbTi5nLkFiXTtiJiZNKDQwKTt2YXIgYz1hW04uZy5qZl07YyYmTSg0MSk7Zm9yKHZhciBkPUhhKGIpP2I6W2JdLGU9e05lOjB9O2UuTmU8ZC5sZW5ndGg7ZT17TmU6ZS5OZX0sKytlLk5lKWwoYSxmdW5jdGlvbihmKXtyZXR1cm4gZnVuY3Rpb24oZyxoKXtpZihnIT09Ti5nLkFiJiZnIT09Ti5nLmpmKXt2YXIgbT0KZFtmLk5lXSxuPU51bWJlcihjKSxwPWZqKCkscT1naigpO1FrPSEwO1JrJiZBYigiVEFHR0lORyIsMjApO1ZrKCkuZGVmYXVsdChnLGgsbSxwLHEsbil9fX0oZSkpfSxybD1mdW5jdGlvbihhLGIpe25sPSEwO2woYSxmdW5jdGlvbihjLGQpe1FrPSEwO1JrJiZBYigiVEFHR0lORyIsMjApO1ZrKCkudXBkYXRlKGMsZCl9KTtobChiLmV2ZW50SWQsYi5wcmlvcml0eUlkKX0sc2w9ZnVuY3Rpb24oYSl7Zm9yKHZhciBiPWFbTi5nLkFiXSxjPUFycmF5LmlzQXJyYXkoYik/YjpbYl0sZD17cmQ6MH07ZC5yZDxjLmxlbmd0aDtkPXtyZDpkLnJkfSwrK2QucmQpYS5oYXNPd25Qcm9wZXJ0eShOLmcubWcpJiZsKHFpLGZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbihmKXskayhmLGFbTi5nLm1nXSxjW2UucmRdKX19KGQpKSxsKGEsZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKGYsZyl7ZiE9PU4uZy5BYiYmZiE9PU4uZy5tZyYmJGsoZixnLGNbZS5yZF0pfX0oZCkpfSx0bD1mdW5jdGlvbihhKXtBcnJheS5pc0FycmF5KGEpfHwKKGE9W2FdKTtyZXR1cm4gYS5ldmVyeShmdW5jdGlvbihiKXtyZXR1cm4gYmwoYil9KX0sdWw9ZnVuY3Rpb24oYSxiKXtnbChhLGIpfSx2bD1mdW5jdGlvbihhLGIpe2psKGEsYil9LHdsPWZ1bmN0aW9uKGEsYil7aWwoYSxiKX0seGw9ZnVuY3Rpb24oKXt2YXIgYT1bTi5nLkosTi5nLnhhLE4uZy5OXTtWaygpLndhaXRGb3JVcGRhdGUoYSw1MDApfSx5bD1mdW5jdGlvbihhKXtmb3IodmFyIGI9ZmEoYSksYz1iLm5leHQoKTshYy5kb25lO2M9Yi5uZXh0KCkpe3ZhciBkPWMudmFsdWU7VmsoKS5jbGVhclRpbWVvdXQoZCx2b2lkIDApfWhsKCl9O3ZhciB6bD1mdW5jdGlvbigpe2Z1bmN0aW9uIGEoYil7c2kucHNjZGw9Yn1pZih2b2lkIDA9PT1zaS5wc2NkbCl0cnl7ImNvb2tpZURlcHJlY2F0aW9uTGFiZWwiaW4gQmM/KGEoInBlbmRpbmciKSxCYy5jb29raWVEZXByZWNhdGlvbkxhYmVsLmdldFZhbHVlKCkudGhlbihhKSk6YSgibm9hcGkiKX1jYXRjaChiKXthKCJlcnJvciIpfX07dmFyIEFsPS9bQS1aXSsvLEJsPS9ccy8sQ2w9ZnVuY3Rpb24oYSxiKXtpZihrKGEpKXthPVJhKGEpO3ZhciBjPWEuaW5kZXhPZigiLSIpO2lmKCEoMD5jKSl7dmFyIGQ9YS5zdWJzdHJpbmcoMCxjKTtpZihBbC50ZXN0KGQpKXt2YXIgZT1hLnN1YnN0cmluZyhjKzEpLGY7aWYoYil7dmFyIGc9ZnVuY3Rpb24obil7dmFyIHA9bi5pbmRleE9mKCIvIik7cmV0dXJuIDA+cD9bbl06W24uc3Vic3RyaW5nKDAscCksbi5zdWJzdHJpbmcocCsxKV19O2Y9ZyhlKTtpZigiREMiPT09ZCYmMj09PWYubGVuZ3RoKXt2YXIgaD1nKGZbMV0pOzI9PT1oLmxlbmd0aCYmKGZbMV09aFswXSxmLnB1c2goaFsxXSkpfX1lbHNle2Y9ZS5zcGxpdCgiLyIpO2Zvcih2YXIgbT0wO208Zi5sZW5ndGg7bSsrKWlmKCFmW21dfHxCbC50ZXN0KGZbbV0pJiYoIkFXIiE9PWR8fDEhPT1tKSlyZXR1cm59cmV0dXJue2lkOmEscHJlZml4OmQsYmE6ZCsiLSIrZlswXSxPOmZ9fX19fSxFbD1mdW5jdGlvbihhLGIpe2Zvcih2YXIgYz0Ke30sZD0wO2Q8YS5sZW5ndGg7KytkKXt2YXIgZT1DbChhW2RdLGIpO2UmJihjW2UuaWRdPWUpfURsKGMpO3ZhciBmPVtdO2woYyxmdW5jdGlvbihnLGgpe2YucHVzaChoKX0pO3JldHVybiBmfTtmdW5jdGlvbiBEbChhKXt2YXIgYj1bXSxjO2ZvcihjIGluIGEpaWYoYS5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9YVtjXTsiQVciPT09ZC5wcmVmaXgmJmQuT1sxXSYmYi5wdXNoKGQuYmEpfWZvcih2YXIgZT0wO2U8Yi5sZW5ndGg7KytlKWRlbGV0ZSBhW2JbZV1dfTt2YXIgRmw9IiIsR2w9W107ZnVuY3Rpb24gSGwoYSl7dmFyIGI9W107RmwmJmIucHVzaChbImRsIixlbmNvZGVVUklDb21wb25lbnQoRmwpXSk7MDxHbC5sZW5ndGgmJmIucHVzaChbInRkcCIsR2wuam9pbigiLiIpXSk7YS56YiYmKEZsPSIiLEdsLmxlbmd0aD0wLGIubGVuZ3RoJiZhLmRnKCkpO3JldHVybiBifTt2YXIgSWw9W107ZnVuY3Rpb24gSmwoYSl7aWYoIUlsLmxlbmd0aClyZXR1cm5bXTt2YXIgYj1bWyJ0ZGMiLElsLmpvaW4oIiEiKV1dO2EuemImJihhLmRnKCksSWwubGVuZ3RoPTApO3JldHVybiBifTt2YXIgS2w9e2luaXRpYWxpemVkOjExLGNvbXBsZXRlOjEyLGludGVyYWN0aXZlOjEzfSxMbD17fSxNbD1PYmplY3QuZnJlZXplKChMbFtOLmcuUWFdPSEwLExsKSksTmw9MDw9Qy5sb2NhdGlvbi5zZWFyY2guaW5kZXhPZigiP2d0bV9kaWFnbm9zdGljcz0iKXx8MDw9Qy5sb2NhdGlvbi5zZWFyY2guaW5kZXhPZigiJmd0bV9kaWFnbm9zdGljcz0iKSxQbD1mdW5jdGlvbihhLGIsYyl7aWYodGsmJiJjb25maWciPT09YSYmISgxPENsKGIpLk8ubGVuZ3RoKSl7dmFyIGQsZT1EYygiZ29vZ2xlX3RhZ19kYXRhIix7fSk7ZS50ZHx8KGUudGQ9e30pO2Q9ZS50ZDt2YXIgZj1uYihjLkYpO25iKGMuaCxmKTt2YXIgZz1bXSxoO2ZvcihoIGluIGQpe3ZhciBtPU9sKGRbaF0sZik7bS5sZW5ndGgmJihObCYmY29uc29sZS5sb2cobSksZy5wdXNoKGgpKX1nLmxlbmd0aCYmKGcubGVuZ3RoJiZ0ayYmSWwucHVzaChiKyIqIitnLmpvaW4oIi4iKSksQWIoIlRBR0dJTkciLEtsW0MucmVhZHlTdGF0ZV18fAoxNCkpO2RbYl09Zn19O2Z1bmN0aW9uIFFsKGEsYil7dmFyIGM9e30sZDtmb3IoZCBpbiBiKWIuaGFzT3duUHJvcGVydHkoZCkmJihjW2RdPSEwKTtmb3IodmFyIGUgaW4gYSlhLmhhc093blByb3BlcnR5KGUpJiYoY1tlXT0hMCk7cmV0dXJuIGN9ZnVuY3Rpb24gT2woYSxiLGMsZCl7Yz12b2lkIDA9PT1jP3t9OmM7ZD12b2lkIDA9PT1kPyIiOmQ7aWYoYT09PWIpcmV0dXJuW107dmFyIGU9ZnVuY3Rpb24ocSxyKXt2YXIgdD1yW3FdO3JldHVybiB2b2lkIDA9PT10P01sW3FdOnR9LGY7Zm9yKGYgaW4gUWwoYSxiKSl7dmFyIGc9KGQ/ZCsiLiI6IiIpK2YsaD1lKGYsYSksbT1lKGYsYiksbj0ib2JqZWN0Ij09PWpiKGgpfHwiYXJyYXkiPT09amIoaCkscD0ib2JqZWN0Ij09PWpiKG0pfHwiYXJyYXkiPT09amIobSk7aWYobiYmcClPbChoLG0sYyxnKTtlbHNlIGlmKG58fHB8fGghPT1tKWNbZ109ITB9cmV0dXJuIE9iamVjdC5rZXlzKGMpfTt2YXIgUmw9ZnVuY3Rpb24oYSxiLGMsZCxlLGYsZyxoLG0sbixwKXt0aGlzLmV2ZW50SWQ9YTt0aGlzLnByaW9yaXR5SWQ9Yjt0aGlzLmg9Yzt0aGlzLk09ZDt0aGlzLkM9ZTt0aGlzLkY9Zjt0aGlzLnM9Zzt0aGlzLmV2ZW50TWV0YWRhdGE9aDt0aGlzLm9uU3VjY2Vzcz1tO3RoaXMub25GYWlsdXJlPW47dGhpcy5pc0d0bUV2ZW50PXB9LFNsPWZ1bmN0aW9uKGEsYil7dmFyIGM9W107c3dpdGNoKGIpe2Nhc2UgMzpjLnB1c2goYS5oKTtjLnB1c2goYS5NKTtjLnB1c2goYS5DKTtjLnB1c2goYS5GKTtjLnB1c2goYS5zKTticmVhaztjYXNlIDI6Yy5wdXNoKGEuaCk7YnJlYWs7Y2FzZSAxOmMucHVzaChhLk0pO2MucHVzaChhLkMpO2MucHVzaChhLkYpO2MucHVzaChhLnMpO2JyZWFrO2Nhc2UgNDpjLnB1c2goYS5oKSxjLnB1c2goYS5NKSxjLnB1c2goYS5DKSxjLnB1c2goYS5GKX1yZXR1cm4gY30sVj1mdW5jdGlvbihhLGIsYyxkKXtmb3IodmFyIGU9ZmEoU2woYSx2b2lkIDA9PT1kPzM6CmQpKSxmPWUubmV4dCgpOyFmLmRvbmU7Zj1lLm5leHQoKSl7dmFyIGc9Zi52YWx1ZTtpZih2b2lkIDAhPT1nW2JdKXJldHVybiBnW2JdfXJldHVybiBjfSxUbD1mdW5jdGlvbihhKXtmb3IodmFyIGI9e30sYz1TbChhLDQpLGQ9ZmEoYyksZT1kLm5leHQoKTshZS5kb25lO2U9ZC5uZXh0KCkpZm9yKHZhciBmPU9iamVjdC5rZXlzKGUudmFsdWUpLGc9ZmEoZiksaD1nLm5leHQoKTshaC5kb25lO2g9Zy5uZXh0KCkpYltoLnZhbHVlXT0xO3JldHVybiBPYmplY3Qua2V5cyhiKX0sVWw9ZnVuY3Rpb24oYSxiLGMpe2Z1bmN0aW9uIGQobil7bGIobikmJmwobixmdW5jdGlvbihwLHEpe2Y9ITA7ZVtwXT1xfSl9dmFyIGU9e30sZj0hMSxnPVNsKGEsdm9pZCAwPT09Yz8zOmMpO2cucmV2ZXJzZSgpO2Zvcih2YXIgaD1mYShnKSxtPWgubmV4dCgpOyFtLmRvbmU7bT1oLm5leHQoKSlkKG0udmFsdWVbYl0pO3JldHVybiBmP2U6dm9pZCAwfSxWbD1mdW5jdGlvbihhKXtmb3IodmFyIGI9W04uZy5UYywKTi5nLlBjLE4uZy5RYyxOLmcuUmMsTi5nLlNjLE4uZy5VYyxOLmcuVmNdLGM9U2woYSwzKSxkPWZhKGMpLGU9ZC5uZXh0KCk7IWUuZG9uZTtlPWQubmV4dCgpKXtmb3IodmFyIGY9ZS52YWx1ZSxnPXt9LGg9ITEsbT1mYShiKSxuPW0ubmV4dCgpOyFuLmRvbmU7bj1tLm5leHQoKSl7dmFyIHA9bi52YWx1ZTt2b2lkIDAhPT1mW3BdJiYoZ1twXT1mW3BdLGg9ITApfXZhciBxPWg/Zzp2b2lkIDA7aWYocSlyZXR1cm4gcX1yZXR1cm57fX0sV2w9ZnVuY3Rpb24oYSxiKXt0aGlzLkVmPWE7dGhpcy5GZj1iO3RoaXMuQz17fTt0aGlzLlpiPXt9O3RoaXMuaD17fTt0aGlzLkY9e307dGhpcy5uZD17fTt0aGlzLlliPXt9O3RoaXMucz17fTt0aGlzLkVhPWZ1bmN0aW9uKCl7fTt0aGlzLlc9ZnVuY3Rpb24oKXt9O3RoaXMuTT0hMX0sWGw9ZnVuY3Rpb24oYSxiKXthLkM9YjtyZXR1cm4gYX0sWWw9ZnVuY3Rpb24oYSxiKXthLlpiPWI7cmV0dXJuIGF9LFpsPWZ1bmN0aW9uKGEsYil7YS5oPWI7cmV0dXJuIGF9LAokbD1mdW5jdGlvbihhLGIpe2EuRj1iO3JldHVybiBhfSxhbT1mdW5jdGlvbihhLGIpe2EubmQ9YjtyZXR1cm4gYX0sYm09ZnVuY3Rpb24oYSxiKXthLlliPWI7cmV0dXJuIGF9LGNtPWZ1bmN0aW9uKGEsYil7YS5zPWJ8fHt9O3JldHVybiBhfSxkbT1mdW5jdGlvbihhLGIpe2EuRWE9YjtyZXR1cm4gYX0sZW09ZnVuY3Rpb24oYSxiKXthLlc9YjtyZXR1cm4gYX0sZm09ZnVuY3Rpb24oYSxiKXthLk09YjtyZXR1cm4gYX0sZ209ZnVuY3Rpb24oYSl7cmV0dXJuIG5ldyBSbChhLkVmLGEuRmYsYS5DLGEuWmIsYS5oLGEuRixhLlliLGEucyxhLkVhLGEuVyxhLk0pfTt2YXIgaG09e307ZnVuY3Rpb24gaW0oYSxiLGMpe3RrJiZ2b2lkIDAhPT1hJiYoaG1bYV09aG1bYV18fFtdLGhtW2FdLnB1c2goYytiKSxFayhhKSl9ZnVuY3Rpb24gam0oYSl7dmFyIGI9YS5ldmVudElkLGM9YS56YixkPVtdLGU9aG1bYl18fFtdO2UubGVuZ3RoJiZkLnB1c2goWyJlcHIiLGUuam9pbigiLiIpXSk7YyYmZGVsZXRlIGhtW2JdO3JldHVybiBkfTt2YXIgbG09ZnVuY3Rpb24oYSxiKXt2YXIgYz1DbChWaihhKSwhMCk7YyYma20ucmVnaXN0ZXIoYyxiKX0sbW09ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9Q2woYyxkLmlzR3RtRXZlbnQpO2UmJmttLnB1c2goImV2ZW50IixbYixhXSxlLGQpfSxubT1mdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1DbChjLGQuaXNHdG1FdmVudCk7ZSYma20ucHVzaCgiZ2V0IixbYSxiXSxlLGQpfSxwbT1mdW5jdGlvbihhKXt2YXIgYj1DbChWaihhKSwhMCksYztiP2M9b20oa20sYikuaDpjPXt9O3JldHVybiBjfSxxbT1mdW5jdGlvbihhLGIpe3ZhciBjPUNsKFZqKGEpLCEwKTtpZihjKXt2YXIgZD1rbSxlPW5iKGIpO25iKG9tKGQsYykuaCxlKTtvbShkLGMpLmg9ZX19LHJtPWZ1bmN0aW9uKCl7dGhpcy5zdGF0dXM9MTt0aGlzLk09e307dGhpcy5oPXt9O3RoaXMucz17fTt0aGlzLlc9bnVsbDt0aGlzLkY9e307dGhpcy5DPSExfSxzbT1mdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1UYSgpO3RoaXMudHlwZT0KYTt0aGlzLkM9ZTt0aGlzLmg9Yjt0aGlzLnM9Yzt0aGlzLm1lc3NhZ2VDb250ZXh0PWR9LHRtPWZ1bmN0aW9uKCl7dGhpcy5zPXt9O3RoaXMuQz17fTt0aGlzLmg9W119LG9tPWZ1bmN0aW9uKGEsYil7dmFyIGM9Yi5iYTtyZXR1cm4gYS5zW2NdPWEuc1tjXXx8bmV3IHJtfSx1bT1mdW5jdGlvbihhLGIsYyxkKXtpZihkLmgpe3ZhciBlPW9tKGEsZC5oKSxmPWUuVztpZihmKXt2YXIgZz1uYihjKSxoPW5iKGUuTVtkLmguaWRdKSxtPW5iKGUuRiksbj1uYihlLmgpLHA9bmIoYS5DKSxxPXt9O2lmKHRrKXRyeXtxPW5iKFBpKX1jYXRjaCh2KXtNKDcyKX12YXIgcj1kLmgucHJlZml4LHQ9ZnVuY3Rpb24odil7aW0oZC5tZXNzYWdlQ29udGV4dC5ldmVudElkLHIsdil9LHU9Z20oZm0oZW0oZG0oY20oYW0oJGwoYm0oWmwoWWwoWGwobmV3IFdsKGQubWVzc2FnZUNvbnRleHQuZXZlbnRJZCxkLm1lc3NhZ2VDb250ZXh0LnByaW9yaXR5SWQpLGcpLGgpLG0pLG4pLHApLHEpLGQubWVzc2FnZUNvbnRleHQuZXZlbnRNZXRhZGF0YSksCmZ1bmN0aW9uKCl7aWYodCl7dmFyIHY9dDt0PXZvaWQgMDt2KCIyIik7aWYoZC5tZXNzYWdlQ29udGV4dC5vblN1Y2Nlc3MpZC5tZXNzYWdlQ29udGV4dC5vblN1Y2Nlc3MoKX19KSxmdW5jdGlvbigpe2lmKHQpe3ZhciB2PXQ7dD12b2lkIDA7digiMyIpO2lmKGQubWVzc2FnZUNvbnRleHQub25GYWlsdXJlKWQubWVzc2FnZUNvbnRleHQub25GYWlsdXJlKCl9fSksISFkLm1lc3NhZ2VDb250ZXh0LmlzR3RtRXZlbnQpKTt0cnl7aW0oZC5tZXNzYWdlQ29udGV4dC5ldmVudElkLHIsIjEiKSxQbChkLnR5cGUsZC5oLmlkLHUpLGYoZC5oLmlkLGIsZC5DLHUpfWNhdGNoKHYpe2ltKGQubWVzc2FnZUNvbnRleHQuZXZlbnRJZCxyLCI0Iil9fX19O3RtLnByb3RvdHlwZS5yZWdpc3Rlcj1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9b20odGhpcyxhKTszIT09ZC5zdGF0dXMmJihkLlc9YixkLnN0YXR1cz0zLGMmJihuYihkLmgsYyksZC5oPWMpLHRoaXMuZmx1c2goKSl9Owp0bS5wcm90b3R5cGUucHVzaD1mdW5jdGlvbihhLGIsYyxkKXt2b2lkIDAhPT1jJiYoMT09PW9tKHRoaXMsYykuc3RhdHVzJiYob20odGhpcyxjKS5zdGF0dXM9Mix0aGlzLnB1c2goInJlcXVpcmUiLFt7fV0sYyx7fSkpLG9tKHRoaXMsYykuQyYmKGQuZGVmZXJyYWJsZT0hMSkpO3RoaXMuaC5wdXNoKG5ldyBzbShhLGMsYixkKSk7ZC5kZWZlcnJhYmxlfHx0aGlzLmZsdXNoKCl9Owp0bS5wcm90b3R5cGUuZmx1c2g9ZnVuY3Rpb24oYSl7Zm9yKHZhciBiPXRoaXMsYz1bXSxkPSExLGU9e307dGhpcy5oLmxlbmd0aDtlPXtCYzp2b2lkIDAsdWg6dm9pZCAwfSl7dmFyIGY9dGhpcy5oWzBdLGc9Zi5oO2lmKGYubWVzc2FnZUNvbnRleHQuZGVmZXJyYWJsZSkhZ3x8b20odGhpcyxnKS5DPyhmLm1lc3NhZ2VDb250ZXh0LmRlZmVycmFibGU9ITEsdGhpcy5oLnB1c2goZikpOmMucHVzaChmKSx0aGlzLmguc2hpZnQoKTtlbHNle3N3aXRjaChmLnR5cGUpe2Nhc2UgInJlcXVpcmUiOmlmKDMhPT1vbSh0aGlzLGcpLnN0YXR1cyYmIWEpe3RoaXMuaC5wdXNoLmFwcGx5KHRoaXMuaCxjKTtyZXR1cm59YnJlYWs7Y2FzZSAic2V0IjpsKGYuc1swXSxmdW5jdGlvbihyLHQpe25iKCRhKHIsdCksYi5DKX0pO2JyZWFrO2Nhc2UgImNvbmZpZyI6dmFyIGg9b20odGhpcyxnKTtlLkJjPXt9O2woZi5zWzBdLGZ1bmN0aW9uKHIpe3JldHVybiBmdW5jdGlvbih0LHUpe25iKCRhKHQsdSksci5CYyl9fShlKSk7CnZhciBtPSEhZS5CY1tOLmcuWGJdO2RlbGV0ZSBlLkJjW04uZy5YYl07dmFyIG49Zy5iYT09PWcuaWQ7bXx8KG4/aC5GPXt9OmguTVtnLmlkXT17fSk7aC5DJiZtfHx1bSh0aGlzLE4uZy5kYSxlLkJjLGYpO2guQz0hMDtuP25iKGUuQmMsaC5GKToobmIoZS5CYyxoLk1bZy5pZF0pLE0oNzApKTtkPSEwO2JyZWFrO2Nhc2UgImV2ZW50IjplLnVoPXt9O2woZi5zWzBdLGZ1bmN0aW9uKHIpe3JldHVybiBmdW5jdGlvbih0LHUpe25iKCRhKHQsdSksci51aCl9fShlKSk7dW0odGhpcyxmLnNbMV0sZS51aCxmKTticmVhaztjYXNlICJnZXQiOnZhciBwPXt9LHE9KHBbTi5nLnJiXT1mLnNbMF0scFtOLmcuRGJdPWYuc1sxXSxwKTt1bSh0aGlzLE4uZy5TYSxxLGYpfXRoaXMuaC5zaGlmdCgpO3ZtKHRoaXMsZil9fXRoaXMuaC5wdXNoLmFwcGx5KHRoaXMuaCxjKTtkJiZ0aGlzLmZsdXNoKCl9Owp2YXIgdm09ZnVuY3Rpb24oYSxiKXtpZigicmVxdWlyZSIhPT1iLnR5cGUpaWYoYi5oKWZvcih2YXIgYz1vbShhLGIuaCkuc1tiLnR5cGVdfHxbXSxkPTA7ZDxjLmxlbmd0aDtkKyspY1tkXSgpO2Vsc2UgZm9yKHZhciBlIGluIGEucylpZihhLnMuaGFzT3duUHJvcGVydHkoZSkpe3ZhciBmPWEuc1tlXTtpZihmJiZmLnMpZm9yKHZhciBnPWYuc1tiLnR5cGVdfHxbXSxoPTA7aDxnLmxlbmd0aDtoKyspZ1toXSgpfX0sa209bmV3IHRtO2Z1bmN0aW9uIHdtKGEsYil7aWYoIiI9PT1hKXJldHVybiBiO3ZhciBjPU51bWJlcihhKTtyZXR1cm4gaXNOYU4oYyk/YjpjfTt2YXIgeG09ZnVuY3Rpb24oYSxiKXt2YXIgYz1mdW5jdGlvbigpe307Yy5wcm90b3R5cGU9YS5wcm90b3R5cGU7dmFyIGQ9bmV3IGM7YS5hcHBseShkLEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywxKSk7cmV0dXJuIGR9LHltPWZ1bmN0aW9uKGEpe3ZhciBiPWE7cmV0dXJuIGZ1bmN0aW9uKCl7aWYoYil7dmFyIGM9YjtiPW51bGw7YygpfX19O3ZhciB6bT1mdW5jdGlvbihhLGIsYyl7YS5hZGRFdmVudExpc3RlbmVyJiZhLmFkZEV2ZW50TGlzdGVuZXIoYixjLCExKX07ZnVuY3Rpb24gQW0oKXtyZXR1cm4gTmI/ISFVYiYmISFVYi5wbGF0Zm9ybTohMX1mdW5jdGlvbiBCbSgpe3JldHVybiBYYigiaVBob25lIikmJiFYYigiaVBvZCIpJiYhWGIoImlQYWQiKX1mdW5jdGlvbiBDbSgpe0JtKCl8fFhiKCJpUGFkIil8fFhiKCJpUG9kIil9O1piKCk7WWIoKXx8WGIoIlRyaWRlbnQiKXx8WGIoIk1TSUUiKTtYYigiRWRnZSIpOyFYYigiR2Vja28iKXx8LTEhPVRiKCkudG9Mb3dlckNhc2UoKS5pbmRleE9mKCJ3ZWJraXQiKSYmIVhiKCJFZGdlIil8fFhiKCJUcmlkZW50Iil8fFhiKCJNU0lFIil8fFhiKCJFZGdlIik7LTEhPVRiKCkudG9Mb3dlckNhc2UoKS5pbmRleE9mKCJ3ZWJraXQiKSYmIVhiKCJFZGdlIikmJlhiKCJNb2JpbGUiKTtBbSgpfHxYYigiTWFjaW50b3NoIik7QW0oKXx8WGIoIldpbmRvd3MiKTsoQW0oKT8iTGludXgiPT09VWIucGxhdGZvcm06WGIoIkxpbnV4IikpfHxBbSgpfHxYYigiQ3JPUyIpO0FtKCl8fFhiKCJBbmRyb2lkIik7Qm0oKTtYYigiaVBhZCIpO1hiKCJpUG9kIik7Q20oKTtUYigpLnRvTG93ZXJDYXNlKCkuaW5kZXhPZigia2Fpb3MiKTt2YXIgRG09ZnVuY3Rpb24oYSxiLGMsZCl7Zm9yKHZhciBlPWIsZj1jLmxlbmd0aDswPD0oZT1hLmluZGV4T2YoYyxlKSkmJmU8ZDspe3ZhciBnPWEuY2hhckNvZGVBdChlLTEpO2lmKDM4PT1nfHw2Mz09Zyl7dmFyIGg9YS5jaGFyQ29kZUF0KGUrZik7aWYoIWh8fDYxPT1ofHwzOD09aHx8MzU9PWgpcmV0dXJuIGV9ZSs9ZisxfXJldHVybi0xfSxFbT0vI3wkLyxGbT1mdW5jdGlvbihhLGIpe3ZhciBjPWEuc2VhcmNoKEVtKSxkPURtKGEsMCxiLGMpO2lmKDA+ZClyZXR1cm4gbnVsbDt2YXIgZT1hLmluZGV4T2YoIiYiLGQpO2lmKDA+ZXx8ZT5jKWU9YztkKz1iLmxlbmd0aCsxO3JldHVybiBkZWNvZGVVUklDb21wb25lbnQoYS5zbGljZShkLC0xIT09ZT9lOjApLnJlcGxhY2UoL1wrL2csIiAiKSl9LEdtPS9bPyZdKCR8IykvLEhtPWZ1bmN0aW9uKGEsYixjKXtmb3IodmFyIGQsZT1hLnNlYXJjaChFbSksZj0wLGcsaD1bXTswPD0oZz1EbShhLGYsYixlKSk7KWgucHVzaChhLnN1YnN0cmluZyhmLApnKSksZj1NYXRoLm1pbihhLmluZGV4T2YoIiYiLGcpKzF8fGUsZSk7aC5wdXNoKGEuc2xpY2UoZikpO2Q9aC5qb2luKCIiKS5yZXBsYWNlKEdtLCIkMSIpO3ZhciBtLG49bnVsbCE9Yz8iPSIrZW5jb2RlVVJJQ29tcG9uZW50KFN0cmluZyhjKSk6IiI7dmFyIHA9YituO2lmKHApe3ZhciBxLHI9ZC5pbmRleE9mKCIjIik7MD5yJiYocj1kLmxlbmd0aCk7dmFyIHQ9ZC5pbmRleE9mKCI/IiksdTswPnR8fHQ+cj8odD1yLHU9IiIpOnU9ZC5zdWJzdHJpbmcodCsxLHIpO3E9W2Quc2xpY2UoMCx0KSx1LGQuc2xpY2UocildO3ZhciB2PXFbMV07cVsxXT1wP3Y/disiJiIrcDpwOnY7bT1xWzBdKyhxWzFdPyI/IitxWzFdOiIiKStxWzJdfWVsc2UgbT1kO3JldHVybiBtfTt2YXIgSW09ZnVuY3Rpb24oYSl7dHJ5e3ZhciBiO2lmKGI9ISFhJiZudWxsIT1hLmxvY2F0aW9uLmhyZWYpYTp7dHJ5e05rKGEuZm9vKTtiPSEwO2JyZWFrIGF9Y2F0Y2goYyl7fWI9ITF9cmV0dXJuIGJ9Y2F0Y2goYyl7cmV0dXJuITF9fSxKbT1mdW5jdGlvbihhLGIpe2lmKGEpZm9yKHZhciBjIGluIGEpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGEsYykmJmIoYVtjXSxjLGEpfTtmdW5jdGlvbiBLbShhKXtpZighYXx8IUMuaGVhZClyZXR1cm4gbnVsbDt2YXIgYj1MbSgiTUVUQSIpO0MuaGVhZC5hcHBlbmRDaGlsZChiKTtiLmh0dHBFcXVpdj0ib3JpZ2luLXRyaWFsIjtiLmNvbnRlbnQ9YTtyZXR1cm4gYn0KdmFyIE1tPWZ1bmN0aW9uKGEpe2lmKHoudG9wPT16KXJldHVybiAwO2lmKHZvaWQgMD09PWE/MDphKXt2YXIgYj16LmxvY2F0aW9uLmFuY2VzdG9yT3JpZ2lucztpZihiKXJldHVybiBiW2IubGVuZ3RoLTFdPT16LmxvY2F0aW9uLm9yaWdpbj8xOjJ9cmV0dXJuIEltKHoudG9wKT8xOjJ9LExtPWZ1bmN0aW9uKGEsYil7Yj12b2lkIDA9PT1iP2RvY3VtZW50OmI7cmV0dXJuIGIuY3JlYXRlRWxlbWVudChTdHJpbmcoYSkudG9Mb3dlckNhc2UoKSl9O2Z1bmN0aW9uIE5tKGEsYixjLGQpe2Q9dm9pZCAwPT09ZD8hMTpkO2EuZ29vZ2xlX2ltYWdlX3JlcXVlc3RzfHwoYS5nb29nbGVfaW1hZ2VfcmVxdWVzdHM9W10pO3ZhciBlPUxtKCJJTUciLGEuZG9jdW1lbnQpO2lmKGMpe3ZhciBmPWZ1bmN0aW9uKCl7aWYoYyl7dmFyIGc9YS5nb29nbGVfaW1hZ2VfcmVxdWVzdHMsaD1EYihnLGUpOzA8PWgmJkFycmF5LnByb3RvdHlwZS5zcGxpY2UuY2FsbChnLGgsMSl9ZS5yZW1vdmVFdmVudExpc3RlbmVyJiZlLnJlbW92ZUV2ZW50TGlzdGVuZXIoImxvYWQiLGYsITEpO2UucmVtb3ZlRXZlbnRMaXN0ZW5lciYmZS5yZW1vdmVFdmVudExpc3RlbmVyKCJlcnJvciIsZiwhMSl9O3ptKGUsImxvYWQiLGYpO3ptKGUsImVycm9yIixmKX1kJiYoZS5hdHRyaWJ1dGlvblNyYz0iIik7ZS5zcmM9YjthLmdvb2dsZV9pbWFnZV9yZXF1ZXN0cy5wdXNoKGUpfQp2YXIgUG09ZnVuY3Rpb24oYSl7dmFyIGI7Yj12b2lkIDA9PT1iPyExOmI7dmFyIGM9Imh0dHBzOi8vcGFnZWFkMi5nb29nbGVzeW5kaWNhdGlvbi5jb20vcGFnZWFkL2dlbl8yMDQ/aWQ9dGNmZSI7Sm0oYSxmdW5jdGlvbihkLGUpe2lmKGR8fDA9PT1kKWMrPSImIitlKyI9IitlbmNvZGVVUklDb21wb25lbnQoIiIrZCl9KTtPbShjLGIpfSxPbT1mdW5jdGlvbihhLGIpe3ZhciBjPXdpbmRvdyxkO2I9dm9pZCAwPT09Yj8hMTpiO2Q9dm9pZCAwPT09ZD8hMTpkO2lmKGMuZmV0Y2gpe3ZhciBlPXtrZWVwYWxpdmU6ITAsY3JlZGVudGlhbHM6ImluY2x1ZGUiLHJlZGlyZWN0OiJmb2xsb3ciLG1ldGhvZDoiZ2V0Iixtb2RlOiJuby1jb3JzIn07ZCYmKGUubW9kZT0iY29ycyIsInNldEF0dHJpYnV0aW9uUmVwb3J0aW5nImluIFhNTEh0dHBSZXF1ZXN0LnByb3RvdHlwZT9lLmF0dHJpYnV0aW9uUmVwb3J0aW5nPXtldmVudFNvdXJjZUVsaWdpYmxlOiJ0cnVlIix0cmlnZ2VyRWxpZ2libGU6ImZhbHNlIn06CmUuaGVhZGVycz17IkF0dHJpYnV0aW9uLVJlcG9ydGluZy1FbGlnaWJsZSI6ImV2ZW50LXNvdXJjZSJ9KTtjLmZldGNoKGEsZSl9ZWxzZSBObShjLGEsdm9pZCAwPT09Yj8hMTpiLHZvaWQgMD09PWQ/ITE6ZCl9O3ZhciBRbT1mdW5jdGlvbigpe307dmFyIFJtPWZ1bmN0aW9uKGEpe3ZvaWQgMCE9PWEuYWRkdGxDb25zZW50JiYic3RyaW5nIiE9PXR5cGVvZiBhLmFkZHRsQ29uc2VudCYmKGEuYWRkdGxDb25zZW50PXZvaWQgMCk7dm9pZCAwIT09YS5nZHByQXBwbGllcyYmImJvb2xlYW4iIT09dHlwZW9mIGEuZ2RwckFwcGxpZXMmJihhLmdkcHJBcHBsaWVzPXZvaWQgMCk7cmV0dXJuIHZvaWQgMCE9PWEudGNTdHJpbmcmJiJzdHJpbmciIT09dHlwZW9mIGEudGNTdHJpbmd8fHZvaWQgMCE9PWEubGlzdGVuZXJJZCYmIm51bWJlciIhPT10eXBlb2YgYS5saXN0ZW5lcklkPzI6YS5jbXBTdGF0dXMmJiJlcnJvciIhPT1hLmNtcFN0YXR1cz8wOjN9LFNtPWZ1bmN0aW9uKGEsYil7Yj12b2lkIDA9PT1iP3t9OmI7dGhpcy5zPWE7dGhpcy5oPW51bGw7dGhpcy5NPXt9O3RoaXMuRWE9MDt2YXIgYzt0aGlzLlc9bnVsbCE9KGM9Yi5tayk/Yzo1MDA7dmFyIGQ7dGhpcy5GPW51bGwhPShkPWIua28pP2Q6ITE7dGhpcy5DPW51bGx9O3NhKFNtLFFtKTsKdmFyIFVtPWZ1bmN0aW9uKGEpe3JldHVybiJmdW5jdGlvbiI9PT10eXBlb2YgYS5zLl9fdGNmYXBpfHxudWxsIT1UbShhKX07ClNtLnByb3RvdHlwZS5hZGRFdmVudExpc3RlbmVyPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMsYz17aW50ZXJuYWxCbG9ja09uRXJyb3JzOnRoaXMuRn0sZD15bShmdW5jdGlvbigpe3JldHVybiBhKGMpfSksZT0wOy0xIT09dGhpcy5XJiYoZT1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Yy50Y1N0cmluZz0idGN1bmF2YWlsYWJsZSI7Yy5pbnRlcm5hbEVycm9yU3RhdGU9MTtkKCl9LHRoaXMuVykpO3ZhciBmPWZ1bmN0aW9uKGcsaCl7Y2xlYXJUaW1lb3V0KGUpO2c/KGM9ZyxjLmludGVybmFsRXJyb3JTdGF0ZT1SbShjKSxjLmludGVybmFsQmxvY2tPbkVycm9ycz1iLkYsaCYmMD09PWMuaW50ZXJuYWxFcnJvclN0YXRlfHwoYy50Y1N0cmluZz0idGN1bmF2YWlsYWJsZSIsaHx8KGMuaW50ZXJuYWxFcnJvclN0YXRlPTMpKSk6KGMudGNTdHJpbmc9InRjdW5hdmFpbGFibGUiLGMuaW50ZXJuYWxFcnJvclN0YXRlPTMpO2EoYyl9O3RyeXtWbSh0aGlzLCJhZGRFdmVudExpc3RlbmVyIixmKX1jYXRjaChnKXtjLnRjU3RyaW5nPQoidGN1bmF2YWlsYWJsZSIsYy5pbnRlcm5hbEVycm9yU3RhdGU9MyxlJiYoY2xlYXJUaW1lb3V0KGUpLGU9MCksZCgpfX07U20ucHJvdG90eXBlLnJlbW92ZUV2ZW50TGlzdGVuZXI9ZnVuY3Rpb24oYSl7YSYmYS5saXN0ZW5lcklkJiZWbSh0aGlzLCJyZW1vdmVFdmVudExpc3RlbmVyIixudWxsLGEubGlzdGVuZXJJZCl9Owp2YXIgWG09ZnVuY3Rpb24oYSxiLGMpe3ZhciBkO2Q9dm9pZCAwPT09ZD8iNzU1IjpkO3ZhciBlO2E6e2lmKGEucHVibGlzaGVyJiZhLnB1Ymxpc2hlci5yZXN0cmljdGlvbnMpe3ZhciBmPWEucHVibGlzaGVyLnJlc3RyaWN0aW9uc1tiXTtpZih2b2lkIDAhPT1mKXtlPWZbdm9pZCAwPT09ZD8iNzU1IjpkXTticmVhayBhfX1lPXZvaWQgMH12YXIgZz1lO2lmKDA9PT1nKXJldHVybiExO3ZhciBoPWM7Mj09PWM/KGg9MCwyPT09ZyYmKGg9MSkpOjM9PT1jJiYoaD0xLDE9PT1nJiYoaD0wKSk7dmFyIG07aWYoMD09PWgpaWYoYS5wdXJwb3NlJiZhLnZlbmRvcil7dmFyIG49V20oYS52ZW5kb3IuY29uc2VudHMsdm9pZCAwPT09ZD8iNzU1IjpkKTttPW4mJiIxIj09PWImJmEucHVycG9zZU9uZVRyZWF0bWVudCYmIkNIIj09PWEucHVibGlzaGVyQ0M/ITA6biYmV20oYS5wdXJwb3NlLmNvbnNlbnRzLGIpfWVsc2UgbT0hMDtlbHNlIG09MT09PWg/YS5wdXJwb3NlJiZhLnZlbmRvcj9XbShhLnB1cnBvc2UubGVnaXRpbWF0ZUludGVyZXN0cywKYikmJldtKGEudmVuZG9yLmxlZ2l0aW1hdGVJbnRlcmVzdHMsdm9pZCAwPT09ZD8iNzU1IjpkKTohMDohMDtyZXR1cm4gbX0sV209ZnVuY3Rpb24oYSxiKXtyZXR1cm4hKCFhfHwhYVtiXSl9LFZtPWZ1bmN0aW9uKGEsYixjLGQpe2N8fChjPWZ1bmN0aW9uKCl7fSk7aWYoImZ1bmN0aW9uIj09PXR5cGVvZiBhLnMuX190Y2ZhcGkpe3ZhciBlPWEucy5fX3RjZmFwaTtlKGIsMixjLGQpfWVsc2UgaWYoVG0oYSkpe1ltKGEpO3ZhciBmPSsrYS5FYTthLk1bZl09YztpZihhLmgpe3ZhciBnPXt9O2EuaC5wb3N0TWVzc2FnZSgoZy5fX3RjZmFwaUNhbGw9e2NvbW1hbmQ6Yix2ZXJzaW9uOjIsY2FsbElkOmYscGFyYW1ldGVyOmR9LGcpLCIqIil9fWVsc2UgYyh7fSwhMSl9LFRtPWZ1bmN0aW9uKGEpe2lmKGEuaClyZXR1cm4gYS5oO3ZhciBiO2E6e2Zvcih2YXIgYz1hLnMsZD0wOzUwPmQ7KytkKXt2YXIgZTt0cnl7ZT0hKCFjLmZyYW1lc3x8IWMuZnJhbWVzLl9fdGNmYXBpTG9jYXRvcil9Y2F0Y2goaCl7ZT0KITF9aWYoZSl7Yj1jO2JyZWFrIGF9dmFyIGY7Yjp7dHJ5e3ZhciBnPWMucGFyZW50O2lmKGcmJmchPWMpe2Y9ZzticmVhayBifX1jYXRjaChoKXt9Zj1udWxsfWlmKCEoYz1mKSlicmVha31iPW51bGx9YS5oPWI7cmV0dXJuIGEuaH0sWW09ZnVuY3Rpb24oYSl7YS5DfHwoYS5DPWZ1bmN0aW9uKGIpe3RyeXt2YXIgYztjPSgic3RyaW5nIj09PXR5cGVvZiBiLmRhdGE/SlNPTi5wYXJzZShiLmRhdGEpOmIuZGF0YSkuX190Y2ZhcGlSZXR1cm47YS5NW2MuY2FsbElkXShjLnJldHVyblZhbHVlLGMuc3VjY2Vzcyl9Y2F0Y2goZCl7fX0sem0oYS5zLCJtZXNzYWdlIixhLkMpKX0sWm09ZnVuY3Rpb24oYSl7aWYoITE9PT1hLmdkcHJBcHBsaWVzKXJldHVybiEwO3ZvaWQgMD09PWEuaW50ZXJuYWxFcnJvclN0YXRlJiYoYS5pbnRlcm5hbEVycm9yU3RhdGU9Um0oYSkpO3JldHVybiJlcnJvciI9PT1hLmNtcFN0YXR1c3x8MCE9PWEuaW50ZXJuYWxFcnJvclN0YXRlP2EuaW50ZXJuYWxCbG9ja09uRXJyb3JzPwooUG0oe2U6U3RyaW5nKGEuaW50ZXJuYWxFcnJvclN0YXRlKX0pLCExKTohMDoibG9hZGVkIiE9PWEuY21wU3RhdHVzfHwidGNsb2FkZWQiIT09YS5ldmVudFN0YXR1cyYmInVzZXJhY3Rpb25jb21wbGV0ZSIhPT1hLmV2ZW50U3RhdHVzPyExOiEwfTt2YXIgJG09ezE6MCwzOjAsNDowLDc6Myw5OjMsMTA6M307ZnVuY3Rpb24gYW4oKXt2YXIgYT1zaS50Y2Z8fHt9O3JldHVybiBzaS50Y2Y9YX0KdmFyIGduPWZ1bmN0aW9uKCl7dmFyIGE9YW4oKSxiPW5ldyBTbSh6LHttazotMX0pO1VtKGIpJiYhYm4oKSYmIWNuKCkmJk0oMTI0KTtpZighYS5hY3RpdmUmJlVtKGIpKXtibigpJiYoYS5hY3RpdmU9ITAsYS5pYz17fSxhLmNtcElkPTAsYS50Y2ZQb2xpY3lWZXJzaW9uPTAsVmsoKS5hY3RpdmU9ITAsYS50Y1N0cmluZz0idGN1bmF2YWlsYWJsZSIpO3hsKCk7dHJ5e2IuYWRkRXZlbnRMaXN0ZW5lcihmdW5jdGlvbihjKXtpZigwIT09Yy5pbnRlcm5hbEVycm9yU3RhdGUpZG4oYSkseWwoW04uZy5KLE4uZy54YSxOLmcuTl0pLFZrKCkuYWN0aXZlPSEwO2Vsc2UgaWYoYS5nZHByQXBwbGllcz1jLmdkcHJBcHBsaWVzLGEuY21wSWQ9Yy5jbXBJZCxhLmVuYWJsZUFkdmVydGlzZXJDb25zZW50TW9kZT1jLmVuYWJsZUFkdmVydGlzZXJDb25zZW50TW9kZSxjbigpJiYoYS5hY3RpdmU9ITApLCFlbihjKXx8Ym4oKXx8Y24oKSl7YS50Y2ZQb2xpY3lWZXJzaW9uPWMudGNmUG9saWN5VmVyc2lvbjsKdmFyIGQ7aWYoITE9PT1jLmdkcHJBcHBsaWVzKXt2YXIgZT17fSxmO2ZvcihmIGluICRtKSRtLmhhc093blByb3BlcnR5KGYpJiYoZVtmXT0hMCk7ZD1lO2IucmVtb3ZlRXZlbnRMaXN0ZW5lcihjKX1lbHNlIGlmKGVuKGMpKXt2YXIgZz17fSxoO2ZvcihoIGluICRtKWlmKCRtLmhhc093blByb3BlcnR5KGgpKWlmKCIxIj09PWgpe3ZhciBtLG49YyxwPXtWbDohMH07cD12b2lkIDA9PT1wP3t9OnA7bT1abShuKT8hMT09PW4uZ2RwckFwcGxpZXM/ITA6InRjdW5hdmFpbGFibGUiPT09bi50Y1N0cmluZ3x8dm9pZCAwPT09bi5nZHByQXBwbGllcyYmIXAuVmx8fCJzdHJpbmciIT09dHlwZW9mIG4udGNTdHJpbmd8fCFuLnRjU3RyaW5nLmxlbmd0aD8hcC5vbzpYbShuLCIxIiwwKTohMTtnWyIxIl09bX1lbHNlIGdbaF09WG0oYyxoLCRtW2hdKTtkPWd9aWYoZCl7YS50Y1N0cmluZz1jLnRjU3RyaW5nfHwidGNlbXB0eSI7YS5pYz1kO3ZhciBxPXt9LHI9KHFbTi5nLkpdPWEuaWNbIjEiXT8iZ3JhbnRlZCI6CiJkZW5pZWQiLHEpOyEwIT09YS5nZHByQXBwbGllcz8oeWwoW04uZy5KLE4uZy54YSxOLmcuTl0pLFZrKCkuYWN0aXZlPSEwKToocltOLmcueGFdPWEuaWNbIjMiXSYmYS5pY1siNCJdPyJncmFudGVkIjoiZGVuaWVkIiwibnVtYmVyIj09PXR5cGVvZiBhLnRjZlBvbGljeVZlcnNpb24mJjQ8PWEudGNmUG9saWN5VmVyc2lvbj9yW04uZy5OXT1hLmljWyIxIl0mJmEuaWNbIjciXT8iZ3JhbnRlZCI6ImRlbmllZCI6eWwoW04uZy5OXSkscmwocix7ZXZlbnRJZDowfSx7Z2RwckFwcGxpZXM6YT9hLmdkcHJBcHBsaWVzOnZvaWQgMCx0Y1N0cmluZzpmbigpfHwiIn0pKX19ZWxzZSB5bChbTi5nLkosTi5nLnhhLE4uZy5OXSl9KX1jYXRjaChjKXtkbihhKSx5bChbTi5nLkosTi5nLnhhLE4uZy5OXSksVmsoKS5hY3RpdmU9ITB9fX07ZnVuY3Rpb24gZG4oYSl7YS50eXBlPSJlIjthLnRjU3RyaW5nPSJ0Y3VuYXZhaWxhYmxlIn0KZnVuY3Rpb24gZW4oYSl7cmV0dXJuInRjbG9hZGVkIj09PWEuZXZlbnRTdGF0dXN8fCJ1c2VyYWN0aW9uY29tcGxldGUiPT09YS5ldmVudFN0YXR1c3x8ImNtcHVpc2hvd24iPT09YS5ldmVudFN0YXR1c312YXIgYm49ZnVuY3Rpb24oKXtyZXR1cm4hMD09PXouZ3RhZ19lbmFibGVfdGNmX3N1cHBvcnR9O2Z1bmN0aW9uIGNuKCl7cmV0dXJuITA9PT1hbigpLmVuYWJsZUFkdmVydGlzZXJDb25zZW50TW9kZX0KdmFyIGZuPWZ1bmN0aW9uKCl7dmFyIGE9YW4oKTtpZihhLmFjdGl2ZSlyZXR1cm4gYS50Y1N0cmluZ30saG49ZnVuY3Rpb24oKXt2YXIgYT1hbigpO2lmKGEuYWN0aXZlJiZ2b2lkIDAhPT1hLmdkcHJBcHBsaWVzKXJldHVybiBhLmdkcHJBcHBsaWVzPyIxIjoiMCJ9LGpuPWZ1bmN0aW9uKGEpe2lmKCEkbS5oYXNPd25Qcm9wZXJ0eShTdHJpbmcoYSkpKXJldHVybiEwO3ZhciBiPWFuKCk7cmV0dXJuIGIuYWN0aXZlJiZiLmljPyEhYi5pY1tTdHJpbmcoYSldOiEwfSxrbj1mdW5jdGlvbigpe3JldHVybiBVbShuZXcgU20oeix7bWs6LTF9KSl9O3ZhciBsbj1bTi5nLkosTi5nLlIsTi5nLk4sTi5nLnhhXSxtbj17fSxubj0obW5bTi5nLkpdPTEsbW5bTi5nLlJdPTIsbW4pO2Z1bmN0aW9uIG9uKGEpe2lmKHZvaWQgMD09PWEpcmV0dXJuIDA7c3dpdGNoKFYoYSxOLmcua2EpKXtjYXNlIHZvaWQgMDpyZXR1cm4gMTtjYXNlICExOnJldHVybiAzO2RlZmF1bHQ6cmV0dXJuIDJ9fQp2YXIgcG49ZnVuY3Rpb24oYSl7dmFyIGI9b24oYSk7aWYoMz09PWIpcmV0dXJuITE7c3dpdGNoKGNsKE4uZy54YSkpe2Nhc2UgMTpjYXNlIDM6cmV0dXJuITA7Y2FzZSAyOnJldHVybiExO2Nhc2UgNDpyZXR1cm4gMj09PWI7Y2FzZSAwOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fSxxbj1mdW5jdGlvbigpe3JldHVybiBmbCgpfHwhYmwoTi5nLkopfHwhYmwoTi5nLlIpfSxybj1mdW5jdGlvbigpe3ZhciBhPXt9LGI7Zm9yKGIgaW4gbm4pbm4uaGFzT3duUHJvcGVydHkoYikmJihhW25uW2JdXT1jbChiKSk7cmV0dXJuIkcxIitOZShhWzFdfHwwKStOZShhWzJdfHwwKX0sc249e30sdG49KHNuW04uZy5KXT0wLHNuW04uZy5SXT0xLHNuW04uZy5OXT0yLHNuW04uZy54YV09Myxzbik7ZnVuY3Rpb24gdW4oYSl7c3dpdGNoKGEpe2Nhc2Ugdm9pZCAwOnJldHVybiAxO2Nhc2UgITA6cmV0dXJuIDM7Y2FzZSAhMTpyZXR1cm4gMjtkZWZhdWx0OnJldHVybiAwfX0KdmFyIHZuPWZ1bmN0aW9uKGEpe2Zvcih2YXIgYj0iMSIsYz0wO2M8bG4ubGVuZ3RoO2MrKyl7dmFyIGQ9YixlLGY9bG5bY10sZz1Ta1tmXTtlPXZvaWQgMD09PWc/MDp0bi5oYXNPd25Qcm9wZXJ0eShnKT8xMnx0bltnXTo4O3ZhciBoPVZrKCk7aC5hY2Nlc3NlZEFueT0hMDt2YXIgbT1oLmVudHJpZXNbZl18fHt9O2U9ZTw8Mnx1bihtLmltcGxpY2l0KTtiPWQrKCIiKyIwMTIzNDU2Nzg5YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXpBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWi1fIltlXSsiMDEyMzQ1Njc4OWFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6QUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVotXyJbdW4obS5kZWNsYXJlKTw8NHx1bihtLmRlZmF1bHQpPDwyfHVuKG0udXBkYXRlKV0pfXZhciBuPWIscDtwPSIiKyhmbCgpPDwyfG9uKGEpKTtyZXR1cm4gbitwfSxHbj1mdW5jdGlvbigpe3ZhciBhO2E9dm9pZCAwPT09YT97fTphO2lmKCFibChOLmcuTikpcmV0dXJuIi0iO2Zvcih2YXIgYj0KZGwoKSxjPSIiLGQ9ZmEoT2JqZWN0LmtleXMocWkpKSxlPWQubmV4dCgpOyFlLmRvbmU7ZT1kLm5leHQoKSl7dmFyIGY9ZS52YWx1ZTshMSE9PWJbZl0mJiExIT09YVtmXSYmKGMrPXFpW2ZdKX1yZXR1cm4iIj09PWM/Ii0iOmN9LEhuPWZ1bmN0aW9uKCl7cmV0dXJuIGlqKCl8fChibigpfHxjbigpKSYmIjEiPT09aG4oKT8iMSI6IjAifSxJbj1mdW5jdGlvbigpe3JldHVybihpaigpPyEwOiEoIWJuKCkmJiFjbigpKSYmIjEiPT09aG4oKSl8fCFibChOLmcuTil9LEpuPWZ1bmN0aW9uKCl7dmFyIGE9IjAiLGI9IjAiLGM7dmFyIGQ9YW4oKTtjPWQuYWN0aXZlP2QuY21wSWQ6dm9pZCAwOyJudW1iZXIiPT09dHlwZW9mIGMmJjA8PWMmJjQwOTU+PWMmJihhPSIwMTIzNDU2Nzg5YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXpBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWi1fIltjPj42JjYzXSxiPSIwMTIzNDU2Nzg5YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXpBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWi1fIltjJgo2M10pO3ZhciBlPSIwIixmO3ZhciBnPWFuKCk7Zj1nLmFjdGl2ZT9nLnRjZlBvbGljeVZlcnNpb246dm9pZCAwOyJudW1iZXIiPT09dHlwZW9mIGYmJjA8PWYmJjYzPj1mJiYoZT0iMDEyMzQ1Njc4OWFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6QUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVotXyJbZl0pO3ZhciBoPTA7aWooKSYmKGh8PTEpOyIxIj09PWhuKCkmJihofD0yKTtibigpJiYoaHw9NCk7dmFyIG07dmFyIG49YW4oKTttPXZvaWQgMCE9PW4uZW5hYmxlQWR2ZXJ0aXNlckNvbnNlbnRNb2RlP24uZW5hYmxlQWR2ZXJ0aXNlckNvbnNlbnRNb2RlPyIxIjoiMCI6dm9pZCAwOyIxIj09PW0mJihofD04KTtWaygpLndhaXRQZXJpb2RUaW1lZE91dCYmKGh8PTE2KTtyZXR1cm4iMSIrYStiK2UrIjAxMjM0NTY3ODlhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ekFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaLV8iW2hdfTt2YXIgS249ZnVuY3Rpb24oKXt2YXIgYT0hMTtyZXR1cm4gYX07dmFyIExuPXtVQToxLEFXOjIsREM6MyxHOjQsR0Y6NSxHVDoxMixHVE06MTQsSEE6NixNQzo3fSxNbj1mdW5jdGlvbihhLGIpe3ZhciBjPVZmLmN0aWQuc3BsaXQoIi0iKVswXS50b1VwcGVyQ2FzZSgpLGQ9e307ZC5jdGlkPVZmLmN0aWQ7ZC5qbj1yaS51ZTtkLm5uPXJpLmZoO2QuSm09T2oucWU/MjoxO2QuemU9VmYuY2Fub25pY2FsQ29udGFpbmVySWQ7ZC56ZSE9PWEmJihkLmZnPWEpO1IoNjcpP2Quams9MjpSKDY2KSYmKGQuams9MSk7eWk/KGQuY2c9TG5bY10sZC5jZ3x8KGQuY2c9MCkpOmQuY2c9Q2k/MTM6MTA7TGkuRj8oZC5XZj0wLGQuRGw9Mik6QWk/ZC5XZj0xOktuKCk/ZC5XZj0yOmQuV2Y9Mzt2YXIgZT17fTtlWzZdPVBqO1IoODApJiYhUGomJihlWzFdPSEwKTtkLkdsPWU7dmFyIGY7dmFyIGc9ZC5jZyxoPWQuV2Y7dm9pZCAwPT09Zz9mPSIiOihofHwoaD0wKSxmPSIiK0pnKDEsMSkrTWUoZzw8MnxoKSk7dmFyIG09ZC5EbCxuPTQrZisobT8iIitKZygyLDEpK01lKG0pOgoiIikscCxxPWQubm47cD1xJiZJZy50ZXN0KHEpPyIiK0pnKDMsMikrcToiIjt2YXIgcix0PWQuam47cj10PyIiK0pnKDQsMSkrTWUodCk6IiI7dmFyIHU7dmFyIHY9ZC5jdGlkO2lmKHYmJmIpe3ZhciB3PXYuc3BsaXQoIi0iKSx4PXdbMF0udG9VcHBlckNhc2UoKTtpZigiR1RNIiE9PXgmJiJPUFQiIT09eCl1PSIiO2Vsc2V7dmFyIHk9d1sxXTt1PSIiK0pnKDUsMykrTWUoMSt5Lmxlbmd0aCkrKGQuSm18fDApK3l9fWVsc2UgdT0iIjt2YXIgQj1kLmprLEE9ZC56ZSxGPWQuZmcsRz1kLnFvLEQ9bitwK3IrdSsoQj8iIitKZyg2LDEpK01lKEIpOiIiKSsoQT8iIitKZyg3LDMpK01lKEEubGVuZ3RoKStBOiIiKSsoRj8iIitKZyg4LDMpK01lKEYubGVuZ3RoKStGOiIiKSsoRz8iIitKZyg5LDMpK01lKEcubGVuZ3RoKStHOiIiKSxFO3ZhciBPPWQuR2w7Tz12b2lkIDA9PT1PP3t9Ok87Zm9yKHZhciBQPVtdLFQ9ZmEoT2JqZWN0LmtleXMoTykpLFk9VC5uZXh0KCk7IVkuZG9uZTtZPVQubmV4dCgpKXt2YXIgUz0KWS52YWx1ZTtQW051bWJlcihTKV09T1tTXX1pZihQLmxlbmd0aCl7dmFyIFU9SmcoMTAsMyksamE7aWYoMD09PVAubGVuZ3RoKWphPU1lKDApO2Vsc2V7Zm9yKHZhciBoYT1bXSxjYT0wLEZhPSExLG1hPTA7bWE8UC5sZW5ndGg7bWErKyl7RmE9ITA7dmFyIEFhPW1hJTY7UFttYV0mJihjYXw9MTw8QWEpOzU9PT1BYSYmKGhhLnB1c2goTWUoY2EpKSxjYT0wLEZhPSExKX1GYSYmaGEucHVzaChNZShjYSkpO2phPWhhLmpvaW4oIiIpfXZhciBQYT1qYTtFPSIiK1UrTWUoUGEubGVuZ3RoKStQYX1lbHNlIEU9IiI7cmV0dXJuIEQrRX07dmFyIE5uPWZ1bmN0aW9uKGEsYixjKXtmb3IodmFyIGQ9W10sZT1iLnNwbGl0KCI7IiksZj0wO2Y8ZS5sZW5ndGg7ZisrKXt2YXIgZz1lW2ZdLnNwbGl0KCI9IiksaD1nWzBdLnJlcGxhY2UoL15ccyp8XHMqJC9nLCIiKTtpZihoJiZoPT1hKXt2YXIgbT1nLnNsaWNlKDEpLmpvaW4oIj0iKS5yZXBsYWNlKC9eXHMqfFxzKiQvZywiIik7bSYmYyYmKG09ZGVjb2RlVVJJQ29tcG9uZW50KG0pKTtkLnB1c2gobSl9fXJldHVybiBkfTt2YXIgUW49ZnVuY3Rpb24oYSxiLGMsZCl7cmV0dXJuIE9uKGQpP05uKGEsU3RyaW5nKGJ8fFBuKCkpLGMpOltdfSxUbj1mdW5jdGlvbihhLGIsYyxkLGUpe2lmKE9uKGUpKXt2YXIgZj1SbihhLGQsZSk7aWYoMT09PWYubGVuZ3RoKXJldHVybiBmWzBdLmlkO2lmKDAhPT1mLmxlbmd0aCl7Zj1TbihmLGZ1bmN0aW9uKGcpe3JldHVybiBnLlBmfSxiKTtpZigxPT09Zi5sZW5ndGgpcmV0dXJuIGZbMF0uaWQ7Zj1TbihmLGZ1bmN0aW9uKGcpe3JldHVybiBnLlhlfSxjKTtyZXR1cm4gZlswXT9mWzBdLmlkOnZvaWQgMH19fTtmdW5jdGlvbiBVbihhLGIsYyxkKXt2YXIgZT1QbigpLGY9d2luZG93OyJudWxsIiE9PWYub3JpZ2luJiYoZi5kb2N1bWVudC5jb29raWU9YSk7dmFyIGc9UG4oKTtyZXR1cm4gZSE9Z3x8dm9pZCAwIT1jJiYwPD1RbihiLGcsITEsZCkuaW5kZXhPZihjKX0KdmFyIFluPWZ1bmN0aW9uKGEsYixjLGQpe2Z1bmN0aW9uIGUodyx4LHkpe2lmKG51bGw9PXkpcmV0dXJuIGRlbGV0ZSBoW3hdLHc7aFt4XT15O3JldHVybiB3KyI7ICIreCsiPSIreX1mdW5jdGlvbiBmKHcseCl7aWYobnVsbD09eClyZXR1cm4gZGVsZXRlIGhbeF0sdztoW3hdPSEwO3JldHVybiB3KyI7ICIreH1pZighT24oYy5OYikpcmV0dXJuIDI7dmFyIGc7dm9pZCAwPT1iP2c9YSsiPWRlbGV0ZWQ7IGV4cGlyZXM9IisobmV3IERhdGUoMCkpLnRvVVRDU3RyaW5nKCk6KGMuZW5jb2RlJiYoYj1lbmNvZGVVUklDb21wb25lbnQoYikpLGI9Vm4oYiksZz1hKyI9IitiKTt2YXIgaD17fTtnPWUoZywicGF0aCIsYy5wYXRoKTt2YXIgbTtjLmV4cGlyZXMgaW5zdGFuY2VvZiBEYXRlP209Yy5leHBpcmVzLnRvVVRDU3RyaW5nKCk6bnVsbCE9Yy5leHBpcmVzJiYobT0iIitjLmV4cGlyZXMpO2c9ZShnLCJleHBpcmVzIixtKTtnPWUoZywibWF4LWFnZSIsYy5ObSk7Zz1lKGcsInNhbWVzaXRlIiwKYy5vbik7Yy5xbiYmKGc9ZihnLCJzZWN1cmUiKSk7dmFyIG49Yy5kb21haW47aWYobiYmImF1dG8iPT09bi50b0xvd2VyQ2FzZSgpKXtmb3IodmFyIHA9V24oKSxxPXZvaWQgMCxyPSExLHQ9MDt0PHAubGVuZ3RoOysrdCl7dmFyIHU9Im5vbmUiIT09cFt0XT9wW3RdOnZvaWQgMCx2PWUoZywiZG9tYWluIix1KTt2PWYodixjLmZsYWdzKTt0cnl7ZCYmZChhLGgpfWNhdGNoKHcpe3E9dztjb250aW51ZX1yPSEwO2lmKCFYbih1LGMucGF0aCkmJlVuKHYsYSxiLGMuTmIpKXJldHVybiAwfWlmKHEmJiFyKXRocm93IHE7cmV0dXJuIDF9biYmIm5vbmUiIT09bi50b0xvd2VyQ2FzZSgpJiYoZz1lKGcsImRvbWFpbiIsbikpO2c9ZihnLGMuZmxhZ3MpO2QmJmQoYSxoKTtyZXR1cm4gWG4obixjLnBhdGgpPzE6VW4oZyxhLGIsYy5OYik/MDoxfSxabj1mdW5jdGlvbihhLGIsYyl7bnVsbD09Yy5wYXRoJiYoYy5wYXRoPSIvIik7Yy5kb21haW58fChjLmRvbWFpbj0iYXV0byIpO3JldHVybiBZbihhLApiLGMpfTtmdW5jdGlvbiBTbihhLGIsYyl7Zm9yKHZhciBkPVtdLGU9W10sZixnPTA7ZzxhLmxlbmd0aDtnKyspe3ZhciBoPWFbZ10sbT1iKGgpO209PT1jP2QucHVzaChoKTp2b2lkIDA9PT1mfHxtPGY/KGU9W2hdLGY9bSk6bT09PWYmJmUucHVzaChoKX1yZXR1cm4gMDxkLmxlbmd0aD9kOmV9ZnVuY3Rpb24gUm4oYSxiLGMpe2Zvcih2YXIgZD1bXSxlPVFuKGEsdm9pZCAwLHZvaWQgMCxjKSxmPTA7ZjxlLmxlbmd0aDtmKyspe3ZhciBnPWVbZl0uc3BsaXQoIi4iKSxoPWcuc2hpZnQoKTtpZighYnx8LTEhPT1iLmluZGV4T2YoaCkpe3ZhciBtPWcuc2hpZnQoKTttJiYobT1tLnNwbGl0KCItIiksZC5wdXNoKHtpZDpnLmpvaW4oIi4iKSxQZjoxKm1bMF18fDEsWGU6MSptWzFdfHwxfSkpfX1yZXR1cm4gZH0KdmFyIFZuPWZ1bmN0aW9uKGEpe2EmJjEyMDA8YS5sZW5ndGgmJihhPWEuc3Vic3RyaW5nKDAsMTIwMCkpO3JldHVybiBhfSwkbj0vXih3d3dcLik/Z29vZ2xlKFwuY29tPyk/KFwuW2Etel17Mn0pPyQvLGFvPS8oXnxcLilkb3VibGVjbGlja1wubmV0JC9pLFhuPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGFvLnRlc3Qod2luZG93LmRvY3VtZW50LmxvY2F0aW9uLmhvc3RuYW1lKXx8Ii8iPT09YiYmJG4udGVzdChhKX0sUG49ZnVuY3Rpb24oKXtyZXR1cm4ibnVsbCIhPT13aW5kb3cub3JpZ2luP3dpbmRvdy5kb2N1bWVudC5jb29raWU6IiJ9LFduPWZ1bmN0aW9uKCl7dmFyIGE9W10sYj13aW5kb3cuZG9jdW1lbnQubG9jYXRpb24uaG9zdG5hbWUuc3BsaXQoIi4iKTtpZig0PT09Yi5sZW5ndGgpe3ZhciBjPWJbYi5sZW5ndGgtMV07aWYocGFyc2VJbnQoYywxMCkudG9TdHJpbmcoKT09PWMpcmV0dXJuWyJub25lIl19Zm9yKHZhciBkPWIubGVuZ3RoLTI7MDw9ZDtkLS0pYS5wdXNoKGIuc2xpY2UoZCkuam9pbigiLiIpKTsKdmFyIGU9d2luZG93LmRvY3VtZW50LmxvY2F0aW9uLmhvc3RuYW1lO2FvLnRlc3QoZSl8fCRuLnRlc3QoZSl8fGEucHVzaCgibm9uZSIpO3JldHVybiBhfSxPbj1mdW5jdGlvbihhKXtyZXR1cm4gYSYmUGsoKS5oKCk/KGsoYSk/W2FdOmEpLmV2ZXJ5KGZ1bmN0aW9uKGIpe3JldHVybiBlbChiKSYmYmwoYil9KTohMH0sYm89ZnVuY3Rpb24oYSl7aWYoIWEpcmV0dXJuIDE7YT0wPT09YS5pbmRleE9mKCIuIik/YS5zdWJzdHIoMSk6YTtyZXR1cm4gYS5zcGxpdCgiLiIpLmxlbmd0aH0sY289ZnVuY3Rpb24oYSl7aWYoIWF8fCIvIj09PWEpcmV0dXJuIDE7Ii8iIT09YVswXSYmKGE9Ii8iK2EpOyIvIiE9PWFbYS5sZW5ndGgtMV0mJihhKz0iLyIpO3JldHVybiBhLnNwbGl0KCIvIikubGVuZ3RoLTF9LGVvPWZ1bmN0aW9uKGEsYil7dmFyIGM9IiIrYm8oYSksZD1jbyhiKTsxPGQmJihjKz0iLSIrZCk7cmV0dXJuIGN9O3ZhciBmbz1mdW5jdGlvbihhKXt2YXIgYj1NYXRoLnJvdW5kKDIxNDc0ODM2NDcqTWF0aC5yYW5kb20oKSksYztpZihhKXt2YXIgZD0xLGUsZixnO2lmKGEpZm9yKGQ9MCxmPWEubGVuZ3RoLTE7MDw9ZjtmLS0pZz1hLmNoYXJDb2RlQXQoZiksZD0oZDw8NiYyNjg0MzU0NTUpK2crKGc8PDE0KSxlPWQmMjY2MzM4MzA0LGQ9MCE9PWU/ZF5lPj4yMTpkO2M9U3RyaW5nKGJeZCYyMTQ3NDgzNjQ3KX1lbHNlIGM9U3RyaW5nKGIpO3JldHVybiBjfSxnbz1mdW5jdGlvbihhKXtyZXR1cm5bZm8oYSksTWF0aC5yb3VuZChUYSgpLzFFMyldLmpvaW4oIi4iKX0saG89ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZj1ibyhiKTtyZXR1cm4gVG4oYSxmLGNvKGMpLGQsZSl9LGlvPWZ1bmN0aW9uKGEsYixjLGQpe3JldHVybltiLGVvKGMsZCksYV0uam9pbigiLiIpfTtmdW5jdGlvbiBqbyhhLGIsYyxkKXt2YXIgZSxmPU51bWJlcihudWxsIT1hLkhjP2EuSGM6dm9pZCAwKTswIT09ZiYmKGU9bmV3IERhdGUoKGJ8fFRhKCkpKzFFMyooZnx8Nzc3NkUzKSkpO3JldHVybntwYXRoOmEucGF0aCxkb21haW46YS5kb21haW4sZmxhZ3M6YS5mbGFncyxlbmNvZGU6ISFjLGV4cGlyZXM6ZSxOYjpkfX07dmFyIGtvO3ZhciBvbz1mdW5jdGlvbigpe3ZhciBhPWxvLGI9bW8sYz1ubygpLGQ9ZnVuY3Rpb24oZyl7YShnLnRhcmdldHx8Zy5zcmNFbGVtZW50fHx7fSl9LGU9ZnVuY3Rpb24oZyl7YihnLnRhcmdldHx8Zy5zcmNFbGVtZW50fHx7fSl9O2lmKCFjLmluaXQpe01jKEMsIm1vdXNlZG93biIsZCk7TWMoQywia2V5dXAiLGQpO01jKEMsInN1Ym1pdCIsZSk7dmFyIGY9SFRNTEZvcm1FbGVtZW50LnByb3RvdHlwZS5zdWJtaXQ7SFRNTEZvcm1FbGVtZW50LnByb3RvdHlwZS5zdWJtaXQ9ZnVuY3Rpb24oKXtiKHRoaXMpO2YuY2FsbCh0aGlzKX07Yy5pbml0PSEwfX0scG89ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZj17Y2FsbGJhY2s6YSxkb21haW5zOmIsZnJhZ21lbnQ6Mj09PWMscGxhY2VtZW50OmMsZm9ybXM6ZCxzYW1lSG9zdDplfTtubygpLmRlY29yYXRvcnMucHVzaChmKX0scW89ZnVuY3Rpb24oYSxiLGMpe2Zvcih2YXIgZD1ubygpLmRlY29yYXRvcnMsZT17fSxmPTA7ZjxkLmxlbmd0aDsrK2Ype3ZhciBnPQpkW2ZdLGg7aWYoaD0hY3x8Zy5mb3JtcylhOnt2YXIgbT1nLmRvbWFpbnMsbj1hLHA9ISFnLnNhbWVIb3N0O2lmKG0mJihwfHxuIT09Qy5sb2NhdGlvbi5ob3N0bmFtZSkpZm9yKHZhciBxPTA7cTxtLmxlbmd0aDtxKyspaWYobVtxXWluc3RhbmNlb2YgUmVnRXhwKXtpZihtW3FdLnRlc3Qobikpe2g9ITA7YnJlYWsgYX19ZWxzZSBpZigwPD1uLmluZGV4T2YobVtxXSl8fHAmJjA8PW1bcV0uaW5kZXhPZihuKSl7aD0hMDticmVhayBhfWg9ITF9aWYoaCl7dmFyIHI9Zy5wbGFjZW1lbnQ7dm9pZCAwPT1yJiYocj1nLmZyYWdtZW50PzI6MSk7cj09PWImJldhKGUsZy5jYWxsYmFjaygpKX19cmV0dXJuIGV9O2Z1bmN0aW9uIG5vKCl7dmFyIGE9RGMoImdvb2dsZV90YWdfZGF0YSIse30pLGI9YS5nbDtiJiZiLmRlY29yYXRvcnN8fChiPXtkZWNvcmF0b3JzOltdfSxhLmdsPWIpO3JldHVybiBifTt2YXIgcm89LyguKj8pXCooLio/KVwqKC4qKS8sc289L15odHRwcz86XC9cLyhbXlwvXSo/KVwuP2NkblwuYW1wcHJvamVjdFwub3JnXC8/KC4qKS8sdG89L14oPzp3d3dcLnxtXC58YW1wXC4pKy8sdW89LyhbXj8jXSspKFw/W14jXSopPygjLiopPy87ZnVuY3Rpb24gdm8oYSl7dmFyIGI9dW8uZXhlYyhhKTtpZihiKXJldHVybntRaDpiWzFdLHF1ZXJ5OmJbMl0sZnJhZ21lbnQ6YlszXX19CmZ1bmN0aW9uIHdvKGEsYil7dmFyIGM9W0JjLnVzZXJBZ2VudCwobmV3IERhdGUpLmdldFRpbWV6b25lT2Zmc2V0KCksQmMudXNlckxhbmd1YWdlfHxCYy5sYW5ndWFnZSxNYXRoLmZsb29yKFRhKCkvNjAvMUUzKS0odm9pZCAwPT09Yj8wOmIpLGFdLmpvaW4oIioiKSxkO2lmKCEoZD1rbykpe2Zvcih2YXIgZT1BcnJheSgyNTYpLGY9MDsyNTY+ZjtmKyspe2Zvcih2YXIgZz1mLGg9MDs4Pmg7aCsrKWc9ZyYxP2c+Pj4xXjM5ODgyOTIzODQ6Zz4+PjE7ZVtmXT1nfWQ9ZX1rbz1kO2Zvcih2YXIgbT00Mjk0OTY3Mjk1LG49MDtuPGMubGVuZ3RoO24rKyltPW0+Pj44XmtvWyhtXmMuY2hhckNvZGVBdChuKSkmMjU1XTtyZXR1cm4oKG1eLTEpPj4+MCkudG9TdHJpbmcoMzYpfQpmdW5jdGlvbiB4bygpe3JldHVybiBmdW5jdGlvbihhKXt2YXIgYj12aih6LmxvY2F0aW9uLmhyZWYpLGM9Yi5zZWFyY2gucmVwbGFjZSgiPyIsIiIpLGQ9b2ooYywiX2dsIiwhMSwhMCl8fCIiO2EucXVlcnk9eW8oZCl8fHt9O3ZhciBlPXJqKGIsImZyYWdtZW50IiksZjt2YXIgZz0tMTtpZihZYShlLCJfZ2w9IikpZz00O2Vsc2V7dmFyIGg9ZS5pbmRleE9mKCImX2dsPSIpOzA8aCYmKGc9aCszKzIpfWlmKDA+ZylmPXZvaWQgMDtlbHNle3ZhciBtPWUuaW5kZXhPZigiJiIsZyk7Zj0wPm0/ZS5zdWJzdHJpbmcoZyk6ZS5zdWJzdHJpbmcoZyxtKX1hLmZyYWdtZW50PXlvKGZ8fCIiKXx8e319fQp2YXIgem89ZnVuY3Rpb24oYSl7dmFyIGI9eG8oKSxjPW5vKCk7Yy5kYXRhfHwoYy5kYXRhPXtxdWVyeTp7fSxmcmFnbWVudDp7fX0sYihjLmRhdGEpKTt2YXIgZD17fSxlPWMuZGF0YTtlJiYoV2EoZCxlLnF1ZXJ5KSxhJiZXYShkLGUuZnJhZ21lbnQpKTtyZXR1cm4gZH0seW89ZnVuY3Rpb24oYSl7dHJ5e3ZhciBiPUFvKGEsMyk7aWYodm9pZCAwIT09Yil7Zm9yKHZhciBjPXt9LGQ9Yj9iLnNwbGl0KCIqIik6W10sZT0wO2UrMTxkLmxlbmd0aDtlKz0yKXt2YXIgZj1kW2VdLGc9eWIoZFtlKzFdKTtjW2ZdPWd9QWIoIlRBR0dJTkciLDYpO3JldHVybiBjfX1jYXRjaChoKXtBYigiVEFHR0lORyIsOCl9fTsKZnVuY3Rpb24gQW8oYSxiKXtpZihhKXt2YXIgYzthOntmb3IodmFyIGQ9YSxlPTA7Mz5lOysrZSl7dmFyIGY9cm8uZXhlYyhkKTtpZihmKXtjPWY7YnJlYWsgYX1kPWRlY29kZVVSSUNvbXBvbmVudChkKX1jPXZvaWQgMH12YXIgZz1jO2lmKGcmJiIxIj09PWdbMV0pe3ZhciBoPWdbM10sbTthOntmb3IodmFyIG49Z1syXSxwPTA7cDxiOysrcClpZihuPT09d28oaCxwKSl7bT0hMDticmVhayBhfW09ITF9aWYobSlyZXR1cm4gaDtBYigiVEFHR0lORyIsNyl9fX0KZnVuY3Rpb24gQm8oYSxiLGMsZCxlKXtmdW5jdGlvbiBmKHApe3ZhciBxPXAscj0obmV3IFJlZ0V4cCgiKC4qPykoXnwmKSIrYSsiPShbXiZdKikmPyguKikiKSkuZXhlYyhxKSx0PXE7aWYocil7dmFyIHU9clsyXSx2PXJbNF07dD1yWzFdO3YmJih0PXQrdSt2KX1wPXQ7dmFyIHc9cC5jaGFyQXQocC5sZW5ndGgtMSk7cCYmIiYiIT09dyYmKHArPSImIik7cmV0dXJuIHArbn1kPXZvaWQgMD09PWQ/ITE6ZDtlPXZvaWQgMD09PWU/ITE6ZTt2YXIgZz12byhjKTtpZighZylyZXR1cm4iIjt2YXIgaD1nLnF1ZXJ5fHwiIixtPWcuZnJhZ21lbnR8fCIiLG49YSsiPSIrYjtkPzAhPT1tLnN1YnN0cmluZygxKS5sZW5ndGgmJmV8fChtPSIjIitmKG0uc3Vic3RyaW5nKDEpKSk6aD0iPyIrZihoLnN1YnN0cmluZygxKSk7cmV0dXJuIiIrZy5RaCtoK219CmZ1bmN0aW9uIENvKGEsYil7ZnVuY3Rpb24gYyhuLHAscSl7dmFyIHI7YTp7Zm9yKHZhciB0IGluIG4paWYobi5oYXNPd25Qcm9wZXJ0eSh0KSl7cj0hMDticmVhayBhfXI9ITF9aWYocil7dmFyIHUsdj1bXSx3O2Zvcih3IGluIG4paWYobi5oYXNPd25Qcm9wZXJ0eSh3KSl7dmFyIHg9blt3XTt2b2lkIDAhPT14JiZ4PT09eCYmbnVsbCE9PXgmJiJbb2JqZWN0IE9iamVjdF0iIT09eC50b1N0cmluZygpJiYodi5wdXNoKHcpLHYucHVzaCh4YihTdHJpbmcoeCkpKSl9dmFyIHk9di5qb2luKCIqIik7dT1bIjEiLHdvKHkpLHldLmpvaW4oIioiKTtkPyhVZigxMyl8fFVmKDExKXx8IXApJiZEbygiX2dsIix1LGEscCxxKTpFbygiX2dsIix1LGEscCxxKX19dmFyIGQ9IkZPUk0iPT09KGEudGFnTmFtZXx8IiIpLnRvVXBwZXJDYXNlKCksZT1xbyhiLDEsZCksZj1xbyhiLDIsZCksZz1xbyhiLDQsZCksaD1xbyhiLDMsZCk7YyhlLCExLCExKTtjKGYsITAsITEpO1VmKDExKSYmYyhnLCEwLCEwKTsKZm9yKHZhciBtIGluIGgpaC5oYXNPd25Qcm9wZXJ0eShtKSYmRm8obSxoW21dLGEpfWZ1bmN0aW9uIEZvKGEsYixjKXsiYSI9PT1jLnRhZ05hbWUudG9Mb3dlckNhc2UoKT9FbyhhLGIsYyk6ImZvcm0iPT09Yy50YWdOYW1lLnRvTG93ZXJDYXNlKCkmJkRvKGEsYixjKX1mdW5jdGlvbiBFbyhhLGIsYyxkLGUpe2Q9dm9pZCAwPT09ZD8hMTpkO2U9dm9pZCAwPT09ZT8hMTplO3ZhciBmO2lmKGY9Yy5ocmVmKXt2YXIgZztpZighKGc9IVVmKDE2KXx8ZCkpe3ZhciBoPXoubG9jYXRpb24uaHJlZixtPXZvKGMuaHJlZiksbj12byhoKTtnPSEobSYmbiYmbS5RaD09PW4uUWgmJm0ucXVlcnk9PT1uLnF1ZXJ5JiZtLmZyYWdtZW50KX1mPWd9aWYoZil7dmFyIHA9Qm8oYSxiLGMuaHJlZixkLGUpO3BjLnRlc3QocCkmJihjLmhyZWY9cCl9fQpmdW5jdGlvbiBEbyhhLGIsYyxkLGUpe2Q9dm9pZCAwPT09ZD8hMTpkO2U9dm9pZCAwPT09ZT8hMTplO2lmKGMmJmMuYWN0aW9uKXt2YXIgZj0oYy5tZXRob2R8fCIiKS50b0xvd2VyQ2FzZSgpO2lmKCJnZXQiIT09Znx8ZCl7aWYoImdldCI9PT1mfHwicG9zdCI9PT1mKXt2YXIgZz1CbyhhLGIsYy5hY3Rpb24sZCxlKTtwYy50ZXN0KGcpJiYoYy5hY3Rpb249Zyl9fWVsc2V7Zm9yKHZhciBoPWMuY2hpbGROb2Rlc3x8W10sbT0hMSxuPTA7bjxoLmxlbmd0aDtuKyspe3ZhciBwPWhbbl07aWYocC5uYW1lPT09YSl7cC5zZXRBdHRyaWJ1dGUoInZhbHVlIixiKTttPSEwO2JyZWFrfX1pZighbSl7dmFyIHE9Qy5jcmVhdGVFbGVtZW50KCJpbnB1dCIpO3Euc2V0QXR0cmlidXRlKCJ0eXBlIiwiaGlkZGVuIik7cS5zZXRBdHRyaWJ1dGUoIm5hbWUiLGEpO3Euc2V0QXR0cmlidXRlKCJ2YWx1ZSIsYik7Yy5hcHBlbmRDaGlsZChxKX19fX0KZnVuY3Rpb24gbG8oYSl7dHJ5e3ZhciBiO2E6e2Zvcih2YXIgYz1hLGQ9MTAwO2MmJjA8ZDspe2lmKGMuaHJlZiYmYy5ub2RlTmFtZS5tYXRjaCgvXmEoPzpyZWEpPyQvaSkpe2I9YzticmVhayBhfWM9Yy5wYXJlbnROb2RlO2QtLX1iPW51bGx9dmFyIGU9YjtpZihlKXt2YXIgZj1lLnByb3RvY29sOyJodHRwOiIhPT1mJiYiaHR0cHM6IiE9PWZ8fENvKGUsZS5ob3N0bmFtZSl9fWNhdGNoKGcpe319ZnVuY3Rpb24gbW8oYSl7dHJ5e2lmKGEuYWN0aW9uKXt2YXIgYj1yaih2aihhLmFjdGlvbiksImhvc3QiKTtDbyhhLGIpfX1jYXRjaChjKXt9fQp2YXIgR289ZnVuY3Rpb24oYSxiLGMsZCl7b28oKTtwbyhhLGIsImZyYWdtZW50Ij09PWM/MjoxLCEhZCwhMSl9LEhvPWZ1bmN0aW9uKGEsYil7b28oKTtwbyhhLFtxaih6LmxvY2F0aW9uLCJob3N0IiwhMCldLGIsITAsITApfSxJbz1mdW5jdGlvbigpe3ZhciBhPUMubG9jYXRpb24uaG9zdG5hbWUsYj1zby5leGVjKEMucmVmZXJyZXIpO2lmKCFiKXJldHVybiExO3ZhciBjPWJbMl0sZD1iWzFdLGU9IiI7aWYoYyl7dmFyIGY9Yy5zcGxpdCgiLyIpLGc9ZlsxXTtlPSJzIj09PWc/ZGVjb2RlVVJJQ29tcG9uZW50KGZbMl0pOmRlY29kZVVSSUNvbXBvbmVudChnKX1lbHNlIGlmKGQpe2lmKDA9PT1kLmluZGV4T2YoInhuLS0iKSlyZXR1cm4hMTtlPWQucmVwbGFjZSgvLS9nLCIuIikucmVwbGFjZSgvXC5cLi9nLCItIil9dmFyIGg9YS5yZXBsYWNlKHRvLCIiKSxtPWUucmVwbGFjZSh0bywiIiksbjtpZighKG49aD09PW0pKXt2YXIgcD0iLiIrbTtuPWguc3Vic3RyaW5nKGgubGVuZ3RoLXAubGVuZ3RoLApoLmxlbmd0aCk9PT1wfXJldHVybiBufSxKbz1mdW5jdGlvbihhLGIpe3JldHVybiExPT09YT8hMTphfHxifHxJbygpfTt2YXIgS289WyIxIl0sTG89e30sTW89e30sUm89ZnVuY3Rpb24oYSxiKXtiPXZvaWQgMD09PWI/ITA6Yjt2YXIgYz1ObyhhLnByZWZpeCk7aWYoIUxvW2NdKWlmKE9vKGMsYS5wYXRoLGEuZG9tYWluKSl7dmFyIGQ9TW9bTm8oYS5wcmVmaXgpXTtQbyhhLGQ/ZC5pZDp2b2lkIDAsZD9kLktoOnZvaWQgMCl9ZWxzZXt2YXIgZT1DaigiYXVpZGRjIik7aWYoZSlBYigiVEFHR0lORyIsMTcpLExvW2NdPWU7ZWxzZSBpZihiKXt2YXIgZj1ObyhhLnByZWZpeCksZz1nbygpO2lmKDA9PT1RbyhmLGcsYSkpe3ZhciBoPURjKCJnb29nbGVfdGFnX2RhdGEiLHt9KTtoLl9nY2xfYXV8fChoLl9nY2xfYXU9Zyl9T28oYyxhLnBhdGgsYS5kb21haW4pfX19OwpmdW5jdGlvbiBQbyhhLGIsYyl7dmFyIGQ9Tm8oYS5wcmVmaXgpLGU9TG9bZF07aWYoZSl7dmFyIGY9ZS5zcGxpdCgiLiIpO2lmKDI9PT1mLmxlbmd0aCl7dmFyIGc9TnVtYmVyKGZbMV0pfHwwO2lmKGcpe3ZhciBoPWU7YiYmKGg9ZSsiLiIrYisiLiIrKGM/YzpNYXRoLmZsb29yKFRhKCkvMUUzKSkpO1FvKGQsaCxhLDFFMypnKX19fX1mdW5jdGlvbiBRbyhhLGIsYyxkKXt2YXIgZT1pbyhiLCIxIixjLmRvbWFpbixjLnBhdGgpLGY9am8oYyxkKTtmLk5iPVNvKCk7cmV0dXJuIFpuKGEsZSxmKX1mdW5jdGlvbiBPbyhhLGIsYyl7dmFyIGQ9aG8oYSxiLGMsS28sU28oKSk7aWYoIWQpcmV0dXJuITE7VG8oYSxkKTtyZXR1cm4hMH0KZnVuY3Rpb24gVG8oYSxiKXt2YXIgYz1iLnNwbGl0KCIuIik7NT09PWMubGVuZ3RoPyhMb1thXT1jLnNsaWNlKDAsMikuam9pbigiLiIpLE1vW2FdPXtpZDpjLnNsaWNlKDIsNCkuam9pbigiLiIpLEtoOk51bWJlcihjWzRdKXx8MH0pOjM9PT1jLmxlbmd0aD9Nb1thXT17aWQ6Yy5zbGljZSgwLDIpLmpvaW4oIi4iKSxLaDpOdW1iZXIoY1syXSl8fDB9OkxvW2FdPWJ9ZnVuY3Rpb24gTm8oYSl7cmV0dXJuKGF8fCJfZ2NsIikrIl9hdSJ9ZnVuY3Rpb24gVW8oYSl7ZnVuY3Rpb24gYigpe2JsKGMpJiZhKCl9dmFyIGM9U28oKTtpbChmdW5jdGlvbigpe2IoKTtibChjKXx8amwoYixjKX0sYyl9CmZ1bmN0aW9uIFZvKGEpe3ZhciBiPXpvKCEwKSxjPU5vKGEucHJlZml4KTtVbyhmdW5jdGlvbigpe3ZhciBkPWJbY107aWYoZCl7VG8oYyxkKTt2YXIgZT0xRTMqTnVtYmVyKExvW2NdLnNwbGl0KCIuIilbMV0pO2lmKGUpe0FiKCJUQUdHSU5HIiwxNik7dmFyIGY9am8oYSxlKTtmLk5iPVNvKCk7dmFyIGc9aW8oZCwiMSIsYS5kb21haW4sYS5wYXRoKTtabihjLGcsZil9fX0pfWZ1bmN0aW9uIFdvKGEsYixjLGQsZSl7ZT1lfHx7fTt2YXIgZj1mdW5jdGlvbigpe3ZhciBnPXt9LGg9aG8oYSxlLnBhdGgsZS5kb21haW4sS28sU28oKSk7aCYmKGdbYV09aCk7cmV0dXJuIGd9O1VvKGZ1bmN0aW9uKCl7R28oZixiLGMsZCl9KX1mdW5jdGlvbiBTbygpe3JldHVybiBVZigxNCk/WyJhZF9zdG9yYWdlIiwiYWRfdXNlcl9kYXRhIl06WyJhZF9zdG9yYWdlIl19O3ZhciBYbz1mdW5jdGlvbihhKXtmb3IodmFyIGI9W10sYz1DLmNvb2tpZS5zcGxpdCgiOyIpLGQ9bmV3IFJlZ0V4cCgiXlxccyoiKyhhfHwiX2dhYyIpKyJfKFVBLVxcZCstXFxkKyk9XFxzKiguKz8pXFxzKiQiKSxlPTA7ZTxjLmxlbmd0aDtlKyspe3ZhciBmPWNbZV0ubWF0Y2goZCk7ZiYmYi5wdXNoKHtnaTpmWzFdLHZhbHVlOmZbMl0sdGltZXN0YW1wOk51bWJlcihmWzJdLnNwbGl0KCIuIilbMV0pfHwwfSl9Yi5zb3J0KGZ1bmN0aW9uKGcsaCl7cmV0dXJuIGgudGltZXN0YW1wLWcudGltZXN0YW1wfSk7cmV0dXJuIGJ9OwpmdW5jdGlvbiBZbyhhLGIpe3ZhciBjPVhvKGEpLGQ9e307aWYoIWN8fCFjLmxlbmd0aClyZXR1cm4gZDtmb3IodmFyIGU9MDtlPGMubGVuZ3RoO2UrKyl7dmFyIGY9Y1tlXS52YWx1ZS5zcGxpdCgiLiIpO2lmKCEoIjEiIT09ZlswXXx8YiYmMz5mLmxlbmd0aHx8IWImJjMhPT1mLmxlbmd0aCkmJk51bWJlcihmWzFdKSl7ZFtjW2VdLmdpXXx8KGRbY1tlXS5naV09W10pO3ZhciBnPXt2ZXJzaW9uOmZbMF0sdGltZXN0YW1wOjFFMypOdW1iZXIoZlsxXSksaWE6ZlsyXX07YiYmMzxmLmxlbmd0aCYmKGcubGFiZWxzPWYuc2xpY2UoMykpO2RbY1tlXS5naV0ucHVzaChnKX19cmV0dXJuIGR9O3ZhciBabz17fSwkbz0oWm8uaz17TmE6L15bXHctXSskL30sWm8uYj17TmE6L15bXHctXSskLyxZaDohMH0sWm8uaT17TmE6L15bMS05XVxkKiQvfSxabyksYXA9e30sYnA9KGFwWzVdPXt2ZXJzaW9uOiIyIixEbjpbIjIiXSxmazoiYWRfc3RvcmFnZSIsSWo6WyJrIiwiaSIsImIiXX0sYXApO2Z1bmN0aW9uIGNwKGEsYil7dmFyIGM9Yi5OYTtyZXR1cm4iZnVuY3Rpb24iPT09dHlwZW9mIGM/YyhhKTpjLnRlc3QoYSl9CmZ1bmN0aW9uIGRwKGEpe2Zvcih2YXIgYj1mYShPYmplY3Qua2V5cyhhKSksYz1iLm5leHQoKSxkPXt9OyFjLmRvbmU7ZD17QmU6dm9pZCAwfSxjPWIubmV4dCgpKXt2YXIgZT1jLnZhbHVlLGY9YVtlXTtkLkJlPSRvW2VdO2QuQmU/ZC5CZS5ZaD9hW2VdPUFycmF5LmlzQXJyYXkoZik/Zi5maWx0ZXIoZnVuY3Rpb24oZyl7cmV0dXJuIGZ1bmN0aW9uKGgpe3JldHVybiBjcChoLGcuQmUpfX0oZCkpOnZvaWQgMDoic3RyaW5nIj09PXR5cGVvZiBmJiZjcChmLGQuQmUpfHwoYVtlXT12b2lkIDApOmFbZV09dm9pZCAwfXJldHVybiBhfQpmdW5jdGlvbiBlcChhKXt2YXIgYj1icFs1XTtpZihiKXtmb3IodmFyIGM9W10sZD1RbihhLHZvaWQgMCx2b2lkIDAsYi5mayksZT1mYShkKSxmPWUubmV4dCgpOyFmLmRvbmU7Zj1lLm5leHQoKSl7dmFyIGc9Zi52YWx1ZS5zcGxpdCgiLiIpLGg9Zy5zaGlmdCgpO2lmKC0xIT09Yi5Ebi5pbmRleE9mKGgpKXtnLnNoaWZ0KCk7dmFyIG09Zy5qb2luKCIuIiksbj1jLHA9bi5wdXNoLHE7dmFyIHI9e30sdD1icFs1XTtpZih0KXtmb3IodmFyIHU9dC5Jaix2PWZhKG0uc3BsaXQoIiQiKSksdz12Lm5leHQoKTshdy5kb25lO3c9di5uZXh0KCkpe3ZhciB4PXcudmFsdWUseT14WzBdO2lmKC0xIT09dS5pbmRleE9mKHkpKXRyeXt2YXIgQj1kZWNvZGVVUklDb21wb25lbnQoeC5zdWJzdHJpbmcoMSkpLEE9JG9beV07QSYmKEEuWWg/KHJbeV09clt5XXx8W10sclt5XS5wdXNoKEIpKTpyW3ldPUIpfWNhdGNoKEYpe319cT1kcChyKX1lbHNlIHE9dm9pZCAwO3AuY2FsbChuLHEpfX1yZXR1cm4gY319CmZ1bmN0aW9uIGZwKGEsYixjLGQpe2M9Y3x8e307dmFyIGU7dmFyIGY9YnBbNV07aWYoZil7Zm9yKHZhciBnPVtdLGg9ZmEoZi5JaiksbT1oLm5leHQoKTshbS5kb25lO209aC5uZXh0KCkpe3ZhciBuPW0udmFsdWUscD0kb1tuXTtpZihwKXt2YXIgcT1iW25dO2lmKHZvaWQgMCE9PXEpaWYocC5ZaCYmQXJyYXkuaXNBcnJheShxKSlmb3IodmFyIHI9ZmEocSksdD1yLm5leHQoKTshdC5kb25lO3Q9ci5uZXh0KCkpZy5wdXNoKGVuY29kZVVSSUNvbXBvbmVudCgiIituK3QudmFsdWUpKTtlbHNlIGcucHVzaChlbmNvZGVVUklDb21wb25lbnQoIiIrbitxKSl9fWU9Zy5qb2luKCIkIil9ZWxzZSBlPXZvaWQgMDt2YXIgdT1lO2lmKHUpe3ZhciB2PWJwWzVdLHc9W3YudmVyc2lvbixlbyhjLmRvbWFpbixjLnBhdGgpLHVdLmpvaW4oIi4iKTtabihhLHcsam8oYyxkLHZvaWQgMCx2LmZrKSl9fTt2YXIgZ3A9L15cdyskLyxocD0vXltcdy1dKyQvLGlwPXthZzoiX2FnIixhdzoiX2F3IixkYzoiX2RjIixnYjoiX2diIixnZjoiX2dmIixncDoiX2dwIixoYToiX2hhIn07ZnVuY3Rpb24ganAoKXtyZXR1cm4gVWYoMTQpP1siYWRfc3RvcmFnZSIsImFkX3VzZXJfZGF0YSJdOlsiYWRfc3RvcmFnZSJdfXZhciBrcD1mdW5jdGlvbihhKXtyZXR1cm4hUGsoKS5oKCl8fGJsKGEpfSxscD1mdW5jdGlvbihhKXtmdW5jdGlvbiBiKCl7dmFyIGQ9a3AoYyk7ZCYmYSgpO3JldHVybiBkfXZhciBjPWpwKCk7aWwoZnVuY3Rpb24oKXtiKCl8fGpsKGIsYyl9LGMpfSxucD1mdW5jdGlvbihhKXtyZXR1cm4gbXAoYSkubWFwKGZ1bmN0aW9uKGIpe3JldHVybiBiLmlhfSl9OwpmdW5jdGlvbiBvcChhLGIsYyxkLGUpe3ZhciBmPUlhKGEsZnVuY3Rpb24oZyl7cmV0dXJuIGcuaWE9PT1jfSk7Zj8oZi50aW1lc3RhbXA9TWF0aC5tYXgoZi50aW1lc3RhbXAsZCksZi5sYWJlbHM9cHAoZi5sYWJlbHN8fFtdLGV8fFtdKSk6YS5wdXNoKHt2ZXJzaW9uOmIsaWE6Yyx0aW1lc3RhbXA6ZCxsYWJlbHM6ZX0pfQp2YXIgbXA9ZnVuY3Rpb24oYSl7Zm9yKHZhciBiPVtdLGM9UW4oYSxDLmNvb2tpZSx2b2lkIDAsanAoKSksZD1mYShjKSxlPWQubmV4dCgpOyFlLmRvbmU7ZT1kLm5leHQoKSl7dmFyIGY9cXAoZS52YWx1ZSk7aWYobnVsbCE9Zil7dmFyIGc9ZjtvcChiLGcudmVyc2lvbixnLmlhLGcudGltZXN0YW1wLGcubGFiZWxzKX19Yi5zb3J0KGZ1bmN0aW9uKGgsbSl7cmV0dXJuIG0udGltZXN0YW1wLWgudGltZXN0YW1wfSk7cmV0dXJuIHJwKGIpfSxzcD1mdW5jdGlvbihhKXtpZighVWYoMjApKXJldHVybltdO2Zvcih2YXIgYj1lcChhKXx8W10sYz1bXSxkPWZhKGIpLGU9ZC5uZXh0KCk7IWUuZG9uZTtlPWQubmV4dCgpKXt2YXIgZj1lLnZhbHVlLGc9ZixoPWY/MUUzKihOdW1iZXIoZi5pKXx8MCk6MDtoJiZvcChjLCIyIixnLmssaCxnLmJ8fFtdKX1yZXR1cm4gYy5zb3J0KGZ1bmN0aW9uKG0sbil7cmV0dXJuIG4udGltZXN0YW1wLW0udGltZXN0YW1wfSl9OwpmdW5jdGlvbiBwcChhLGIpe2lmKCFhLmxlbmd0aClyZXR1cm4gYjtpZighYi5sZW5ndGgpcmV0dXJuIGE7dmFyIGM9e307cmV0dXJuIGEuY29uY2F0KGIpLmZpbHRlcihmdW5jdGlvbihkKXtyZXR1cm4gYy5oYXNPd25Qcm9wZXJ0eShkKT8hMTpjW2RdPSEwfSl9ZnVuY3Rpb24gdHAoYSl7cmV0dXJuIGEmJiJzdHJpbmciPT10eXBlb2YgYSYmYS5tYXRjaChncCk/YToiX2djbCJ9CmZ1bmN0aW9uIHVwKGEsYil7dmFyIGM9VWYoMjApLGQ9dmooYSksZT1yaihkLCJxdWVyeSIsITEsdm9pZCAwLCJnY2xpZCIpLGY9cmooZCwicXVlcnkiLCExLHZvaWQgMCwiZ2Nsc3JjIiksZz1yaihkLCJxdWVyeSIsITEsdm9pZCAwLCJ3YnJhaWQiKSxoO2MmJihoPXJqKGQsInF1ZXJ5IiwhMSx2b2lkIDAsImdicmFpZCIpKTt2YXIgbT1yaihkLCJxdWVyeSIsITEsdm9pZCAwLCJkY2xpZCIpO2lmKGImJighZXx8IWZ8fCFnfHxjJiYhaCkpe3ZhciBuPWQuaGFzaC5yZXBsYWNlKCIjIiwiIik7ZT1lfHxvaihuLCJnY2xpZCIsITEpO2Y9Znx8b2oobiwiZ2Nsc3JjIiwhMSk7Zz1nfHxvaihuLCJ3YnJhaWQiLCExKTtjJiYoaD1ofHxvaihuLCJnYnJhaWQiLCExKSl9cmV0dXJuIHZwKGUsZixtLGcsaCl9CnZhciB3cD1mdW5jdGlvbigpe3JldHVybiB1cCh6LmxvY2F0aW9uLmhyZWYsITApfSx2cD1mdW5jdGlvbihhLGIsYyxkLGUpe3ZhciBmPXt9LGc9ZnVuY3Rpb24oaCxtKXtmW21dfHwoZlttXT1bXSk7ZlttXS5wdXNoKGgpfTtmLmdjbGlkPWE7Zi5nY2xzcmM9YjtmLmRjbGlkPWM7aWYodm9pZCAwIT09YSYmYS5tYXRjaChocCkpc3dpdGNoKGIpe2Nhc2Ugdm9pZCAwOmcoYSwiYXciKTticmVhaztjYXNlICJhdy5kcyI6ZyhhLCJhdyIpO2coYSwiZGMiKTticmVhaztjYXNlICJkcyI6ZyhhLCJkYyIpO2JyZWFrO2Nhc2UgIjNwLmRzIjpnKGEsImRjIik7YnJlYWs7Y2FzZSAiZ2YiOmcoYSwiZ2YiKTticmVhaztjYXNlICJoYSI6ZyhhLCJoYSIpfWMmJmcoYywiZGMiKTt2b2lkIDAhPT1kJiZocC50ZXN0KGQpJiYoZi53YnJhaWQ9ZCxnKGQsImdiIikpO1VmKDIwKSYmdm9pZCAwIT09ZSYmaHAudGVzdChlKSYmKGYuZ2JyYWlkPWUsZyhlLCJhZyIpKTtyZXR1cm4gZn0seXA9ZnVuY3Rpb24oYSl7dmFyIGI9CndwKCk7aWYoVWYoMTgpKXtmb3IodmFyIGM9ITAsZD1mYShPYmplY3Qua2V5cyhiKSksZT1kLm5leHQoKTshZS5kb25lO2U9ZC5uZXh0KCkpaWYodm9pZCAwIT09YltlLnZhbHVlXSl7Yz0hMTticmVha31jJiYoYj11cCh6LmRvY3VtZW50LnJlZmVycmVyLCExKSl9eHAoYiwhMSxhKX07CmZ1bmN0aW9uIHhwKGEsYixjLGQsZSl7Yz1jfHx7fTtlPWV8fFtdO3ZhciBmPXRwKGMucHJlZml4KTtkPWR8fFRhKCk7dmFyIGc9TWF0aC5yb3VuZChkLzFFMyksaD1qcCgpLG09ITEsbj0hMSxwPWZ1bmN0aW9uKCl7aWYoa3AoaCkpe3ZhciBxPWpvKGMsZCwhMCk7cS5OYj1oO2Zvcih2YXIgcj1mdW5jdGlvbihELEUpe3ZhciBPPXpwKEQsZik7TyYmKFpuKE8sRSxxKSwiZ2IiIT09RCYmKG09ITApKX0sdD1mdW5jdGlvbihEKXt2YXIgRT1bIkdDTCIsZyxEXTswPGUubGVuZ3RoJiZFLnB1c2goZS5qb2luKCIuIikpO3JldHVybiBFLmpvaW4oIi4iKX0sdT1mYShbImF3IiwiZGMiLCJnZiIsImhhIiwiZ3AiXSksdj11Lm5leHQoKTshdi5kb25lO3Y9dS5uZXh0KCkpe3ZhciB3PXYudmFsdWU7YVt3XSYmcih3LHQoYVt3XVswXSkpfWlmKCFtJiZhLmdiKXt2YXIgeD1hLmdiWzBdLHk9enAoImdiIixmKTshYiYmbXAoeSkuc29tZShmdW5jdGlvbihEKXtyZXR1cm4gRC5pYT09PXgmJkQubGFiZWxzJiYKMDxELmxhYmVscy5sZW5ndGh9KXx8cigiZ2IiLHQoeCkpfX1pZighbiYmVWYoMjApJiZhLmdicmFpZCYma3AoImFkX3N0b3JhZ2UiKSYmKG49ITAsIW0pKXt2YXIgQj1hLmdicmFpZCxBPXpwKCJhZyIsZik7aWYoYnx8IXNwKEEpLnNvbWUoZnVuY3Rpb24oRCl7cmV0dXJuIEQuaWE9PT1CJiZELmxhYmVscyYmMDxELmxhYmVscy5sZW5ndGh9KSl7dmFyIEY9e30sRz0oRi5rPUIsRi5pPWcsRi5iPWUsRik7ZnAoQSxHLGMsZCl9fX07aWwoZnVuY3Rpb24oKXtwKCk7a3AoaCl8fGpsKHAsaCl9LGgpfQp2YXIgQnA9ZnVuY3Rpb24oYSxiKXt2YXIgYz16byghMCk7bHAoZnVuY3Rpb24oKXtmb3IodmFyIGQ9dHAoYi5wcmVmaXgpLGU9MDtlPGEubGVuZ3RoOysrZSl7dmFyIGY9YVtlXTtpZih2b2lkIDAhPT1pcFtmXSl7dmFyIGc9enAoZixkKSxoPWNbZ107aWYoaCl7dmFyIG09TWF0aC5taW4oQXAoaCksVGEoKSksbjtiOntmb3IodmFyIHA9bSxxPVFuKGcsQy5jb29raWUsdm9pZCAwLGpwKCkpLHI9MDtyPHEubGVuZ3RoOysrcilpZihBcChxW3JdKT5wKXtuPSEwO2JyZWFrIGJ9bj0hMX1pZighbil7dmFyIHQ9am8oYixtLCEwKTt0Lk5iPWpwKCk7Wm4oZyxoLHQpfX19fXhwKHZwKGMuZ2NsaWQsYy5nY2xzcmMpLCExLGIpfSl9LHpwPWZ1bmN0aW9uKGEsYil7dmFyIGM9aXBbYV07aWYodm9pZCAwIT09YylyZXR1cm4gYitjfSxBcD1mdW5jdGlvbihhKXtyZXR1cm4gMCE9PUNwKGEuc3BsaXQoIi4iKSkubGVuZ3RoPzFFMyooTnVtYmVyKGEuc3BsaXQoIi4iKVsxXSl8fDApOjB9OwpmdW5jdGlvbiBxcChhKXt2YXIgYj1DcChhLnNwbGl0KCIuIikpO3JldHVybiAwPT09Yi5sZW5ndGg/bnVsbDp7dmVyc2lvbjpiWzBdLGlhOmJbMl0sdGltZXN0YW1wOjFFMyooTnVtYmVyKGJbMV0pfHwwKSxsYWJlbHM6Yi5zbGljZSgzKX19ZnVuY3Rpb24gQ3AoYSl7cmV0dXJuIDM+YS5sZW5ndGh8fCJHQ0wiIT09YVswXSYmIjEiIT09YVswXXx8IS9eXGQrJC8udGVzdChhWzFdKXx8IWhwLnRlc3QoYVsyXSk/W106YX0KdmFyIERwPWZ1bmN0aW9uKGEsYixjLGQsZSl7aWYoSGEoYikmJiJudWxsIiE9PXoub3JpZ2luKXt2YXIgZj10cChlKSxnPWZ1bmN0aW9uKCl7Zm9yKHZhciBoPXt9LG09MDttPGEubGVuZ3RoOysrbSl7dmFyIG49enAoYVttXSxmKTtpZihuKXt2YXIgcD1RbihuLEMuY29va2llLHZvaWQgMCxqcCgpKTtwLmxlbmd0aCYmKGhbbl09cC5zb3J0KClbcC5sZW5ndGgtMV0pfX1yZXR1cm4gaH07bHAoZnVuY3Rpb24oKXtHbyhnLGIsYyxkKX0pfX0scnA9ZnVuY3Rpb24oYSl7cmV0dXJuIGEuZmlsdGVyKGZ1bmN0aW9uKGIpe3JldHVybiBocC50ZXN0KGIuaWEpfSl9LEVwPWZ1bmN0aW9uKGEsYil7aWYoIm51bGwiIT09ei5vcmlnaW4pe2Zvcih2YXIgYz10cChiLnByZWZpeCksZD17fSxlPTA7ZTxhLmxlbmd0aDtlKyspaXBbYVtlXV0mJihkW2FbZV1dPWlwW2FbZV1dKTtscChmdW5jdGlvbigpe2woZCxmdW5jdGlvbihmLGcpe3ZhciBoPVFuKGMrZyxDLmNvb2tpZSx2b2lkIDAsanAoKSk7aC5zb3J0KGZ1bmN0aW9uKHQsCnUpe3JldHVybiBBcCh1KS1BcCh0KX0pO2lmKGgubGVuZ3RoKXt2YXIgbT1oWzBdLG49QXAobSkscD0wIT09Q3AobS5zcGxpdCgiLiIpKS5sZW5ndGg/bS5zcGxpdCgiLiIpLnNsaWNlKDMpOltdLHE9e30scjtyPTAhPT1DcChtLnNwbGl0KCIuIikpLmxlbmd0aD9tLnNwbGl0KCIuIilbMl06dm9pZCAwO3FbZl09W3JdO3hwKHEsITAsYixuLHApfX0pfSl9fTtmdW5jdGlvbiBGcChhLGIpe2Zvcih2YXIgYz0wO2M8Yi5sZW5ndGg7KytjKWlmKGFbYltjXV0pcmV0dXJuITA7cmV0dXJuITF9CnZhciBHcD1mdW5jdGlvbihhKXtmdW5jdGlvbiBiKGUsZixnKXtnJiYoZVtmXT1nKX1pZihmbCgpKXt2YXIgYz13cCgpO2lmKEZwKGMsYSkpe3ZhciBkPXt9O2IoZCwiZ2NsaWQiLGMuZ2NsaWQpO2IoZCwiZGNsaWQiLGMuZGNsaWQpO2IoZCwiZ2Nsc3JjIixjLmdjbHNyYyk7YihkLCJ3YnJhaWQiLGMud2JyYWlkKTtVZigyMCkmJmIoZCwiZ2JyYWlkIixjLmdicmFpZCk7SG8oZnVuY3Rpb24oKXtyZXR1cm4gZH0sMyk7SG8oZnVuY3Rpb24oKXt2YXIgZT17fTtyZXR1cm4gZS5fdXA9IjEiLGV9LDEpfX19LEhwPWZ1bmN0aW9uKGEpe2lmKCFVZigxMSkpcmV0dXJuIG51bGw7dmFyIGI9em8oITApLmdhZF9zb3VyY2U7aWYobnVsbCE9YilyZXR1cm4gei5sb2NhdGlvbi5oYXNoPSIiLGI7aWYoVWYoMTIpKXt2YXIgYz12aih6LmxvY2F0aW9uLmhyZWYpO2I9cmooYywicXVlcnkiLCExLHZvaWQgMCwiZ2FkX3NvdXJjZSIpO2lmKG51bGwhPWIpcmV0dXJuIGI7dmFyIGQ9d3AoKTtpZihGcChkLAphKSlyZXR1cm4iMCJ9cmV0dXJuIG51bGx9LElwPWZ1bmN0aW9uKGEpe3ZhciBiPUhwKGEpO251bGwhPWImJkhvKGZ1bmN0aW9uKCl7dmFyIGM9e307cmV0dXJuIGMuZ2FkX3NvdXJjZT1iLGN9LDQpfSxKcD1mdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1bXTtjPWN8fHt9O2lmKCFrcChqcCgpKSlyZXR1cm4gZTt2YXIgZj1tcChhKSxnO2E6e2lmKGYubGVuZ3RoKXtmb3IodmFyIGg9MDtoPGYubGVuZ3RoO2grKyktMT09PShmW2hdLmxhYmVsc3x8W10pLmluZGV4T2YoYik/ZS5wdXNoKDApOmUucHVzaCgxKTtpZigxIT09ZVswXSl7Zz1mWzBdO2JyZWFrIGF9fWc9dm9pZCAwfXZhciBtPWc7aWYobSYmIWQpe3ZhciBuPW0udGltZXN0YW1wLHA9W20udmVyc2lvbixNYXRoLnJvdW5kKG4vMUUzKSxtLmlhXS5jb25jYXQobS5sYWJlbHN8fFtdLFtiXSkuam9pbigiLiIpLHE9am8oYyxuLCEwKTtxLk5iPWpwKCk7Wm4oYSxwLHEpfXJldHVybiBlfTsKZnVuY3Rpb24gS3AoYSxiKXt2YXIgYz10cChiKSxkPXpwKGEsYyk7aWYoIWQpcmV0dXJuIDA7dmFyIGU7ZT0iYWciPT09YT9zcChkKTptcChkKTtmb3IodmFyIGY9MCxnPTA7ZzxlLmxlbmd0aDtnKyspZj1NYXRoLm1heChmLGVbZ10udGltZXN0YW1wKTtyZXR1cm4gZn1mdW5jdGlvbiBMcChhKXt2YXIgYj0wLGM7Zm9yKGMgaW4gYSlmb3IodmFyIGQ9YVtjXSxlPTA7ZTxkLmxlbmd0aDtlKyspYj1NYXRoLm1heChiLE51bWJlcihkW2VdLnRpbWVzdGFtcCkpO3JldHVybiBifXZhciBNcD1mdW5jdGlvbihhKXt2YXIgYj1NYXRoLm1heChLcCgiYXciLGEpLExwKGtwKGpwKCkpP1lvKCk6e30pKSxjPU1hdGgubWF4KEtwKCJnYiIsYSksTHAoa3AoanAoKSk/WW8oIl9nYWNfZ2IiLCEwKTp7fSkpO1VmKDIwKSYmKGM9TWF0aC5tYXgoYyxLcCgiYWciLGEpKSk7cmV0dXJuIGM+Yn07dmFyIGNxLGRxPSExO2Z1bmN0aW9uIGVxKCl7ZHE9ITA7Y3E9Y3F8fHt9fXZhciBmcT1mdW5jdGlvbihhKXtkcXx8ZXEoKTtyZXR1cm4gY3FbYV19O3ZhciBncT1mdW5jdGlvbihhLGIsYyl7dGhpcy50YXJnZXQ9YTt0aGlzLmV2ZW50TmFtZT1iO3RoaXMubz1jO3RoaXMuaD17fTt0aGlzLm1ldGFkYXRhPW5iKGMuZXZlbnRNZXRhZGF0YXx8e30pO3RoaXMuaXNBYm9ydGVkPSExfTtncS5wcm90b3R5cGUuY29weVRvSGl0RGF0YT1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9Vih0aGlzLm8sYSk7dm9pZCAwPT09ZCYmKGQ9Yik7aWYodm9pZCAwIT09ZCYmdm9pZCAwIT09YyYmayhkKSYmUig1MCkpdHJ5e2Q9YyhkKX1jYXRjaChlKXt9dm9pZCAwIT09ZCYmKHRoaXMuaFthXT1kKX07dmFyIGhxPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1mcShhLnRhcmdldC5iYSk7cmV0dXJuIGQmJmQuaGFzT3duUHJvcGVydHkoYik/ZFtiXTpjfTt2YXIgaXE9ZnVuY3Rpb24oKXtzaS5kZWR1cGVfZ2NsaWR8fChzaS5kZWR1cGVfZ2NsaWQ9IiIrZ28oKSk7cmV0dXJuIHNpLmRlZHVwZV9nY2xpZH07dmFyIGpxPS9eKHd3d1wuKT9nb29nbGUoXC5jb20/KT8oXC5bYS16XXsyfXQ/KT8kLyxrcT0vXnd3dy5nb29nbGVhZHNlcnZpY2VzLmNvbSQvLG1xPWZ1bmN0aW9uKGEpe2F8fChhPWxxKCkpO3JldHVybiBhLkNuPyExOmEubG18fGEubW18fGEub218fGEuQWh8fGEuUmZ8fGEuVWx8fGEuYm0/ITA6ITF9LGxxPWZ1bmN0aW9uKCl7dmFyIGE9e30sYj16byghMCk7YS5Dbj0hIWIuX3VwO3ZhciBjPXdwKCk7YS5sbT12b2lkIDAhPT1jLmF3O2EubW09dm9pZCAwIT09Yy5kYzthLm9tPXZvaWQgMCE9PWMud2JyYWlkO3ZhciBkPXZqKHoubG9jYXRpb24uaHJlZiksZT1yaihkLCJxdWVyeSIsITEsdm9pZCAwLCJnYWQiKTthLkFoPXZvaWQgMCE9PWU7aWYoIWEuQWgpe3ZhciBmPWQuaGFzaC5yZXBsYWNlKCIjIiwiIiksZz1vaihmLCJnYWQiLCExKTthLkFoPXZvaWQgMCE9PWd9YS5SZj12b2lkIDA7aWYoUig1NSkpe3ZhciBoPXJqKGQsInF1ZXJ5IiwhMSx2b2lkIDAsImdhZF9zb3VyY2UiKTthLlJmPQpoO2lmKHZvaWQgMD09PWEuUmYpe3ZhciBtPWQuaGFzaC5yZXBsYWNlKCIjIiwiIiksbj1vaihtLCJnYWRfc291cmNlIiwhMSk7YS5SZj1ufX12YXIgcD1DLnJlZmVycmVyP3JqKHZqKEMucmVmZXJyZXIpLCJob3N0Iik6IiI7YS5ibT1qcS50ZXN0KHApO2EuVWw9a3EudGVzdChwKTtyZXR1cm4gYX07dmFyIG5xPVJlZ0V4cCgiXlVBLVxcZCstXFxkKyUzQVtcXHctXSsoPzolMkNbXFx3LV0rKSooPzolM0JVQS1cXGQrLVxcZCslM0FbXFx3LV0rKD86JTJDW1xcdy1dKykqKSokIiksb3E9L15+P1tcdy1dKyg/Olwufj9bXHctXSspKiQvLHBxPS9eXGQrXC5mbHNcLmRvdWJsZWNsaWNrXC5uZXQkLyxxcT0vO2dhYz0oW147P10rKS8scnE9LztnYWNnYj0oW147P10rKS8sc3E9LztnY2xhdz0oW147P10rKS8sdHE9LztnY2xnYj0oW147P10rKS87CmZ1bmN0aW9uIHVxKGEsYil7aWYocHEudGVzdChDLmxvY2F0aW9uLmhvc3QpKXt2YXIgYz1DLmxvY2F0aW9uLmhyZWYubWF0Y2goYik7cmV0dXJuIGMmJjI9PWMubGVuZ3RoJiZjWzFdLm1hdGNoKG5xKT9kZWNvZGVVUklDb21wb25lbnQoY1sxXSk6IiJ9dmFyIGQ9W10sZTtmb3IoZSBpbiBhKXtmb3IodmFyIGY9W10sZz1hW2VdLGg9MDtoPGcubGVuZ3RoO2grKylmLnB1c2goZ1toXS5pYSk7ZC5wdXNoKGUrIjoiK2Yuam9pbigiLCIpKX1yZXR1cm4gMDxkLmxlbmd0aD9kLmpvaW4oIjsiKToiIn0KdmFyIHZxPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1rcChqcCgpKT9ZbygiX2dhY19nYiIsITApOnt9LGU9W10sZj0hMSxnO2ZvcihnIGluIGQpe3ZhciBoPUpwKCJfZ2FjX2diXyIrZyxhLGIsYyk7Zj1mfHwwIT09aC5sZW5ndGgmJmguc29tZShmdW5jdGlvbihtKXtyZXR1cm4gMT09PW19KTtlLnB1c2goZysiOiIraC5qb2luKCIsIikpfXJldHVybntUbDpmP2Uuam9pbigiOyIpOiIiLFNsOnVxKGQscnEpfX07ZnVuY3Rpb24gd3EoYSxiLGMpe2lmKHBxLnRlc3QoQy5sb2NhdGlvbi5ob3N0KSl7dmFyIGQ9Qy5sb2NhdGlvbi5ocmVmLm1hdGNoKGMpO2lmKGQmJjI9PWQubGVuZ3RoJiZkWzFdLm1hdGNoKG9xKSlyZXR1cm5be2lhOmRbMV19XX1lbHNlIHJldHVybiBtcCgoYXx8Il9nY2wiKStiKTtyZXR1cm5bXX0KdmFyIHhxPWZ1bmN0aW9uKGEpe3JldHVybiB3cShhLCJfYXciLHNxKS5tYXAoZnVuY3Rpb24oYil7cmV0dXJuIGIuaWF9KS5qb2luKCIuIil9LHlxPWZ1bmN0aW9uKGEpe3JldHVybiB3cShhLCJfZ2IiLHRxKS5tYXAoZnVuY3Rpb24oYil7cmV0dXJuIGIuaWF9KS5qb2luKCIuIil9LHpxPWZ1bmN0aW9uKGEpe3JldHVybiBwcS50ZXN0KEMubG9jYXRpb24uaG9zdCk/IShzcS50ZXN0KEMubG9jYXRpb24uaHJlZil8fHFxLnRlc3QoQy5sb2NhdGlvbi5ocmVmKSk6TXAoYSl9LEFxPWZ1bmN0aW9uKGEsYil7dmFyIGM9SnAoKGImJmIucHJlZml4fHwiX2djbCIpKyJfZ2IiLGEsYik7cmV0dXJuIDA9PT1jLmxlbmd0aHx8Yy5ldmVyeShmdW5jdGlvbihkKXtyZXR1cm4gMD09PWR9KT8iIjpjLmpvaW4oIi4iKX07dmFyIEJxPWZ1bmN0aW9uKCl7aWYoRWEoei5fX3VzcGFwaSkpe3ZhciBhPSIiO3RyeXt6Ll9fdXNwYXBpKCJnZXRVU1BEYXRhIiwxLGZ1bmN0aW9uKGIsYyl7aWYoYyYmYil7dmFyIGQ9Yi51c3BTdHJpbmc7ZCYmUmVnRXhwKCJeW1xcZGEtekEtWi1dezEsMjB9JCIpLnRlc3QoZCkmJihhPWQpfX0pfWNhdGNoKGIpe31yZXR1cm4gYX19O2Z1bmN0aW9uIEpxKGEpe3ZhciBiPVYoYS5vLE4uZy5FYiksYz1WKGEubyxOLmcuVGIpO2ImJiFjPyhhLmV2ZW50TmFtZSE9PU4uZy5kYSYmYS5ldmVudE5hbWUhPT1OLmcuQ2QmJk0oMTMxKSxhLmlzQWJvcnRlZD0hMCk6IWImJmMmJihNKDEzMiksYS5pc0Fib3J0ZWQ9ITApfWZ1bmN0aW9uIEtxKGEpe3ZhciBiPXRsKE4uZy5KKT9zaS5wc2NkbDoiZGVuaWVkIjthLmhbTi5nLnFmXT1ifTt2YXIgU3E9ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9SmMoKSxmO2lmKDE9PT1lKWE6e3ZhciBnPUVpO2c9Zy50b0xvd2VyQ2FzZSgpO2Zvcih2YXIgaD0iaHR0cHM6Ly8iK2csbT0iaHR0cDovLyIrZyxuPTEscD1DLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJzY3JpcHQiKSxxPTA7cTxwLmxlbmd0aCYmMTAwPnE7cSsrKXt2YXIgcj1wW3FdLnNyYztpZihyKXtyPXIudG9Mb3dlckNhc2UoKTtpZigwPT09ci5pbmRleE9mKG0pKXtmPTM7YnJlYWsgYX0xPT09biYmMD09PXIuaW5kZXhPZihoKSYmKG49Mil9fWY9bn1lbHNlIGY9ZTtyZXR1cm4oMj09PWZ8fGR8fCJodHRwOiIhPXoubG9jYXRpb24ucHJvdG9jb2w/YTpiKStjfTtmdW5jdGlvbiBlcihhKXtyZXR1cm57Z2V0RGVzdGluYXRpb25JZDpmdW5jdGlvbigpe3JldHVybiBhLnRhcmdldC5iYX0sZ2V0RXZlbnROYW1lOmZ1bmN0aW9uKCl7cmV0dXJuIGEuZXZlbnROYW1lfSxzZXRFdmVudE5hbWU6ZnVuY3Rpb24oYil7YS5ldmVudE5hbWU9Yn0sZ2V0SGl0RGF0YTpmdW5jdGlvbihiKXtyZXR1cm4gYS5oW2JdfSxzZXRIaXREYXRhOmZ1bmN0aW9uKGIsYyl7YS5oW2JdPWN9LHNldEhpdERhdGFJZk5vdERlZmluZWQ6ZnVuY3Rpb24oYixjKXt2b2lkIDA9PT1hLmhbYl0mJihhLmhbYl09Yyl9LGNvcHlUb0hpdERhdGE6ZnVuY3Rpb24oYixjKXthLmNvcHlUb0hpdERhdGEoYixjKX0sZ2V0TWV0YWRhdGE6ZnVuY3Rpb24oYil7cmV0dXJuIGEubWV0YWRhdGFbYl19LHNldE1ldGFkYXRhOmZ1bmN0aW9uKGIsYyl7YS5tZXRhZGF0YVtiXT1jfSxpc0Fib3J0ZWQ6ZnVuY3Rpb24oKXtyZXR1cm4gYS5pc0Fib3J0ZWR9LGFib3J0OmZ1bmN0aW9uKCl7YS5pc0Fib3J0ZWQ9CiEwfSxnZXRGcm9tRXZlbnRDb250ZXh0OmZ1bmN0aW9uKGIpe3JldHVybiBWKGEubyxiKX0sUGo6ZnVuY3Rpb24oKXtyZXR1cm4gYX0sZ2V0SGl0S2V5czpmdW5jdGlvbigpe3JldHVybiBPYmplY3Qua2V5cyhhLmgpfX19O3ZhciBncj1mdW5jdGlvbihhKXt2YXIgYj1mclthLnRhcmdldC5iYV07aWYoIWEuaXNBYm9ydGVkJiZiKWZvcih2YXIgYz1lcihhKSxkPTA7ZDxiLmxlbmd0aDsrK2Qpe3RyeXtiW2RdKGMpfWNhdGNoKGUpe2EuaXNBYm9ydGVkPSEwfWlmKGEuaXNBYm9ydGVkKWJyZWFrfX0saHI9ZnVuY3Rpb24oYSxiKXt2YXIgYz1mclthXTtjfHwoYz1mclthXT1bXSk7Yy5wdXNoKGIpfSxmcj17fTt2YXIgbXI9ZnVuY3Rpb24oKXt2YXIgYT16LnNjcmVlbjtyZXR1cm57d2lkdGg6YT9hLndpZHRoOjAsaGVpZ2h0OmE/YS5oZWlnaHQ6MH19LG5yPWZ1bmN0aW9uKGEpe2lmKEMuaGlkZGVuKXJldHVybiEwO3ZhciBiPWEuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7aWYoYi50b3A9PWIuYm90dG9tfHxiLmxlZnQ9PWIucmlnaHR8fCF6LmdldENvbXB1dGVkU3R5bGUpcmV0dXJuITA7dmFyIGM9ei5nZXRDb21wdXRlZFN0eWxlKGEsbnVsbCk7aWYoImhpZGRlbiI9PT1jLnZpc2liaWxpdHkpcmV0dXJuITA7Zm9yKHZhciBkPWEsZT1jO2Q7KXtpZigibm9uZSI9PT1lLmRpc3BsYXkpcmV0dXJuITA7dmFyIGY9ZS5vcGFjaXR5LGc9ZS5maWx0ZXI7aWYoZyl7dmFyIGg9Zy5pbmRleE9mKCJvcGFjaXR5KCIpOzA8PWgmJihnPWcuc3Vic3RyaW5nKGgrOCxnLmluZGV4T2YoIikiLGgpKSwiJSI9PWcuY2hhckF0KGcubGVuZ3RoLTEpJiYoZz1nLnN1YnN0cmluZygwLGcubGVuZ3RoLTEpKSxmPU1hdGgubWluKGcsCmYpKX1pZih2b2lkIDAhPT1mJiYwPj1mKXJldHVybiEwOyhkPWQucGFyZW50RWxlbWVudCkmJihlPXouZ2V0Q29tcHV0ZWRTdHlsZShkLG51bGwpKX1yZXR1cm4hMX07CnZhciBvcj1mdW5jdGlvbigpe3ZhciBhPUMuYm9keSxiPUMuZG9jdW1lbnRFbGVtZW50fHxhJiZhLnBhcmVudEVsZW1lbnQsYyxkO2lmKEMuY29tcGF0TW9kZSYmIkJhY2tDb21wYXQiIT09Qy5jb21wYXRNb2RlKWM9Yj9iLmNsaWVudEhlaWdodDowLGQ9Yj9iLmNsaWVudFdpZHRoOjA7ZWxzZXt2YXIgZT1mdW5jdGlvbihmLGcpe3JldHVybiBmJiZnP01hdGgubWluKGYsZyk6TWF0aC5tYXgoZixnKX07Yz1lKGI/Yi5jbGllbnRIZWlnaHQ6MCxhP2EuY2xpZW50SGVpZ2h0OjApO2Q9ZShiP2IuY2xpZW50V2lkdGg6MCxhP2EuY2xpZW50V2lkdGg6MCl9cmV0dXJue3dpZHRoOmQsaGVpZ2h0OmN9fSxwcj1mdW5jdGlvbihhKXt2YXIgYj1vcigpLGM9Yi5oZWlnaHQsZD1iLndpZHRoLGU9YS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxmPWUuYm90dG9tLWUudG9wLGc9ZS5yaWdodC1lLmxlZnQ7cmV0dXJuIGYmJmc/KDEtTWF0aC5taW4oKE1hdGgubWF4KDAtZS5sZWZ0LDApK01hdGgubWF4KGUucmlnaHQtCmQsMCkpL2csMSkpKigxLU1hdGgubWluKChNYXRoLm1heCgwLWUudG9wLDApK01hdGgubWF4KGUuYm90dG9tLWMsMCkpL2YsMSkpOjB9O3ZhciBxcj1bXSxycj0hKCF6LkludGVyc2VjdGlvbk9ic2VydmVyfHwhei5JbnRlcnNlY3Rpb25PYnNlcnZlckVudHJ5KSxzcj1mdW5jdGlvbihhLGIsYyl7Zm9yKHZhciBkPW5ldyB6LkludGVyc2VjdGlvbk9ic2VydmVyKGEse3RocmVzaG9sZDpjfSksZT0wO2U8Yi5sZW5ndGg7ZSsrKWQub2JzZXJ2ZShiW2VdKTtmb3IodmFyIGY9MDtmPHFyLmxlbmd0aDtmKyspaWYoIXFyW2ZdKXJldHVybiBxcltmXT1kLGY7cmV0dXJuIHFyLnB1c2goZCktMX0sdHI9ZnVuY3Rpb24oYSxiLGMpe2Z1bmN0aW9uIGQoaCxtKXt2YXIgbj17dG9wOjAsYm90dG9tOjAscmlnaHQ6MCxsZWZ0OjAsd2lkdGg6MCxoZWlnaHQ6MH0scD17Ym91bmRpbmdDbGllbnRSZWN0OmguZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksCmludGVyc2VjdGlvblJhdGlvOm0saW50ZXJzZWN0aW9uUmVjdDpuLGlzSW50ZXJzZWN0aW5nOjA8bSxyb290Qm91bmRzOm4sdGFyZ2V0OmgsdGltZTpUYSgpfTtIKGZ1bmN0aW9uKCl7cmV0dXJuIGEocCl9KX1mb3IodmFyIGU9W10sZj1bXSxnPTA7ZzxiLmxlbmd0aDtnKyspZS5wdXNoKDApLGYucHVzaCgtMSk7Yy5zb3J0KGZ1bmN0aW9uKGgsbSl7cmV0dXJuIGgtbX0pO3JldHVybiBmdW5jdGlvbigpe2Zvcih2YXIgaD0wO2g8Yi5sZW5ndGg7aCsrKXt2YXIgbT1wcihiW2hdKTtpZihtPmVbaF0pZm9yKDtmW2hdPGMubGVuZ3RoLTEmJm0+PWNbZltoXSsxXTspZChiW2hdLG0pLGZbaF0rKztlbHNlIGlmKG08ZVtoXSlmb3IoOzA8PWZbaF0mJm08PWNbZltoXV07KWQoYltoXSxtKSxmW2hdLS07ZVtoXT1tfX19LHVyPWZ1bmN0aW9uKGEsYixjKXtmb3IodmFyIGQ9MDtkPGMubGVuZ3RoO2QrKykxPGNbZF0/Y1tkXT0xOjA+Y1tkXSYmKGNbZF09MCk7aWYocnIpe3ZhciBlPSExO0goZnVuY3Rpb24oKXtlfHwKdHIoYSxiLGMpKCl9KTtyZXR1cm4gc3IoZnVuY3Rpb24oZil7ZT0hMDtmb3IodmFyIGc9e09lOjB9O2cuT2U8Zi5sZW5ndGg7Zz17T2U6Zy5PZX0sZy5PZSsrKUgoZnVuY3Rpb24oaCl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIGEoZltoLk9lXSl9fShnKSl9LGIsYyl9cmV0dXJuIHouc2V0SW50ZXJ2YWwodHIoYSxiLGMpLDFFMyl9LHZyPWZ1bmN0aW9uKGEpe3JyPzA8PWEmJmE8cXIubGVuZ3RoJiZxclthXSYmKHFyW2FdLmRpc2Nvbm5lY3QoKSxxclthXT12b2lkIDApOnouY2xlYXJJbnRlcnZhbChhKX07CnZhciB4cj1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9YS5lbGVtZW50LGU9e1U6YS5VLHR5cGU6YS5xYSx0YWdOYW1lOmQudGFnTmFtZX07YiYmKGUucXVlcnlTZWxlY3Rvcj13cihkKSk7YyYmKGUuaXNWaXNpYmxlPSFucihkKSk7cmV0dXJuIGV9LHlyPWZ1bmN0aW9uKGEsYixjKXtyZXR1cm4geHIoe2VsZW1lbnQ6YS5lbGVtZW50LFU6YS5VLHFhOiIxIn0sYixjKX0senI9ZnVuY3Rpb24oYSl7dmFyIGI9ISFhLnVkKyIuIishIWEudmQ7YSYmYS5FZSYmYS5FZS5sZW5ndGgmJihiKz0iLiIrYS5FZS5qb2luKCIuIikpO2EmJmEud2ImJihiKz0iLiIrYS53Yi5lbWFpbCsiLiIrYS53Yi5waG9uZSsiLiIrYS53Yi5hZGRyZXNzKTtyZXR1cm4gYn0sQ3I9ZnVuY3Rpb24oYSl7aWYoMCE9YS5sZW5ndGgpe3ZhciBiO2I9QXIoYSxmdW5jdGlvbihjKXtyZXR1cm4hQnIudGVzdChjLlUpfSk7Yj1BcihiLGZ1bmN0aW9uKGMpe3JldHVybiJJTlBVVCI9PT1jLmVsZW1lbnQudGFnTmFtZS50b1VwcGVyQ2FzZSgpfSk7CmI9QXIoYixmdW5jdGlvbihjKXtyZXR1cm4hbnIoYy5lbGVtZW50KX0pO3JldHVybiBiWzBdfX0sRHI9ZnVuY3Rpb24oYSxiKXtpZighYnx8MD09PWIubGVuZ3RoKXJldHVybiBhO2Zvcih2YXIgYz1bXSxkPTA7ZDxhLmxlbmd0aDtkKyspe2Zvcih2YXIgZT0hMCxmPTA7ZjxiLmxlbmd0aDtmKyspe3ZhciBnPWJbZl07aWYoZyYmQWgoYVtkXS5lbGVtZW50LGcpKXtlPSExO2JyZWFrfX1lJiZjLnB1c2goYVtkXSl9cmV0dXJuIGN9LEFyPWZ1bmN0aW9uKGEsYil7aWYoMT49YS5sZW5ndGgpcmV0dXJuIGE7dmFyIGM9YS5maWx0ZXIoYik7cmV0dXJuIDA9PWMubGVuZ3RoP2E6Y30sd3I9ZnVuY3Rpb24oYSl7dmFyIGI7aWYoYT09PUMuYm9keSliPSJib2R5IjtlbHNle3ZhciBjO2lmKGEuaWQpYz0iIyIrYS5pZDtlbHNle3ZhciBkO2lmKGEucGFyZW50RWxlbWVudCl7dmFyIGU7YTp7dmFyIGY9YS5wYXJlbnRFbGVtZW50O2lmKGYpe2Zvcih2YXIgZz0wO2c8Zi5jaGlsZEVsZW1lbnRDb3VudDtnKyspaWYoZi5jaGlsZHJlbltnXT09PQphKXtlPWcrMTticmVhayBhfWU9LTF9ZWxzZSBlPTF9ZD13cihhLnBhcmVudEVsZW1lbnQpKyI+Om50aC1jaGlsZCgiK2UrIikifWVsc2UgZD0iIjtjPWR9Yj1jfXJldHVybiBifSxGcj1mdW5jdGlvbihhKXtmb3IodmFyIGI9W10sYz0wO2M8YS5sZW5ndGg7YysrKXt2YXIgZD1hW2NdLGU9ZC50ZXh0Q29udGVudDsiSU5QVVQiPT09ZC50YWdOYW1lLnRvVXBwZXJDYXNlKCkmJmQudmFsdWUmJihlPWQudmFsdWUpO2lmKGUpe3ZhciBmPWUubWF0Y2goRXIpO2lmKGYpe3ZhciBnPWZbMF0saDtpZih6LmxvY2F0aW9uKXt2YXIgbT1xaih6LmxvY2F0aW9uLCJob3N0IiwhMCk7aD0wPD1nLnRvTG93ZXJDYXNlKCkuaW5kZXhPZihtKX1lbHNlIGg9ITE7aHx8Yi5wdXNoKHtlbGVtZW50OmQsVTpnfSl9fX1yZXR1cm4gYn0sSnI9ZnVuY3Rpb24oKXt2YXIgYT1bXSxiPUMuYm9keTtpZighYilyZXR1cm57ZWxlbWVudHM6YSxzdGF0dXM6IjQifTtmb3IodmFyIGM9Yi5xdWVyeVNlbGVjdG9yQWxsKCIqIiksCmQ9MDtkPGMubGVuZ3RoJiYxRTQ+ZDtkKyspe3ZhciBlPWNbZF07aWYoISgwPD1Hci5pbmRleE9mKGUudGFnTmFtZS50b1VwcGVyQ2FzZSgpKSkmJmUuY2hpbGRyZW4gaW5zdGFuY2VvZiBIVE1MQ29sbGVjdGlvbil7Zm9yKHZhciBmPSExLGc9MDtnPGUuY2hpbGRFbGVtZW50Q291bnQmJjFFND5nO2crKylpZighKDA8PUhyLmluZGV4T2YoZS5jaGlsZHJlbltnXS50YWdOYW1lLnRvVXBwZXJDYXNlKCkpKSl7Zj0hMDticmVha30oIWZ8fFIoMjApJiYtMSE9PUlyLmluZGV4T2YoZS50YWdOYW1lKSkmJmEucHVzaChlKX19cmV0dXJue2VsZW1lbnRzOmEsc3RhdHVzOjFFNDxjLmxlbmd0aD8iMiI6IjEifX0sS3I9ITE7dmFyIEVyPS9bQS1aMC05Ll8lKy1dK0BbQS1aMC05Li1dK1wuW0EtWl17Mix9L2ksCkxyPS9AKGdtYWlsfGdvb2dsZW1haWwpXC4vaSxCcj0vc3VwcG9ydHxub3JlcGx5L2ksR3I9IlNDUklQVCBTVFlMRSBJTUcgU1ZHIFBBVEggQlIgTk9TQ1JJUFQgVEVYVEFSRUEiLnNwbGl0KCIgIiksSHI9WyJCUiJdLE1yPXtLbjoiMSIsWW46IjIiLE9uOiIzIixTbjoiNCIsSG46IjUiLFpuOiI2IixVbjoiNyJ9LE5yPXt9LElyPVsiSU5QVVQiLCJTRUxFQ1QiXTt2YXIgZnM9ZnVuY3Rpb24oYSl7YT1hfHx7dWQ6ITAsdmQ6ITB9O2Eud2I9YS53Ynx8e2VtYWlsOiEwLHBob25lOiExLGFkZHJlc3M6ITF9O3ZhciBiPXpyKGEpLGM9TnJbYl07aWYoYyYmMjAwPlRhKCktYy50aW1lc3RhbXApcmV0dXJuIGMucmVzdWx0O3ZhciBkPUpyKCksZT1kLnN0YXR1cywKZj1bXSxnLGgsbT1bXTtpZighUigyMCkpe2lmKGEud2ImJmEud2IuZW1haWwpe3ZhciBuPUZyKGQuZWxlbWVudHMpO2Y9RHIobixhJiZhLkVlKTtnPUNyKGYpOzEwPG4ubGVuZ3RoJiYoZT0iMyIpfSFhLmRpJiZnJiYoZj1bZ10pO2Zvcih2YXIgcD0wO3A8Zi5sZW5ndGg7cCsrKW0ucHVzaCh5cihmW3BdLGEudWQsYS52ZCkpO209bS5zbGljZSgwLDEwKX1lbHNlIGlmKGEud2Ipe31nJiYoaD15cihnLGEudWQsYS52ZCkpO3ZhciBGPXtlbGVtZW50czptLFVoOmgsc3RhdHVzOmV9O05yW2JdPXt0aW1lc3RhbXA6VGEoKSxyZXN1bHQ6Rn07cmV0dXJuIEZ9LGdzPWZ1bmN0aW9uKGEpe3JldHVybiBhLnRhZ05hbWUrIjoiK2EuaXNWaXNpYmxlKyI6IithLlUubGVuZ3RoKyI6IitMci50ZXN0KGEuVSl9O3ZhciBocz1mdW5jdGlvbihhKXtyZXR1cm4gaHEoYSxOLmcuU2IsVihhLm8sTi5nLlNiKSl8fGhxKGEsImdvb2dsZV9vbm8iLCExKX0saXM9ZnVuY3Rpb24oYSl7aWYoYS5tZXRhZGF0YS5pc19tZXJjaGFudF9jZW50ZXJ8fCFIaihhLm8pKXJldHVybiExO2lmKCFWKGEubyxOLmcuamQpKXt2YXIgYj1WKGEubyxOLmcueGMpO3JldHVybiEwPT09Ynx8InRydWUiPT09Yn1yZXR1cm4hMH0sanM9ZnVuY3Rpb24oYSl7dmFyIGI9YS5tZXRhZGF0YS51c2VyX2RhdGE7aWYobGIoYikpcmV0dXJuIGJ9LGtzPWZ1bmN0aW9uKGEsYil7dmFyIGM9aHEoYSxOLmcuUmQsYS5vLnNbTi5nLlJkXSk7aWYoYyYmdm9pZCAwIT09Y1tifHxhLmV2ZW50TmFtZV0pcmV0dXJuIGNbYnx8YS5ldmVudE5hbWVdfSxscz1mdW5jdGlvbihhLGIsYyl7YS5oW04uZy52ZV18fChhLmhbTi5nLnZlXT17fSk7YS5oW04uZy52ZV1bYl09Y307dmFyIG1zPXt2bDpOdW1iZXIoJycpfHw1MDAsWGs6TnVtYmVyKCcnKXx8NUUzLHBqOk51bWJlcignMjAnKXx8MTAsRGs6TnVtYmVyKCcnKXx8NUUzfTtmdW5jdGlvbiBucyhhKXtyZXR1cm4gYS5wZXJmb3JtYW5jZSYmYS5wZXJmb3JtYW5jZS5ub3coKXx8RGF0ZS5ub3coKX0KdmFyIG9zPWZ1bmN0aW9uKGEsYil7dmFyIGM7cmV0dXJuIGN9O3ZhciBwcz0iaHR0cHM6Ly8iK3JpLkJkLHFzPXBzKyIvZ3RtL3N0YXRpYy8iLHJzPU51bWJlcignJyl8fDUsc3M9TnVtYmVyKCcnKXx8NTAsdHM9cHMsdXM9cXMsdnM9ITEsd3M9MCx4cz1KYSgpOwpmdW5jdGlvbiBJcygpe3ZhciBhPSExO3JldHVybiBhfQpmdW5jdGlvbiBKcyhhKXt2YXIgYj1NYXRoLnJvdW5kKFRhKCkpO30KZnVuY3Rpb24gS3MoYSxiLGMpe30KZnVuY3Rpb24gRnMoYSxiLGMsZCl7fQpmdW5jdGlvbiB6cyhhLGIsYyxkLGUpe30KZnVuY3Rpb24gTHMoYSxiLGMsZCl7fQpmdW5jdGlvbiBNcyhhLGIsYyxkKXt9CmZ1bmN0aW9uIE5zKGEpe3ZhciBiPXt9LGM9WyJ0di4xIl0sZD0wOwp2YXIgdT1jLmpvaW4oIn4iKTtyZXR1cm57VTpiLFhmOnV9fXZhciBPcz12b2lkIDA7ZnVuY3Rpb24gUHMoYSl7dmFyIGI9W107cmV0dXJuIGJ9O3ZhciBRcz1mdW5jdGlvbihhKXtmb3IodmFyIGI9W10sYz0wLGQ9MDtkPGEubGVuZ3RoO2QrKyl7dmFyIGU9YS5jaGFyQ29kZUF0KGQpOzEyOD5lP2JbYysrXT1lOigyMDQ4PmU/YltjKytdPWU+PjZ8MTkyOig1NTI5Nj09KGUmNjQ1MTIpJiZkKzE8YS5sZW5ndGgmJjU2MzIwPT0oYS5jaGFyQ29kZUF0KGQrMSkmNjQ1MTIpPyhlPTY1NTM2KygoZSYxMDIzKTw8MTApKyhhLmNoYXJDb2RlQXQoKytkKSYxMDIzKSxiW2MrK109ZT4+MTh8MjQwLGJbYysrXT1lPj4xMiY2M3wxMjgpOmJbYysrXT1lPj4xMnwyMjQsYltjKytdPWU+PjYmNjN8MTI4KSxiW2MrK109ZSY2M3wxMjgpfXJldHVybiBifTskYigpO0JtKCl8fFhiKCJpUG9kIik7WGIoImlQYWQiKTshWGIoIkFuZHJvaWQiKXx8YWMoKXx8JGIoKXx8WmIoKXx8WGIoIlNpbGsiKTthYygpOyFYYigiU2FmYXJpIil8fGFjKCl8fChZYigpPzA6WGIoIkNvYXN0IikpfHxaYigpfHwoWWIoKT8wOlhiKCJFZGdlIikpfHwoWWIoKT9XYigiTWljcm9zb2Z0IEVkZ2UiKTpYYigiRWRnLyIpKXx8KFliKCk/V2IoIk9wZXJhIik6WGIoIk9QUiIpKXx8JGIoKXx8WGIoIlNpbGsiKXx8WGIoIkFuZHJvaWQiKXx8Q20oKTt2YXIgUnM9e30sU3M9bnVsbCxUcz1mdW5jdGlvbihhKXtmb3IodmFyIGI9W10sYz0wLGQ9MDtkPGEubGVuZ3RoO2QrKyl7dmFyIGU9YS5jaGFyQ29kZUF0KGQpOzI1NTxlJiYoYltjKytdPWUmMjU1LGU+Pj04KTtiW2MrK109ZX12YXIgZj00O3ZvaWQgMD09PWYmJihmPTApO2lmKCFTcyl7U3M9e307Zm9yKHZhciBnPSJBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSIuc3BsaXQoIiIpLGg9WyIrLz0iLCIrLyIsIi1fPSIsIi1fLiIsIi1fIl0sbT0wOzU+bTttKyspe3ZhciBuPWcuY29uY2F0KGhbbV0uc3BsaXQoIiIpKTtSc1ttXT1uO2Zvcih2YXIgcD0wO3A8bi5sZW5ndGg7cCsrKXt2YXIgcT1uW3BdO3ZvaWQgMD09PVNzW3FdJiYoU3NbcV09cCl9fX1mb3IodmFyIHI9UnNbZl0sdD1BcnJheShNYXRoLmZsb29yKGIubGVuZ3RoLzMpKSx1PXJbNjRdfHwiIix2PTAsdz0wO3Y8Yi5sZW5ndGgtMjt2Kz0zKXt2YXIgeD1iW3ZdLAp5PWJbdisxXSxCPWJbdisyXSxBPXJbeD4+Ml0sRj1yWyh4JjMpPDw0fHk+PjRdLEc9clsoeSYxNSk8PDJ8Qj4+Nl0sRD1yW0ImNjNdO3RbdysrXT0iIitBK0YrRytEfXZhciBFPTAsTz11O3N3aXRjaChiLmxlbmd0aC12KXtjYXNlIDI6RT1iW3YrMV0sTz1yWyhFJjE1KTw8Ml18fHU7Y2FzZSAxOnZhciBQPWJbdl07dFt3XT0iIityW1A+PjJdK3JbKFAmMyk8PDR8RT4+NF0rTyt1fXJldHVybiB0LmpvaW4oIiIpfTtPYmplY3QuZnJlZXplKG5ldyBmdW5jdGlvbigpe30pO09iamVjdC5mcmVlemUobmV3IGZ1bmN0aW9uKCl7fSk7dmFyIFVzPSJwbGF0Zm9ybSBwbGF0Zm9ybVZlcnNpb24gYXJjaGl0ZWN0dXJlIG1vZGVsIHVhRnVsbFZlcnNpb24gYml0bmVzcyBmdWxsVmVyc2lvbkxpc3Qgd293NjQiLnNwbGl0KCIgIik7ZnVuY3Rpb24gVnMoYSl7dmFyIGI7cmV0dXJuIG51bGwhPShiPWEuZ29vZ2xlX3RhZ19kYXRhKT9iOmEuZ29vZ2xlX3RhZ19kYXRhPXt9fWZ1bmN0aW9uIFdzKCl7dmFyIGE9ei5nb29nbGVfdGFnX2RhdGEsYjtpZihudWxsIT1hJiZhLnVhY2gpe3ZhciBjPWEudWFjaCxkPU9iamVjdC5hc3NpZ24oe30sYyk7Yy5mdWxsVmVyc2lvbkxpc3QmJihkLmZ1bGxWZXJzaW9uTGlzdD1jLmZ1bGxWZXJzaW9uTGlzdC5zbGljZSgwKSk7Yj1kfWVsc2UgYj1udWxsO3JldHVybiBifWZ1bmN0aW9uIFhzKCl7dmFyIGEsYjtyZXR1cm4gbnVsbCE9KGI9bnVsbD09KGE9ei5nb29nbGVfdGFnX2RhdGEpP3ZvaWQgMDphLnVhY2hfcHJvbWlzZSk/YjpudWxsfQpmdW5jdGlvbiBZcyhhKXt2YXIgYixjO3JldHVybiJmdW5jdGlvbiI9PT10eXBlb2YobnVsbD09KGI9YS5uYXZpZ2F0b3IpP3ZvaWQgMDpudWxsPT0oYz1iLnVzZXJBZ2VudERhdGEpP3ZvaWQgMDpjLmdldEhpZ2hFbnRyb3B5VmFsdWVzKX1mdW5jdGlvbiBacygpe3ZhciBhPXo7aWYoIVlzKGEpKXJldHVybiBudWxsO3ZhciBiPVZzKGEpO2lmKGIudWFjaF9wcm9taXNlKXJldHVybiBiLnVhY2hfcHJvbWlzZTt2YXIgYz1hLm5hdmlnYXRvci51c2VyQWdlbnREYXRhLmdldEhpZ2hFbnRyb3B5VmFsdWVzKFVzKS50aGVuKGZ1bmN0aW9uKGQpe251bGwhPWIudWFjaHx8KGIudWFjaD1kKTtyZXR1cm4gZH0pO3JldHVybiBiLnVhY2hfcHJvbWlzZT1jfTsKdmFyICRzLGF0PWZ1bmN0aW9uKCl7aWYoWXMoeikmJigkcz1UYSgpLCFYcygpKSl7dmFyIGE9WnMoKTthJiYoYS50aGVuKGZ1bmN0aW9uKCl7TSg5NSk7fSksYS5jYXRjaChmdW5jdGlvbigpe00oOTYpfSkpfX0sY3Q9ZnVuY3Rpb24oYSl7dmFyIGI9YnQuQW4sYz1mdW5jdGlvbihnLGgpe3RyeXthKGcsaCl9Y2F0Y2gobSl7fX0sZD1XcygpO2lmKGQpYyhkKTtlbHNle3ZhciBlPVhzKCk7aWYoZSl7Yj0KTWF0aC5taW4oTWF0aC5tYXgoaXNGaW5pdGUoYik/YjowLDApLDFFMyk7dmFyIGY9ei5zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Yy5RZXx8KGMuUWU9ITAsTSgxMDYpLGMobnVsbCxFcnJvcigiVGltZW91dCIpKSl9LGIpO2UudGhlbihmdW5jdGlvbihnKXtjLlFlfHwoYy5RZT0hMCxNKDEwNCksei5jbGVhclRpbWVvdXQoZiksYyhnKSl9KS5jYXRjaChmdW5jdGlvbihnKXtjLlFlfHwoYy5RZT0hMCxNKDEwNSksei5jbGVhclRpbWVvdXQoZiksYyhudWxsLGcpKX0pfWVsc2UgYyhudWxsKX19LGR0PWZ1bmN0aW9uKGEsYil7YSYmKGIuaFtOLmcuY2VdPWEuYXJjaGl0ZWN0dXJlLGIuaFtOLmcuZGVdPWEuYml0bmVzcyxhLmZ1bGxWZXJzaW9uTGlzdCYmKGIuaFtOLmcuZWVdPWEuZnVsbFZlcnNpb25MaXN0Lm1hcChmdW5jdGlvbihjKXtyZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KGMuYnJhbmR8fCIiKSsiOyIrZW5jb2RlVVJJQ29tcG9uZW50KGMudmVyc2lvbnx8IiIpfSkuam9pbigifCIpKSwKYi5oW04uZy5mZV09YS5tb2JpbGU/IjEiOiIwIixiLmhbTi5nLmhlXT1hLm1vZGVsLGIuaFtOLmcuaWVdPWEucGxhdGZvcm0sYi5oW04uZy5qZV09YS5wbGF0Zm9ybVZlcnNpb24sYi5oW04uZy5rZV09YS53b3c2ND8iMSI6IjAiKX07ZnVuY3Rpb24gZXQoKXtyZXR1cm4iYXR0cmlidXRpb24tcmVwb3J0aW5nIn1mdW5jdGlvbiBmdChhKXt2YXIgYjtiPXZvaWQgMD09PWI/ZG9jdW1lbnQ6Yjt2YXIgYztyZXR1cm4hKG51bGw9PShjPWIuZmVhdHVyZVBvbGljeSl8fCFjLmFsbG93ZWRGZWF0dXJlcygpLmluY2x1ZGVzKGEpKX07dmFyIGd0PSExO2Z1bmN0aW9uIGh0KCl7aWYoZnQoImpvaW4tYWQtaW50ZXJlc3QtZ3JvdXAiKSYmRWEoQmMuam9pbkFkSW50ZXJlc3RHcm91cCkpcmV0dXJuITA7Z3R8fChLbSgnQXltcXdSQzd1ODhZNEpQdmZJRjJGMzdRS3lsQzA0MjQ4aExDZEpBc2g4eGdPZmUvZFZKUFYzWFMzd0xGY2ExWk1WT3RuQmZWamFDTVRWdWRXTS8vNWc0QUFBQjdleUp2Y21sbmFXNGlPaUpvZEhSd2N6b3ZMM2QzZHk1bmIyOW5iR1YwWVdkdFlXNWhaMlZ5TG1OdmJUbzBORE1pTENKbVpXRjBkWEpsSWpvaVVISnBkbUZqZVZOaGJtUmliM2hCWkhOQlVFbHpJaXdpWlhod2FYSjVJam94TmprMU1UWTNPVGs1TENKcGMxUm9hWEprVUdGeWRIa2lPblJ5ZFdWOScpLGd0PSEwKTtyZXR1cm4gZnQoImpvaW4tYWQtaW50ZXJlc3QtZ3JvdXAiKSYmRWEoQmMuam9pbkFkSW50ZXJlc3RHcm91cCl9CmZ1bmN0aW9uIGl0KGEsYil7dmFyIGM9dm9pZCAwO3RyeXtjPUMucXVlcnlTZWxlY3RvcignaWZyYW1lW2RhdGEtdGFnZ2luZy1pZD0iJytiKyciXScpfWNhdGNoKGUpe31pZihjKXt2YXIgZD1OdW1iZXIoYy5kYXRhc2V0LmxvYWRUaW1lKTtpZihkJiZUYSgpLWQ8KHZvaWQgMD09VGZbMV0/NkU0OlRmWzFdKSl7QWIoIlRBR0dJTkciLDkpO3JldHVybn10cnl7Yy5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGMpfWNhdGNoKGUpe31jPXZvaWQgMH1lbHNlIHRyeXtpZihDLnF1ZXJ5U2VsZWN0b3JBbGwoJ2lmcmFtZVthbGxvdz0iam9pbi1hZC1pbnRlcmVzdC1ncm91cCJdW2RhdGEtdGFnZ2luZy1pZCo9Ii0iXScpLmxlbmd0aD49KHZvaWQgMD09VGZbMl0/NTA6VGZbMl0pKXtBYigiVEFHR0lORyIsMTApO3JldHVybn19Y2F0Y2goZSl7fUtjKGEsdm9pZCAwLHthbGxvdzoiam9pbi1hZC1pbnRlcmVzdC1ncm91cCJ9LHt0YWdnaW5nSWQ6Yixsb2FkVGltZTpUYSgpfSxjKX0KZnVuY3Rpb24ganQoKXtyZXR1cm4iaHR0cHM6Ly90ZC5kb3VibGVjbGljay5uZXQifTt2YXIgZHU9e0g6e2ppOiJhZHNfY29udmVyc2lvbl9oaXQiLEFkOiJjb250YWluZXJfZXhlY3V0ZV9zdGFydCIsbWk6ImNvbnRhaW5lcl9zZXR1cF9lbmQiLGtnOiJjb250YWluZXJfc2V0dXBfc3RhcnQiLGtpOiJjb250YWluZXJfYmxvY2tpbmdfZW5kIixsaToiY29udGFpbmVyX2V4ZWN1dGVfZW5kIixuaToiY29udGFpbmVyX3lpZWxkX2VuZCIsbGc6ImNvbnRhaW5lcl95aWVsZF9zdGFydCIsaWo6ImV2ZW50X2V4ZWN1dGVfZW5kIixnajoiZXZlbnRfZXZhbHVhdGlvbl9lbmQiLFpnOiJldmVudF9ldmFsdWF0aW9uX3N0YXJ0IixqajoiZXZlbnRfc2V0dXBfZW5kIixwZToiZXZlbnRfc2V0dXBfc3RhcnQiLGtqOiJnYTRfY29udmVyc2lvbl9oaXQiLHNlOiJwYWdlX2xvYWQiLFhuOiJwYWdldmlldyIsYmM6InNuaXBwZXRfbG9hZCIseWo6InRhZ19jYWxsYmFja19lcnJvciIsemo6InRhZ19jYWxsYmFja19mYWlsdXJlIixBajoidGFnX2NhbGxiYWNrX3N1Y2Nlc3MiLEJqOiJ0YWdfZXhlY3V0ZV9lbmQiLApvZDoidGFnX2V4ZWN1dGVfc3RhcnQifX07ZnVuY3Rpb24gZXUoKXtmdW5jdGlvbiBhKGMsZCl7dmFyIGU9QmIoZCk7ZSYmYi5wdXNoKFtjLGVdKX12YXIgYj1bXTthKCJ1IiwiR1RNIik7YSgidXQiLCJUQUdHSU5HIik7YSgiaCIsIkhFQUxUSCIpO3JldHVybiBifTt2YXIgZnU9ITE7CnZhciBOdT1mdW5jdGlvbihhLGIpe30sT3U9ZnVuY3Rpb24oYSxiKXt9LFB1PWZ1bmN0aW9uKGEsYil7fSxRdT1mdW5jdGlvbihhLGIpe30sUnU9ZnVuY3Rpb24oKXt2YXIgYT17fTtyZXR1cm4gYX0sRnU9ZnVuY3Rpb24oYSl7YT12b2lkIDA9PT1hPyEwOmE7dmFyIGI9e307cmV0dXJuIGJ9LFN1PWZ1bmN0aW9uKCl7fSxUdT1mdW5jdGlvbihhLGIpe30sVXU9ZnVuY3Rpb24oYSxiLGMpe30sVnU9ZnVuY3Rpb24oKXt9O3ZhciBXdT1mdW5jdGlvbihhLGIpe3ZhciBjPXosZCxlPWMuR29vZ2xlYlFoQ3NPO2V8fChlPXt9LGMuR29vZ2xlYlFoQ3NPPWUpO2Q9ZTtpZihkW2FdKXJldHVybiExO2RbYV09W107ZFthXVswXT1iO3JldHVybiEwfTt2YXIgWHU9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPUZtKGEsImZtdCIpO2lmKGIpe3ZhciBlPUZtKGEsInJhbmRvbSIpLGY9Rm0oYSwibGFiZWwiKXx8IiI7aWYoIWUpcmV0dXJuITE7dmFyIGc9VHMoZGVjb2RlVVJJQ29tcG9uZW50KGYucmVwbGFjZSgvXCsvZywiICIpKSsiOiIrZGVjb2RlVVJJQ29tcG9uZW50KGUucmVwbGFjZSgvXCsvZywiICIpKSk7aWYoIVd1KGcsYikpcmV0dXJuITF9ZCYmNCE9ZCYmKGE9SG0oYSwicmZtdCIsZCkpO3ZhciBoPUhtKGEsImZtdCIsNCk7SWMoaCxmdW5jdGlvbigpe3ouZ29vZ2xlX25vRnVydGhlclJlZGlyZWN0cyYmYiYmYi5jYWxsJiYoei5nb29nbGVfbm9GdXJ0aGVyUmVkaXJlY3RzPW51bGwsYigpKX0sdm9pZCAwLGMsQy5nZXRFbGVtZW50c0J5VGFnTmFtZSgic2NyaXB0IilbMF0ucGFyZW50RWxlbWVudHx8dm9pZCAwKTtyZXR1cm4hMH07dmFyIG52PWZ1bmN0aW9uKCl7dGhpcy5oPXt9fSxvdj1mdW5jdGlvbihhLGIsYyl7bnVsbCE9YyYmKGEuaFtiXT1jKX0scHY9ZnVuY3Rpb24oYSl7cmV0dXJuIE9iamVjdC5rZXlzKGEuaCkubWFwKGZ1bmN0aW9uKGIpe3JldHVybiBlbmNvZGVVUklDb21wb25lbnQoYikrIj0iK2VuY29kZVVSSUNvbXBvbmVudChhLmhbYl0pfSkuam9pbigiJiIpfSxydj1mdW5jdGlvbihhLGIsYyxkKXt9O2Z1bmN0aW9uIHR2KGEsYil7aWYoZGF0YS5lbnRpdGllcyYmZGF0YS5lbnRpdGllc1thXSlyZXR1cm4gZGF0YS5lbnRpdGllc1thXVtiXX07dmFyIHZ2PWZ1bmN0aW9uKGEsYixjKXtjPXZvaWQgMD09PWM/ITE6Yzt1digpLmFkZFJlc3RyaWN0aW9uKDAsYSxiLGMpfSx3dj1mdW5jdGlvbihhLGIsYyl7Yz12b2lkIDA9PT1jPyExOmM7dXYoKS5hZGRSZXN0cmljdGlvbigxLGEsYixjKX0seHY9ZnVuY3Rpb24oKXt2YXIgYT1YaigpO3JldHVybiB1digpLmdldFJlc3RyaWN0aW9ucygxLGEpfSx5dj1mdW5jdGlvbigpe3RoaXMuaD17fTt0aGlzLnM9e319LHp2PWZ1bmN0aW9uKGEsYil7dmFyIGM9YS5oW2JdO2N8fChjPXtfZW50aXR5OntpbnRlcm5hbDpbXSxleHRlcm5hbDpbXX0sX2V2ZW50OntpbnRlcm5hbDpbXSxleHRlcm5hbDpbXX19LGEuaFtiXT1jKTtyZXR1cm4gY307Cnl2LnByb3RvdHlwZS5hZGRSZXN0cmljdGlvbj1mdW5jdGlvbihhLGIsYyxkKXtkPXZvaWQgMD09PWQ/ITE6ZDtpZighZHx8IXRoaXMuc1tiXSl7dmFyIGU9enYodGhpcyxiKTswPT09YT9kP2UuX2VudGl0eS5leHRlcm5hbC5wdXNoKGMpOmUuX2VudGl0eS5pbnRlcm5hbC5wdXNoKGMpOjE9PT1hJiYoZD9lLl9ldmVudC5leHRlcm5hbC5wdXNoKGMpOmUuX2V2ZW50LmludGVybmFsLnB1c2goYykpfX07Cnl2LnByb3RvdHlwZS5nZXRSZXN0cmljdGlvbnM9ZnVuY3Rpb24oYSxiKXt2YXIgYz16dih0aGlzLGIpO2lmKDA9PT1hKXt2YXIgZCxlO3JldHVybltdLmNvbmNhdChrYSgobnVsbD09Yz92b2lkIDA6bnVsbD09KGQ9Yy5fZW50aXR5KT92b2lkIDA6ZC5pbnRlcm5hbCl8fFtdKSxrYSgobnVsbD09Yz92b2lkIDA6bnVsbD09KGU9Yy5fZW50aXR5KT92b2lkIDA6ZS5leHRlcm5hbCl8fFtdKSl9aWYoMT09PWEpe3ZhciBmLGc7cmV0dXJuW10uY29uY2F0KGthKChudWxsPT1jP3ZvaWQgMDpudWxsPT0oZj1jLl9ldmVudCk/dm9pZCAwOmYuaW50ZXJuYWwpfHxbXSksa2EoKG51bGw9PWM/dm9pZCAwOm51bGw9PShnPWMuX2V2ZW50KT92b2lkIDA6Zy5leHRlcm5hbCl8fFtdKSl9cmV0dXJuW119Owp5di5wcm90b3R5cGUuZ2V0RXh0ZXJuYWxSZXN0cmljdGlvbnM9ZnVuY3Rpb24oYSxiKXt2YXIgYz16dih0aGlzLGIpLGQsZTtyZXR1cm4gMD09PWE/KG51bGw9PWM/dm9pZCAwOm51bGw9PShkPWMuX2VudGl0eSk/dm9pZCAwOmQuZXh0ZXJuYWwpfHxbXToobnVsbD09Yz92b2lkIDA6bnVsbD09KGU9Yy5fZXZlbnQpP3ZvaWQgMDplLmV4dGVybmFsKXx8W119O3l2LnByb3RvdHlwZS5yZW1vdmVFeHRlcm5hbFJlc3RyaWN0aW9ucz1mdW5jdGlvbihhKXt2YXIgYj16dih0aGlzLGEpO2IuX2V2ZW50JiYoYi5fZXZlbnQuZXh0ZXJuYWw9W10pO2IuX2VudGl0eSYmKGIuX2VudGl0eS5leHRlcm5hbD1bXSk7dGhpcy5zW2FdPSEwfTtmdW5jdGlvbiB1digpe3ZhciBhPXNpLnI7YXx8KGE9bmV3IHl2LHNpLnI9YSk7cmV0dXJuIGF9O3ZhciBBdj1uZXcgUmVnRXhwKC9eKC4qXC4pPyhnb29nbGV8eW91dHViZXxibG9nZ2VyfHdpdGhnb29nbGUpKFwuY29tPyk/KFwuW2Etel17Mn0pP1wuPyQvKSxCdj17Y2w6WyJlY2wiXSxjdXN0b21QaXhlbHM6WyJub25Hb29nbGVQaXhlbHMiXSxlY2w6WyJjbCJdLGVobDpbImhsIl0sZ2Fhd2M6WyJnb29ndGFnIl0saGw6WyJlaGwiXSxodG1sOlsiY3VzdG9tU2NyaXB0cyIsImN1c3RvbVBpeGVscyIsIm5vbkdvb2dsZVBpeGVscyIsIm5vbkdvb2dsZVNjcmlwdHMiLCJub25Hb29nbGVJZnJhbWVzIl0sY3VzdG9tU2NyaXB0czpbImh0bWwiLCJjdXN0b21QaXhlbHMiLCJub25Hb29nbGVQaXhlbHMiLCJub25Hb29nbGVTY3JpcHRzIiwibm9uR29vZ2xlSWZyYW1lcyJdLG5vbkdvb2dsZVBpeGVsczpbXSxub25Hb29nbGVTY3JpcHRzOlsibm9uR29vZ2xlUGl4ZWxzIl0sbm9uR29vZ2xlSWZyYW1lczpbIm5vbkdvb2dsZVBpeGVscyJdfSxDdj17Y2w6WyJlY2wiXSxjdXN0b21QaXhlbHM6WyJjdXN0b21TY3JpcHRzIiwKImh0bWwiXSxlY2w6WyJjbCJdLGVobDpbImhsIl0sZ2Fhd2M6WyJnb29ndGFnIl0saGw6WyJlaGwiXSxodG1sOlsiY3VzdG9tU2NyaXB0cyJdLGN1c3RvbVNjcmlwdHM6WyJodG1sIl0sbm9uR29vZ2xlUGl4ZWxzOlsiY3VzdG9tUGl4ZWxzIiwiY3VzdG9tU2NyaXB0cyIsImh0bWwiLCJub25Hb29nbGVTY3JpcHRzIiwibm9uR29vZ2xlSWZyYW1lcyJdLG5vbkdvb2dsZVNjcmlwdHM6WyJjdXN0b21TY3JpcHRzIiwiaHRtbCJdLG5vbkdvb2dsZUlmcmFtZXM6WyJjdXN0b21TY3JpcHRzIiwiaHRtbCIsIm5vbkdvb2dsZVNjcmlwdHMiXX0sRHY9Imdvb2dsZSBjdXN0b21QaXhlbHMgY3VzdG9tU2NyaXB0cyBodG1sIG5vbkdvb2dsZVBpeGVscyBub25Hb29nbGVTY3JpcHRzIG5vbkdvb2dsZUlmcmFtZXMiLnNwbGl0KCIgIiksR3Y9ZnVuY3Rpb24oYSl7dmFyIGI9U2koImd0bS5hbGxvd2xpc3QiKXx8U2koImd0bS53aGl0ZWxpc3QiKTtiJiZNKDkpO3lpJiYoYj1bImdvb2dsZSIsImd0YWdmbCIsCiJsY2wiLCJ6b25lIl0pO0V2KCkmJih5aT9NKDExNik6KE0oMTE3KSxGdiYmKGI9W10sd2luZG93LmNvbnNvbGUmJndpbmRvdy5jb25zb2xlLmxvZyYmd2luZG93LmNvbnNvbGUubG9nKCJHVE0gYmxvY2tlZC4gU2VlIGdvLzEzNjg3NzI4LiIpKSkpO3ZhciBjPWImJlhhKFFhKGIpLEJ2KSxkPVNpKCJndG0uYmxvY2tsaXN0Iil8fFNpKCJndG0uYmxhY2tsaXN0Iik7ZHx8KGQ9U2koInRhZ1R5cGVCbGFja2xpc3QiKSkmJk0oMyk7ZD9NKDgpOmQ9W107RXYoKSYmKGQ9UWEoZCksZC5wdXNoKCJub25Hb29nbGVQaXhlbHMiLCJub25Hb29nbGVTY3JpcHRzIiwic2FuZGJveGVkU2NyaXB0cyIpKTswPD1RYShkKS5pbmRleE9mKCJnb29nbGUiKSYmTSgyKTt2YXIgZT1kJiZYYShRYShkKSxDdiksZj17fTtyZXR1cm4gZnVuY3Rpb24oZyl7dmFyIGg9ZyYmZ1tPZS5tYV07aWYoIWh8fCJzdHJpbmciIT10eXBlb2YgaClyZXR1cm4hMDtoPWgucmVwbGFjZSgvXl8qLywiIik7aWYodm9pZCAwIT09ZltoXSlyZXR1cm4gZltoXTsKdmFyIG09SWlbaF18fFtdLG49YShoLG0pO2lmKGIpe3ZhciBwO2lmKHA9bilhOntpZigwPmMuaW5kZXhPZihoKSlpZihtJiYwPG0ubGVuZ3RoKWZvcih2YXIgcT0wO3E8bS5sZW5ndGg7cSsrKXtpZigwPmMuaW5kZXhPZihtW3FdKSl7TSgxMSk7cD0hMTticmVhayBhfX1lbHNle3A9ITE7YnJlYWsgYX1wPSEwfW49cH12YXIgcj0hMTtpZihkKXt2YXIgdD0wPD1lLmluZGV4T2YoaCk7aWYodClyPXQ7ZWxzZXt2YXIgdT1MYShlLG18fFtdKTt1JiZNKDEwKTtyPXV9fXZhciB2PSFufHxyO3Z8fCEoMDw9bS5pbmRleE9mKCJzYW5kYm94ZWRTY3JpcHRzIikpfHxjJiYtMSE9PWMuaW5kZXhPZigic2FuZGJveGVkU2NyaXB0cyIpfHwodj1MYShlLER2KSk7cmV0dXJuIGZbaF09dn19LEZ2PSExO0Z2PSEwOwp2YXIgRXY9ZnVuY3Rpb24oKXtyZXR1cm4gQXYudGVzdCh6LmxvY2F0aW9uJiZ6LmxvY2F0aW9uLmhvc3RuYW1lKX0sSHY9ZnVuY3Rpb24oKXtQaiYmdnYoWGooKSxmdW5jdGlvbihhKXt2YXIgYj15ZihhLmVudGl0eUlkKSxjO2lmKERmKGIpKXt2YXIgZD1iW09lLm1hXTtpZighZCl0aHJvdyJFcnJvcjogTm8gZnVuY3Rpb24gbmFtZSBnaXZlbiBmb3IgZnVuY3Rpb24gY2FsbC4iO3ZhciBlPXFmW2RdO2M9ISFlJiYhIWUucnVuSW5TaWxvZWRNb2RlfWVsc2UgYz0hIXR2KGJbT2UubWFdLDQpO3JldHVybiBjfSl9O3ZhciBKdj1mdW5jdGlvbihhLGIsYyxkLGUpe2lmKCFJdigpKXt2YXIgZj1kLnNpbG9lZD9SaihhKTphO2lmKCFnayhmKSl7dmFyIGc9Ij9pZD0iK2VuY29kZVVSSUNvbXBvbmVudChhKSsiJmw9IityaS5qYSxoPTA9PT1hLmluZGV4T2YoIkdUTS0iKTtofHwoZys9IiZjeD1jIik7Uig2MCkmJihnKz0iJmd0bT0iK01uKCkpO3ZhciBtPUdqKCk7bSYmKGcrPSImc2lnbj0iK3JpLkpmKTt2YXIgbj1jPyIvZ3RhZy9qcyI6Ii9ndG0uanMiLHA9RmooKT9FaihiLG4rZyk6dm9pZCAwO2lmKCFwKXt2YXIgcT1yaS5CZCtuO20mJkNjJiZoPyhxPUNjLnJlcGxhY2UoL14oPzpodHRwcz86XC9cLyk/L2ksIiIpLnNwbGl0KC9bPyNdLylbMF0scD1TcSgiaHR0cHM6Ly8iLCJodHRwOi8vIixxK2cpKTpwPUxpLnM/TWkoKStuK2c6U3EoImh0dHBzOi8vIiwiaHR0cDovLyIscStnKX1kLnNpbG9lZCYmaWsoe2N0aWQ6Zixpc0Rlc3RpbmF0aW9uOiExfSk7dmFyIHI9WmooKTtMaigpLmNvbnRhaW5lcltmXT0Ke3N0YXRlOjEsY29udGV4dDpkLHBhcmVudDpyfTtNaih7Y3RpZDpmLGlzRGVzdGluYXRpb246ITF9LGUpO0ljKHApfX19LEt2PWZ1bmN0aW9uKGEsYixjLGQpe2lmKCFJdigpKXt2YXIgZT1jLnNpbG9lZD9SaihhKTphO2lmKCFoayhlKSlpZighYy5zaWxvZWQmJmprKCkpTGooKS5kZXN0aW5hdGlvbltlXT17c3RhdGU6MCx0cmFuc3BvcnRVcmw6Yixjb250ZXh0OmMscGFyZW50OlpqKCl9LE1qKHtjdGlkOmUsaXNEZXN0aW5hdGlvbjohMH0sZCksTSg5MSk7ZWxzZXt2YXIgZj0iL2d0YWcvZGVzdGluYXRpb24/aWQ9IitlbmNvZGVVUklDb21wb25lbnQoYSkrIiZsPSIrcmkuamErIiZjeD1jIjtSKDYwKSYmKGYrPSImZ3RtPSIrTW4oKSk7R2ooKSYmKGYrPSImc2lnbj0iK3JpLkpmKTt2YXIgZz1GaigpP0VqKGIsZik6dm9pZCAwO2d8fChnPUxpLnM/TWkoKStmOlNxKCJodHRwczovLyIsImh0dHA6Ly8iLHJpLkJkK2YpKTtjLnNpbG9lZCYmaWsoe2N0aWQ6ZSxpc0Rlc3RpbmF0aW9uOiEwfSk7CkxqKCkuZGVzdGluYXRpb25bZV09e3N0YXRlOjEsY29udGV4dDpjLHBhcmVudDpaaigpfTtNaih7Y3RpZDplLGlzRGVzdGluYXRpb246ITB9LGQpO0ljKGcpfX19O2Z1bmN0aW9uIEl2KCl7aWYoS24oKSl7cmV0dXJuITB9cmV0dXJuITF9O3ZhciBMdj0hMSxNdj0wLE52PVtdO2Z1bmN0aW9uIE92KGEpe2lmKCFMdil7dmFyIGI9Qy5jcmVhdGVFdmVudE9iamVjdCxjPSJjb21wbGV0ZSI9PUMucmVhZHlTdGF0ZSxkPSJpbnRlcmFjdGl2ZSI9PUMucmVhZHlTdGF0ZTtpZighYXx8InJlYWR5c3RhdGVjaGFuZ2UiIT1hLnR5cGV8fGN8fCFiJiZkKXtMdj0hMDtmb3IodmFyIGU9MDtlPE52Lmxlbmd0aDtlKyspSChOdltlXSl9TnYucHVzaD1mdW5jdGlvbigpe2Zvcih2YXIgZj0wO2Y8YXJndW1lbnRzLmxlbmd0aDtmKyspSChhcmd1bWVudHNbZl0pO3JldHVybiAwfX19ZnVuY3Rpb24gUHYoKXtpZighTHYmJjE0MD5Ndil7TXYrKzt0cnl7Qy5kb2N1bWVudEVsZW1lbnQuZG9TY3JvbGwoImxlZnQiKSxPdigpfWNhdGNoKGEpe3ouc2V0VGltZW91dChQdiw1MCl9fX12YXIgUXY9ZnVuY3Rpb24oYSl7THY/YSgpOk52LnB1c2goYSl9O3ZhciBSdj1mdW5jdGlvbigpe3RoaXMuRj0wO3RoaXMuaD17fX07UnYucHJvdG90eXBlLmFkZExpc3RlbmVyPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD0rK3RoaXMuRjt0aGlzLmhbYV09dGhpcy5oW2FdfHx7fTt0aGlzLmhbYV1bU3RyaW5nKGQpXT17bGlzdGVuZXI6Yix5YjpjfTtyZXR1cm4gZH07UnYucHJvdG90eXBlLnM9ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzLmhbYV0sZD1TdHJpbmcoYik7aWYoIWN8fCFjW2RdKXJldHVybiExO2RlbGV0ZSBjW2RdO3JldHVybiEwfTtSdi5wcm90b3R5cGUuQz1mdW5jdGlvbihhLGIpe3ZhciBjPVtdO2wodGhpcy5oW2FdLGZ1bmN0aW9uKGQsZSl7MD5jLmluZGV4T2YoZS5saXN0ZW5lcikmJih2b2lkIDA9PT1lLnlifHwwPD1iLmluZGV4T2YoZS55YikpJiZjLnB1c2goZS5saXN0ZW5lcil9KTtyZXR1cm4gY307dmFyIFN2PWZ1bmN0aW9uKGEsYixjKXtyZXR1cm57ZW50aXR5VHlwZTphLGluZGV4SW5PcmlnaW5Db250YWluZXI6YixuYW1lSW5PcmlnaW5Db250YWluZXI6YyxvcmlnaW5Db250YWluZXJJZDpXaigpfX07dmFyIFV2PWZ1bmN0aW9uKGEsYil7dGhpcy5oPSExO3RoaXMuRj1bXTt0aGlzLk09e3RhZ3M6W119O3RoaXMuVz0hMTt0aGlzLnM9dGhpcy5DPTA7VHYodGhpcyxhLGIpfSxWdj1mdW5jdGlvbihhLGIsYyxkKXtpZih2aS5oYXNPd25Qcm9wZXJ0eShiKXx8Il9fem9uZSI9PT1iKXJldHVybi0xO3ZhciBlPXt9O2xiKGQpJiYoZT1uYihkLGUpKTtlLmlkPWM7ZS5zdGF0dXM9InRpbWVvdXQiO3JldHVybiBhLk0udGFncy5wdXNoKGUpLTF9LFd2PWZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWEuTS50YWdzW2JdO2UmJihlLnN0YXR1cz1jLGUuZXhlY3V0aW9uVGltZT1kKX0sWHY9ZnVuY3Rpb24oYSl7aWYoIWEuaCl7Zm9yKHZhciBiPWEuRixjPTA7YzxiLmxlbmd0aDtjKyspYltjXSgpO2EuaD0hMDthLkYubGVuZ3RoPTB9fSxUdj1mdW5jdGlvbihhLGIsYyl7dm9pZCAwIT09YiYmYS5MZihiKTtjJiZ6LnNldFRpbWVvdXQoZnVuY3Rpb24oKXtyZXR1cm4gWHYoYSl9LE51bWJlcihjKSl9OwpVdi5wcm90b3R5cGUuTGY9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcyxjPVZhKGZ1bmN0aW9uKCl7cmV0dXJuIEgoZnVuY3Rpb24oKXthKFdqKCksYi5NKX0pfSk7dGhpcy5oP2MoKTp0aGlzLkYucHVzaChjKX07dmFyIFl2PWZ1bmN0aW9uKGEpe2EuQysrO3JldHVybiBWYShmdW5jdGlvbigpe2EucysrO2EuVyYmYS5zPj1hLkMmJlh2KGEpfSl9LFp2PWZ1bmN0aW9uKGEpe2EuVz0hMDthLnM+PWEuQyYmWHYoYSl9O3ZhciAkdj17fSxidz1mdW5jdGlvbigpe3JldHVybiB6W2F3KCldfSxjdz0hMTsKZnVuY3Rpb24gYXcoKXtyZXR1cm4gei5Hb29nbGVBbmFseXRpY3NPYmplY3R8fCJnYSJ9CnZhciBmdz1mdW5jdGlvbihhKXt9LGd3PWZ1bmN0aW9uKGEsYil7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGM9YncoKSxkPWMmJmMuZ2V0QnlOYW1lJiZjLmdldEJ5TmFtZShhKTtpZihkKXt2YXIgZT1kLmdldCgic2VuZEhpdFRhc2siKTtkLnNldCgic2VuZEhpdFRhc2siLGZ1bmN0aW9uKGYpe3ZhciBnPWYuZ2V0KCJoaXRQYXlsb2FkIiksaD1mLmdldCgiaGl0Q2FsbGJhY2siKSxtPTA+Zy5pbmRleE9mKCImdGlkPSIrYik7bSYmKGYuc2V0KCJoaXRQYXlsb2FkIixnLnJlcGxhY2UoLyZ0aWQ9VUEtWzAtOV0rLVswLTldKy8sIiZ0aWQ9IitiKSwhMCksZi5zZXQoImhpdENhbGxiYWNrIix2b2lkIDAsITApKTtlKGYpO20mJihmLnNldCgiaGl0UGF5bG9hZCIsCmcsITApLGYuc2V0KCJoaXRDYWxsYmFjayIsaCwhMCksZi5zZXQoIl94XzE5Iix2b2lkIDAsITApLGUoZikpfSl9fX07dmFyIGx3PVsiZXMiLCIxIl0sbXc9e30sbnc9e307ZnVuY3Rpb24gb3coYSxiKXtpZih0ayl7dmFyIGM7Yz1iLm1hdGNoKC9eKGd0bXxndGFnKVwuLyk/ZW5jb2RlVVJJQ29tcG9uZW50KGIpOiIqIjttd1thXT1bWyJlIixjXSxbImVpZCIsYV1dO0VrKGEpfX1mdW5jdGlvbiBwdyhhKXt2YXIgYj1hLmV2ZW50SWQsYz1hLnpiO2lmKCFtd1tiXSlyZXR1cm5bXTt2YXIgZD1bXTtud1tiXXx8ZC5wdXNoKGx3KTtkLnB1c2guYXBwbHkoZCxrYShtd1tiXSkpO2MmJihud1tiXT0hMCk7cmV0dXJuIGR9O3ZhciBxdz17fSxydz17fSxzdz17fTtmdW5jdGlvbiB0dyhhLGIsYyxkKXt0ayYmUig3MCkmJigodm9pZCAwPT09ZD8wOmQpPyhzd1tiXT1zd1tiXXx8MCwrK3N3W2JdKTp2b2lkIDAhPT1jPyhyd1thXT1yd1thXXx8e30scndbYV1bYl09TWF0aC5yb3VuZChjKSk6KHF3W2FdPXF3W2FdfHx7fSxxd1thXVtiXT0ocXdbYV1bYl18fDApKzEpKX1mdW5jdGlvbiB1dyhhKXt2YXIgYj1hLmV2ZW50SWQsYz1hLnpiLGQ9cXdbYl18fHt9LGU9W10sZjtmb3IoZiBpbiBkKWQuaGFzT3duUHJvcGVydHkoZikmJmUucHVzaCgiIitmK2RbZl0pO2MmJmRlbGV0ZSBxd1tiXTtyZXR1cm4gZS5sZW5ndGg/W1sibWQiLGUuam9pbigiLiIpXV06W119CmZ1bmN0aW9uIHZ3KGEpe3ZhciBiPWEuZXZlbnRJZCxjPWEuemIsZD1yd1tiXXx8e30sZT1bXSxmO2ZvcihmIGluIGQpZC5oYXNPd25Qcm9wZXJ0eShmKSYmZS5wdXNoKCIiK2YrZFtmXSk7YyYmZGVsZXRlIHJ3W2JdO3JldHVybiBlLmxlbmd0aD9bWyJtdGQiLGUuam9pbigiLiIpXV06W119ZnVuY3Rpb24gd3coKXtmb3IodmFyIGE9W10sYj1mYShPYmplY3Qua2V5cyhzdykpLGM9Yi5uZXh0KCk7IWMuZG9uZTtjPWIubmV4dCgpKXt2YXIgZD1jLnZhbHVlO2EucHVzaCgiIitkK3N3W2RdKX1yZXR1cm4gYS5sZW5ndGg/W1sibWVjIixhLmpvaW4oIi4iKV1dOltdfTt2YXIgeHc9e30seXc9e307ZnVuY3Rpb24gencoYSxiLGMpe2lmKHRrJiZiKXt2YXIgZD1KaihiKTt4d1thXT14d1thXXx8W107eHdbYV0ucHVzaChjK2QpO3ZhciBlPShEZihiKT8iMSI6IjIiKStkO3l3W2FdPXl3W2FdfHxbXTt5d1thXS5wdXNoKGUpO0VrKGEpfX1mdW5jdGlvbiBBdyhhKXt2YXIgYj1hLmV2ZW50SWQsYz1hLnpiLGQ9W10sZT14d1tiXXx8W107ZS5sZW5ndGgmJmQucHVzaChbInRyIixlLmpvaW4oIi4iKV0pO3ZhciBmPXl3W2JdfHxbXTtmLmxlbmd0aCYmZC5wdXNoKFsidGkiLGYuam9pbigiLiIpXSk7YyYmKGRlbGV0ZSB4d1tiXSxkZWxldGUgeXdbYl0pO3JldHVybiBkfTtmdW5jdGlvbiBCdyhhLGIsYyxkKXt2YXIgZT1vZlthXSxmPUN3KGEsYixjLGQpO2lmKCFmKXJldHVybiBudWxsO3ZhciBnPUFmKGVbT2UueGpdLGMsW10pO2lmKGcmJmcubGVuZ3RoKXt2YXIgaD1nWzBdO2Y9QncoaC5pbmRleCx7b25TdWNjZXNzOmYsb25GYWlsdXJlOjE9PT1oLk1qP2IudGVybWluYXRlOmYsdGVybWluYXRlOmIudGVybWluYXRlfSxjLGQpfXJldHVybiBmfQpmdW5jdGlvbiBDdyhhLGIsYyxkKXtmdW5jdGlvbiBlKCl7aWYoZltPZS5mbF0paCgpO2Vsc2V7dmFyIHc9QmYoZixjLFtdKSx4PXdbT2UudmtdO2lmKG51bGwhPXgpZm9yKHZhciB5PTA7eTx4Lmxlbmd0aDt5KyspaWYoIXRsKHhbeV0pKXtoKCk7cmV0dXJufXZhciBCPVZ2KGMuZmMsU3RyaW5nKGZbT2UubWFdKSxOdW1iZXIoZltPZS53ZV0pLHdbT2UuaWxdKSxBPSExO3cudnRwX2d0bU9uU3VjY2Vzcz1mdW5jdGlvbigpe2lmKCFBKXtBPSEwO3ZhciBEPVRhKCktRzt6dyhjLmlkLG9mW2FdLCI1Iik7V3YoYy5mYyxCLCJzdWNjZXNzIixEKTtSKDYxKSYmVXUoYyxmLGR1LkguQWopO2coKX19O3cudnRwX2d0bU9uRmFpbHVyZT1mdW5jdGlvbigpe2lmKCFBKXtBPSEwO3ZhciBEPVRhKCktRzt6dyhjLmlkLG9mW2FdLCI2Iik7V3YoYy5mYyxCLCJmYWlsdXJlIixEKTtSKDYxKSYmVXUoYyxmLGR1LkguemopO2goKX19O3cudnRwX2d0bVRhZ0lkPWYudGFnX2lkO3cudnRwX2d0bUV2ZW50SWQ9CmMuaWQ7Yy5wcmlvcml0eUlkJiYody52dHBfZ3RtUHJpb3JpdHlJZD1jLnByaW9yaXR5SWQpO3p3KGMuaWQsZiwiMSIpO3ZhciBGPWZ1bmN0aW9uKCl7ZGooMyk7dmFyIEQ9VGEoKS1HO3p3KGMuaWQsZiwiNyIpO1d2KGMuZmMsQiwiZXhjZXB0aW9uIixEKTtSKDYxKSYmVXUoYyxmLGR1LkgueWopO0F8fChBPSEwLGgoKSl9O1IoNjEpJiZUdShjLGYpO3ZhciBHPVRhKCk7dHJ5e3pmKHcse2V2ZW50OmMsaW5kZXg6YSx0eXBlOjF9KX1jYXRjaChEKXtGKEQpfVIoNjEpJiZVdShjLGYsZHUuSC5Cail9fXZhciBmPW9mW2FdLGc9Yi5vblN1Y2Nlc3MsaD1iLm9uRmFpbHVyZSxtPWIudGVybWluYXRlO2lmKGMuaXNCbG9ja2VkKGYpKXJldHVybiBudWxsO3ZhciBuPUFmKGZbT2UuQ2pdLGMsW10pO2lmKG4mJm4ubGVuZ3RoKXt2YXIgcD1uWzBdLHE9QncocC5pbmRleCx7b25TdWNjZXNzOmcsb25GYWlsdXJlOmgsdGVybWluYXRlOm19LGMsZCk7aWYoIXEpcmV0dXJuIG51bGw7Zz1xO2g9Mj09PQpwLk1qP206cX1pZihmW09lLnNqXXx8ZltPZS5rbF0pe3ZhciByPWZbT2Uuc2pdP3BmOmMudm4sdD1nLHU9aDtpZighclthXSl7ZT1WYShlKTt2YXIgdj1EdyhhLHIsZSk7Zz12Lm9uU3VjY2VzcztoPXYub25GYWlsdXJlfXJldHVybiBmdW5jdGlvbigpe3JbYV0odCx1KX19cmV0dXJuIGV9ZnVuY3Rpb24gRHcoYSxiLGMpe3ZhciBkPVtdLGU9W107YlthXT1FdyhkLGUsYyk7cmV0dXJue29uU3VjY2VzczpmdW5jdGlvbigpe2JbYV09Rnc7Zm9yKHZhciBmPTA7ZjxkLmxlbmd0aDtmKyspZFtmXSgpfSxvbkZhaWx1cmU6ZnVuY3Rpb24oKXtiW2FdPUd3O2Zvcih2YXIgZj0wO2Y8ZS5sZW5ndGg7ZisrKWVbZl0oKX19fWZ1bmN0aW9uIEV3KGEsYixjKXtyZXR1cm4gZnVuY3Rpb24oZCxlKXthLnB1c2goZCk7Yi5wdXNoKGUpO2MoKX19ZnVuY3Rpb24gRncoYSl7YSgpfWZ1bmN0aW9uIEd3KGEsYil7YigpfTt2YXIgSXc9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gMT09PWFyZ3VtZW50cy5sZW5ndGg/SHcoInNldCIsYSk6SHcoInNldCIsYSxiKX0sZXg9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gMT09PWFyZ3VtZW50cy5sZW5ndGg/SHcoImNvbmZpZyIsYSk6SHcoImNvbmZpZyIsYSxiKX0sbHg9ZnVuY3Rpb24oYSxiLGMpe2M9Y3x8e307Y1tOLmcuV2JdPWE7cmV0dXJuIEh3KCJldmVudCIsYixjKX07ZnVuY3Rpb24gSHcoYSl7cmV0dXJuIGFyZ3VtZW50c312YXIgbXg9ZnVuY3Rpb24oKXt0aGlzLmg9W107dGhpcy5zPVtdfTtteC5wcm90b3R5cGUuZW5xdWV1ZT1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9dGhpcy5oLmxlbmd0aCsxO2FbImd0bS51bmlxdWVFdmVudElkIl09YjthWyJndG0ucHJpb3JpdHlJZCJdPWQ7Yy5ldmVudElkPWI7Yy5mcm9tQ29udGFpbmVyRXhlY3V0aW9uPSEwO2MucHJpb3JpdHlJZD1kO3ZhciBlPXttZXNzYWdlOmEsbm90QmVmb3JlRXZlbnRJZDpiLHByaW9yaXR5SWQ6ZCxtZXNzYWdlQ29udGV4dDpjfTt0aGlzLmgucHVzaChlKTtmb3IodmFyIGY9MDtmPHRoaXMucy5sZW5ndGg7ZisrKXRyeXt0aGlzLnNbZl0oZSl9Y2F0Y2goZyl7fX07bXgucHJvdG90eXBlLmxpc3Rlbj1mdW5jdGlvbihhKXt0aGlzLnMucHVzaChhKX07Cm14LnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24oKXtmb3IodmFyIGE9e30sYj0wO2I8dGhpcy5oLmxlbmd0aDtiKyspe3ZhciBjPXRoaXMuaFtiXSxkPWFbYy5ub3RCZWZvcmVFdmVudElkXTtkfHwoZD1bXSxhW2Mubm90QmVmb3JlRXZlbnRJZF09ZCk7ZC5wdXNoKGMpfXJldHVybiBhfTtteC5wcm90b3R5cGUucHJ1bmU9ZnVuY3Rpb24oYSl7Zm9yKHZhciBiPVtdLGM9W10sZD0wO2Q8dGhpcy5oLmxlbmd0aDtkKyspe3ZhciBlPXRoaXMuaFtkXTtlLm5vdEJlZm9yZUV2ZW50SWQ9PT1hP2IucHVzaChlKTpjLnB1c2goZSl9dGhpcy5oPWM7cmV0dXJuIGJ9O3ZhciBveD1mdW5jdGlvbihhLGIsYyl7Yy5ldmVudE1ldGFkYXRhPWMuZXZlbnRNZXRhZGF0YXx8e307Yy5ldmVudE1ldGFkYXRhLnNvdXJjZV9jYW5vbmljYWxfaWQ9VmYuY2Fub25pY2FsQ29udGFpbmVySWQ7bngoKS5lbnF1ZXVlKGEsYixjKX0scXg9ZnVuY3Rpb24oKXt2YXIgYT1weDtueCgpLmxpc3RlbihhKX07CmZ1bmN0aW9uIG54KCl7dmFyIGE9c2kubWI7YXx8KGE9bmV3IG14LHNpLm1iPWEpO3JldHVybiBhfQp2YXIgeXg9ZnVuY3Rpb24oYSl7dmFyIGI9c2kuem9uZXM7cmV0dXJuIGI/Yi5nZXRJc0FsbG93ZWRGbihTaigpLGEpOmZ1bmN0aW9uKCl7cmV0dXJuITB9fSx6eD1mdW5jdGlvbigpe3d2KFhqKCksZnVuY3Rpb24oYSl7dmFyIGI9YS5vcmlnaW5hbEV2ZW50RGF0YVsiZ3RtLnVuaXF1ZUV2ZW50SWQiXSxjPXNpLnpvbmVzO3JldHVybiBjP2MuaXNBY3RpdmUoU2ooKSxiKTohMH0pO1IoODYpJiZ2dihYaigpLGZ1bmN0aW9uKGEpe3ZhciBiPWEuZW50aXR5SWQsYz1hLnNlY3VyaXR5R3JvdXBzO3JldHVybiB5eChOdW1iZXIoYS5vcmlnaW5hbEV2ZW50RGF0YVsiZ3RtLnVuaXF1ZUV2ZW50SWQiXSkpKGIsYyl9KX07dmFyIEN4PWZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPVtdLGQ9MDtkPG9mLmxlbmd0aDtkKyspaWYoYVtkXSl7dmFyIGU9b2ZbZF07dmFyIGY9WXYoYi5mYyk7dHJ5e3ZhciBnPUJ3KGQse29uU3VjY2VzczpmLG9uRmFpbHVyZTpmLHRlcm1pbmF0ZTpmfSxiLGQpO2lmKGcpe3ZhciBoPWVbT2UubWFdO2lmKCFoKXRocm93IkVycm9yOiBObyBmdW5jdGlvbiBuYW1lIGdpdmVuIGZvciBmdW5jdGlvbiBjYWxsLiI7dmFyIG09cWZbaF07Yy5wdXNoKHtrazpkLFlqOihtP20ucHJpb3JpdHlPdmVycmlkZXx8MDowKXx8dHYoZVtPZS5tYV0sMSl8fDAsZXhlY3V0ZTpnfSl9ZWxzZSBBeChkLGIpLGYoKX1jYXRjaChwKXtmKCl9fWMuc29ydChCeCk7Zm9yKHZhciBuPTA7bjxjLmxlbmd0aDtuKyspY1tuXS5leGVjdXRlKCk7cmV0dXJuIDA8Yy5sZW5ndGh9Owp2YXIgRXg9ZnVuY3Rpb24oYSxiKXtpZighRHgpcmV0dXJuITE7dmFyIGM9YVsiZ3RtLnRyaWdnZXJzIl0mJlN0cmluZyhhWyJndG0udHJpZ2dlcnMiXSksZD1EeC5DKGEuZXZlbnQsYz9TdHJpbmcoYykuc3BsaXQoIiwiKTpbXSk7aWYoIWQubGVuZ3RoKXJldHVybiExO2Zvcih2YXIgZT0wO2U8ZC5sZW5ndGg7KytlKXt2YXIgZj1ZdihiKTt0cnl7ZFtlXShhLGYpfWNhdGNoKGcpe2YoKX19cmV0dXJuITB9O2Z1bmN0aW9uIEJ4KGEsYil7dmFyIGMsZD1iLllqLGU9YS5ZajtjPWQ+ZT8xOmQ8ZT8tMTowO3ZhciBmO2lmKDAhPT1jKWY9YztlbHNle3ZhciBnPWEua2ssaD1iLmtrO2Y9Zz5oPzE6ZzxoPy0xOjB9cmV0dXJuIGZ9CmZ1bmN0aW9uIEF4KGEsYil7aWYodGspe3ZhciBjPWZ1bmN0aW9uKGQpe3ZhciBlPWIuaXNCbG9ja2VkKG9mW2RdKT8iMyI6IjQiLGY9QWYob2ZbZF1bT2UueGpdLGIsW10pO2YmJmYubGVuZ3RoJiZjKGZbMF0uaW5kZXgpO3p3KGIuaWQsb2ZbZF0sZSk7dmFyIGc9QWYob2ZbZF1bT2UuQ2pdLGIsW10pO2cmJmcubGVuZ3RoJiZjKGdbMF0uaW5kZXgpfTtjKGEpfX12YXIgRng9ITEsRHg7dmFyIEd4PWZ1bmN0aW9uKCl7RHh8fChEeD1uZXcgUnYpO3JldHVybiBEeH07CnZhciBMeD1mdW5jdGlvbihhKXt2YXIgYj1hWyJndG0udW5pcXVlRXZlbnRJZCJdLGM9YVsiZ3RtLnByaW9yaXR5SWQiXSxkPWEuZXZlbnQ7aWYoUig2MSkpe31pZigiZ3RtLmpzIj09PWQpe2lmKEZ4KXJldHVybiExO0Z4PSEwfXZhciBlLGY9ITEsZz14digpLGg9bmIoYSk7aWYoZy5ldmVyeShmdW5jdGlvbih1KXtyZXR1cm4gdSh7b3JpZ2luYWxFdmVudERhdGE6aH0pfSkpZT15eChiKTtlbHNle2lmKCJndG0uanMiIT09ZCYmImd0bS5pbml0IiE9PWQmJiJndG0uaW5pdF9jb25zZW50IiE9PWQpcmV0dXJuITE7Zj0hMDtlPXl4KE51bWJlci5NQVhfU0FGRV9JTlRFR0VSKX1vdyhiLGQpO3ZhciBtPQphLmV2ZW50Q2FsbGJhY2ssbj1hLmV2ZW50VGltZW91dCxwPXtpZDpiLHByaW9yaXR5SWQ6YyxuYW1lOmQsaXNCbG9ja2VkOkh4KGUsaCxmKSx2bjpbXSxsb2dNYWNyb0Vycm9yOmZ1bmN0aW9uKCl7TSg2KTtkaigwKX0sY2FjaGVkTW9kZWxWYWx1ZXM6SXgoKSxmYzpuZXcgVXYoZnVuY3Rpb24oKXtpZihSKDYxKSl7fW0mJgptLmFwcGx5KG0sW10uc2xpY2UuY2FsbChhcmd1bWVudHMsMCkpfSxuKSxvcmlnaW5hbEV2ZW50RGF0YTpofTtSKDcwKSYmdGsmJihwLnJlcG9ydE1hY3JvRGlzY3JlcGFuY3k9dHcpO1IoNjEpJiZQdShwLmlkLHAubmFtZSk7dmFyIHE9TGYocCk7Uig2MSkmJlF1KHAuaWQscC5uYW1lKTtmJiYocT1KeChxKSk7aWYoUig2MSkpe312YXIgcj1DeChxLHApLHQ9ITE7CnQ9RXgoYSxwLmZjKTtadihwLmZjKTsiZ3RtLmpzIiE9PWQmJiJndG0uc3luYyIhPT1kfHxmdyhXaigpKTtyZXR1cm4gS3gocSxyKXx8dH07ZnVuY3Rpb24gSXgoKXt2YXIgYT17fTthLmV2ZW50PVhpKCJldmVudCIsMSk7YS5lY29tbWVyY2U9WGkoImVjb21tZXJjZSIsMSk7YS5ndG09WGkoImd0bSIpO2EuZXZlbnRNb2RlbD1YaSgiZXZlbnRNb2RlbCIpO3JldHVybiBhfQpmdW5jdGlvbiBIeChhLGIsYyl7dmFyIGQ9R3YoYSk7cmV0dXJuIGZ1bmN0aW9uKGUpe2lmKGQoZSkpcmV0dXJuITA7dmFyIGY9ZSYmZVtPZS5tYV07aWYoIWZ8fCJzdHJpbmciIT10eXBlb2YgZilyZXR1cm4hMDtmPWYucmVwbGFjZSgvXl8qLywiIik7dmFyIGcsaD1YaigpO2c9dXYoKS5nZXRSZXN0cmljdGlvbnMoMCxoKTt2YXIgbT1iO2MmJihtPW5iKGIpLG1bImd0bS51bmlxdWVFdmVudElkIl09TnVtYmVyLk1BWF9TQUZFX0lOVEVHRVIpO2Zvcih2YXIgbj1JaVtmXXx8W10scD1mYShnKSxxPXAubmV4dCgpOyFxLmRvbmU7cT1wLm5leHQoKSl7dmFyIHI9cS52YWx1ZTt0cnl7aWYoIXIoe2VudGl0eUlkOmYsc2VjdXJpdHlHcm91cHM6bixvcmlnaW5hbEV2ZW50RGF0YTptfSkpcmV0dXJuITB9Y2F0Y2godCl7cmV0dXJuITB9fXJldHVybiExfX0KZnVuY3Rpb24gSngoYSl7Zm9yKHZhciBiPVtdLGM9MDtjPGEubGVuZ3RoO2MrKylpZihhW2NdKXt2YXIgZD1TdHJpbmcob2ZbY11bT2UubWFdKTtpZih1aVtkXXx8dm9pZCAwIT09b2ZbY11bT2UubWxdfHx0dihkLDIpKWJbY109ITB9cmV0dXJuIGJ9ZnVuY3Rpb24gS3goYSxiKXtpZighYilyZXR1cm4gYjtmb3IodmFyIGM9MDtjPGEubGVuZ3RoO2MrKylpZihhW2NdJiZvZltjXSYmIXZpW1N0cmluZyhvZltjXVtPZS5tYV0pXSlyZXR1cm4hMDtyZXR1cm4hMX12YXIgT2Y7dmFyIE14PXt9LE54PXt9LE94PWZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPVtdLGQ9W10sZT17fSxmPTA7ZjxhLmxlbmd0aDtlPXtTaDp2b2lkIDAsemg6dm9pZCAwfSxmKyspe3ZhciBnPWFbZl07aWYoMDw9Zy5pbmRleE9mKCItIikpe2lmKGUuU2g9Q2woZyxiKSxlLlNoKXt2YXIgaD1VaigpO0lhKGgsZnVuY3Rpb24ocil7cmV0dXJuIGZ1bmN0aW9uKHQpe3JldHVybiByLlNoLmJhPT09dH19KGUpKT9jLnB1c2goZyk6ZC5wdXNoKGcpfX1lbHNle3ZhciBtPU14W2ddfHxbXTtlLnpoPXt9O20uZm9yRWFjaChmdW5jdGlvbihyKXtyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuIHIuemhbdF09ITB9fShlKSk7Zm9yKHZhciBuPVNqKCkscD0wO3A8bi5sZW5ndGg7cCsrKWlmKGUuemhbbltwXV0pe2M9Yy5jb25jYXQoVWooKSk7YnJlYWt9dmFyIHE9TnhbZ118fFtdO3EubGVuZ3RoJiYoYz1jLmNvbmNhdChxKSl9fXJldHVybntMbTpjLFBtOmR9fSxQeD1mdW5jdGlvbihhKXtsKE14LGZ1bmN0aW9uKGIsCmMpe3ZhciBkPWMuaW5kZXhPZihhKTswPD1kJiZjLnNwbGljZShkLDEpfSl9LFF4PWZ1bmN0aW9uKGEpe2woTngsZnVuY3Rpb24oYixjKXt2YXIgZD1jLmluZGV4T2YoYSk7MDw9ZCYmYy5zcGxpY2UoZCwxKX0pfTt2YXIgUng9IkhBIEdGIEcgVUEgQVcgREMgTUMiLnNwbGl0KCIgIiksU3g9ITEsVHg9ITEsVXg9ITEsVng9ITE7ZnVuY3Rpb24gV3goYSxiKXthLmhhc093blByb3BlcnR5KCJndG0udW5pcXVlRXZlbnRJZCIpfHxPYmplY3QuZGVmaW5lUHJvcGVydHkoYSwiZ3RtLnVuaXF1ZUV2ZW50SWQiLHt2YWx1ZTpKaSgpfSk7Yi5ldmVudElkPWFbImd0bS51bmlxdWVFdmVudElkIl07Yi5wcmlvcml0eUlkPWFbImd0bS5wcmlvcml0eUlkIl07cmV0dXJue2V2ZW50SWQ6Yi5ldmVudElkLHByaW9yaXR5SWQ6Yi5wcmlvcml0eUlkfX12YXIgWHg9dm9pZCAwLFl4PXZvaWQgMDsKZnVuY3Rpb24gWngoYSxiLGMpe3ZhciBkPW5iKGEpO2QuZXZlbnRJZD12b2lkIDA7ZC5pbmhlcml0UGFyZW50Q29uZmlnPXZvaWQgMDtPYmplY3Qua2V5cyhiKS5zb21lKGZ1bmN0aW9uKGYpe3JldHVybiB2b2lkIDAhPT1iW2ZdfSkmJk0oMTM2KTt2YXIgZT1uYihiKTtuYihjLGUpO294KGV4KFNqKClbMF0sZSksYS5ldmVudElkLGQpfWZ1bmN0aW9uICR4KGEpe2Zvcih2YXIgYj1mYShbTi5nLmpkLE4uZy5JYl0pLGM9Yi5uZXh0KCk7IWMuZG9uZTtjPWIubmV4dCgpKXt2YXIgZD1jLnZhbHVlLGU9YSYmYVtkXXx8a20uQ1tkXTtpZihlKXJldHVybiBlfX0KdmFyIGF5PVtOLmcuamQsTi5nLkliLE4uZy54YyxOLmcubmIsTi5nLnViLE4uZy5SYSxOLmcuQmEsTi5nLk9hLE4uZy5VYSxOLmcuUmJdLGJ5PXtjb25maWc6ZnVuY3Rpb24oYSxiKXt2YXIgYz1XeChhLGIpO2lmKCEoMj5hLmxlbmd0aCkmJmsoYVsxXSkpe3ZhciBkPXt9O2lmKDI8YS5sZW5ndGgpe2lmKHZvaWQgMCE9YVsyXSYmIWxiKGFbMl0pfHwzPGEubGVuZ3RoKXJldHVybjtkPWFbMl19dmFyIGU9Q2woYVsxXSxiLmlzR3RtRXZlbnQpO2lmKGUpe3ZhciBmLGcsaDthOntpZighT2oucWUpe3ZhciBtPVlqKFpqKCkpO2lmKGxrKG0pKXt2YXIgbj1tLnBhcmVudCxwPW4uaXNEZXN0aW5hdGlvbjtoPXtWbTpZaihuKSxLbTpwfTticmVhayBhfX1oPXZvaWQgMH12YXIgcT1oO3EmJihmPXEuVm0sZz1xLkttKTtvdyhjLmV2ZW50SWQsImd0YWcuY29uZmlnIik7dmFyIHI9ZS5iYSx0PWUuaWQhPT1yO2lmKHQ/LTE9PT1VaigpLmluZGV4T2Yocik6LTE9PT1TaigpLmluZGV4T2Yocikpe2lmKCFiLmluaGVyaXRQYXJlbnRDb25maWcmJgohZFtOLmcuRWJdKXt2YXIgdT0keChkKTtpZih0KUt2KHIsdSx7c291cmNlOjIsZnJvbUNvbnRhaW5lckV4ZWN1dGlvbjpiLmZyb21Db250YWluZXJFeGVjdXRpb259KTtlbHNlIGlmKHZvaWQgMCE9PWYmJi0xIT09Zi5jb250YWluZXJzLmluZGV4T2Yocikpe3ZhciB2PWQ7WHg/WngoYix2LFh4KTpZeHx8KFl4PW5iKHYpKX1lbHNlIEp2KHIsdSwhMCx7c291cmNlOjIsZnJvbUNvbnRhaW5lckV4ZWN1dGlvbjpiLmZyb21Db250YWluZXJFeGVjdXRpb259KX19ZWxzZXtpZihmJiYoTSgxMjgpLGcmJk0oMTMwKSxiLmluaGVyaXRQYXJlbnRDb25maWcpKXt2YXIgdzt2YXIgeD1kO1l4PyhaeChiLFl4LHgpLHc9ITEpOigheFtOLmcuWGJdJiZ4aSYmWHh8fChYeD1uYih4KSksdz0hMCk7dyYmZi5jb250YWluZXJzJiZmLmNvbnRhaW5lcnMuam9pbigiLCIpO3JldHVybn12YXIgeT1kO2lmKFIoMzUpJiYhVXgmJihVeD0hMCxUeCkpZm9yKHZhciBCPWZhKGF5KSxBPUIubmV4dCgpOyFBLmRvbmU7QT0KQi5uZXh0KCkpaWYoeS5oYXNPd25Qcm9wZXJ0eShBLnZhbHVlKSl7S2soImVyYyIpO2JyZWFrfWlmKHhpJiYhdCYmIWRbTi5nLlhiXSl7dmFyIEY9Vng7Vng9ITA7aWYoRilyZXR1cm59U3h8fE0oNDMpO2lmKCFiLm5vVGFyZ2V0R3JvdXApaWYodCl7UXgoZS5pZCk7dmFyIEc9ZS5pZCxEPWRbTi5nLlZkXXx8ImRlZmF1bHQiO0Q9U3RyaW5nKEQpLnNwbGl0KCIsIik7Zm9yKHZhciBFPTA7RTxELmxlbmd0aDtFKyspe3ZhciBPPU54W0RbRV1dfHxbXTtOeFtEW0VdXT1POzA+Ty5pbmRleE9mKEcpJiZPLnB1c2goRyl9fWVsc2V7UHgoZS5pZCk7dmFyIFA9ZS5pZCxUPWRbTi5nLlZkXXx8ImRlZmF1bHQiO1Q9VC50b1N0cmluZygpLnNwbGl0KCIsIik7Zm9yKHZhciBZPTA7WTxULmxlbmd0aDtZKyspe3ZhciBTPU14W1RbWV1dfHxbXTtNeFtUW1ldXT1TOzA+Uy5pbmRleE9mKFApJiZTLnB1c2goUCl9fWRlbGV0ZSBkW04uZy5WZF07dmFyIFU9Yi5ldmVudE1ldGFkYXRhfHx7fTtVLmhhc093blByb3BlcnR5KCJpc19leHRlcm5hbF9ldmVudCIpfHwKKFUuaXNfZXh0ZXJuYWxfZXZlbnQ9IWIuZnJvbUNvbnRhaW5lckV4ZWN1dGlvbik7Yi5ldmVudE1ldGFkYXRhPVU7ZGVsZXRlIGRbTi5nLmJkXTtmb3IodmFyIGphPXQ/W2UuaWRdOlVqKCksaGE9MDtoYTxqYS5sZW5ndGg7aGErKyl7dmFyIGNhPWQsRmE9amFbaGFdLG1hPW5iKGIpLEFhPUNsKEZhLG1hLmlzR3RtRXZlbnQpO0FhJiZrbS5wdXNoKCJjb25maWciLFtjYV0sQWEsbWEpfX19fX0sY29uc2VudDpmdW5jdGlvbihhLGIpe2lmKDM9PT1hLmxlbmd0aCl7TSgzOSk7dmFyIGM9V3goYSxiKSxkPWFbMV0sZT1hWzJdO2IuZnJvbUNvbnRhaW5lckV4ZWN1dGlvbnx8KGVbTi5nLk5dJiZNKDEzOSksZVtOLmcueGFdJiZNKDE0MCkpOyJkZWZhdWx0Ij09PWQ/cWwoZSk6InVwZGF0ZSI9PT1kP3JsKGUsYyk6ImRlY2xhcmUiPT09ZCYmYi5mcm9tQ29udGFpbmVyRXhlY3V0aW9uJiZwbChlKX19LGV2ZW50OmZ1bmN0aW9uKGEsYil7dmFyIGM9YVsxXTtpZighKDI+YS5sZW5ndGgpJiZrKGMpKXt2YXIgZDsKaWYoMjxhLmxlbmd0aCl7aWYoIWxiKGFbMl0pJiZ2b2lkIDAhPWFbMl18fDM8YS5sZW5ndGgpcmV0dXJuO2Q9YVsyXX12YXIgZT1kLGY9e30sZz0oZi5ldmVudD1jLGYpO2UmJihnLmV2ZW50TW9kZWw9bmIoZSksZVtOLmcuYmRdJiYoZy5ldmVudENhbGxiYWNrPWVbTi5nLmJkXSksZVtOLmcuU2RdJiYoZy5ldmVudFRpbWVvdXQ9ZVtOLmcuU2RdKSk7dmFyIGg9V3goYSxiKSxtPWguZXZlbnRJZCxuPWgucHJpb3JpdHlJZDtnWyJndG0udW5pcXVlRXZlbnRJZCJdPW07biYmKGdbImd0bS5wcmlvcml0eUlkIl09bik7aWYoIm9wdGltaXplLmNhbGxiYWNrIj09PWMpcmV0dXJuIGcuZXZlbnRNb2RlbD1nLmV2ZW50TW9kZWx8fHt9LGc7dmFyIHA7dmFyIHE9ZCxyPXEmJnFbTi5nLldiXTt2b2lkIDA9PT1yJiYocj1TaShOLmcuV2IsMiksdm9pZCAwPT09ciYmKHI9ImRlZmF1bHQiKSk7aWYoayhyKXx8SGEocikpe3ZhciB0O2IuaXNHdG1FdmVudD90PWsocik/W3JdOnI6dD1yLnRvU3RyaW5nKCkucmVwbGFjZSgvXHMrL2csCiIiKS5zcGxpdCgiLCIpO3ZhciB1PU94KHQsYi5pc0d0bUV2ZW50KSx2PXUuTG0sdz11LlBtO2lmKHcubGVuZ3RoKWZvcih2YXIgeD0keChxKSx5PTA7eTx3Lmxlbmd0aDt5Kyspe3ZhciBCPUNsKHdbeV0sYi5pc0d0bUV2ZW50KTtCJiZLdihCLmJhLHgse3NvdXJjZTozLGZyb21Db250YWluZXJFeGVjdXRpb246Yi5mcm9tQ29udGFpbmVyRXhlY3V0aW9ufSl9cD1FbCh2LGIuaXNHdG1FdmVudCl9ZWxzZSBwPXZvaWQgMDt2YXIgQT1wO2lmKEEpe0EubGVuZ3RoJiYoVHg9ITApO293KG0sYyk7Zm9yKHZhciBGPVtdLEc9MDtHPEEubGVuZ3RoO0crKyl7dmFyIEQ9QVtHXSxFPW5iKGIpO2lmKC0xIT09UnguaW5kZXhPZihjayhELnByZWZpeCkpKXt2YXIgTz1uYihkKSxQPUUuZXZlbnRNZXRhZGF0YXx8e307UC5oYXNPd25Qcm9wZXJ0eSgiaXNfZXh0ZXJuYWxfZXZlbnQiKXx8KFAuaXNfZXh0ZXJuYWxfZXZlbnQ9IUUuZnJvbUNvbnRhaW5lckV4ZWN1dGlvbik7RS5ldmVudE1ldGFkYXRhPQpQO2RlbGV0ZSBPW04uZy5iZF07bW0oYyxPLEQuaWQsRSl9Ri5wdXNoKEQuaWQpfWcuZXZlbnRNb2RlbD1nLmV2ZW50TW9kZWx8fHt9OzA8QS5sZW5ndGg/Zy5ldmVudE1vZGVsW04uZy5XYl09Ri5qb2luKCk6ZGVsZXRlIGcuZXZlbnRNb2RlbFtOLmcuV2JdO1N4fHxNKDQzKTt2b2lkIDA9PT1iLm5vR3RtRXZlbnQmJmIuZXZlbnRNZXRhZGF0YSYmYi5ldmVudE1ldGFkYXRhLnN5bl9vcl9tb2QmJihiLm5vR3RtRXZlbnQ9ITApO2cuZXZlbnRNb2RlbFtOLmcuVGJdJiYoYi5ub0d0bUV2ZW50PSEwKTtyZXR1cm4gYi5ub0d0bUV2ZW50P3ZvaWQgMDpnfX19LGdldDpmdW5jdGlvbihhLGIpe00oNTMpO2lmKDQ9PT1hLmxlbmd0aCYmayhhWzFdKSYmayhhWzJdKSYmRWEoYVszXSkpe3ZhciBjPUNsKGFbMV0sYi5pc0d0bUV2ZW50KSxkPVN0cmluZyhhWzJdKSxlPWFbM107aWYoYyl7U3h8fE0oNDMpO3ZhciBmPSR4KCk7aWYoIUlhKFVqKCksZnVuY3Rpb24oaCl7cmV0dXJuIGMuYmE9PT1ofSkpS3YoYy5iYSwKZix7c291cmNlOjQsZnJvbUNvbnRhaW5lckV4ZWN1dGlvbjpiLmZyb21Db250YWluZXJFeGVjdXRpb259KTtlbHNlIGlmKC0xIT09UnguaW5kZXhPZihjayhjLnByZWZpeCkpKXtXeChhLGIpO3ZhciBnPXt9O2tsKG5iKChnW04uZy5yYl09ZCxnW04uZy5EYl09ZSxnKSkpO25tKGQsZnVuY3Rpb24oaCl7SChmdW5jdGlvbigpe3JldHVybiBlKGgpfSl9LGMuaWQsYil9fX19LGpzOmZ1bmN0aW9uKGEsYil7aWYoMj09YS5sZW5ndGgmJmFbMV0uZ2V0VGltZSl7U3g9ITA7dmFyIGM9V3goYSxiKSxkPWMuZXZlbnRJZCxlPWMucHJpb3JpdHlJZCxmPXt9O3JldHVybiBmLmV2ZW50PSJndG0uanMiLGZbImd0bS5zdGFydCJdPWFbMV0uZ2V0VGltZSgpLGZbImd0bS51bmlxdWVFdmVudElkIl09ZCxmWyJndG0ucHJpb3JpdHlJZCJdPWUsZn19LHBvbGljeTpmdW5jdGlvbihhKXtpZigzPT09YS5sZW5ndGgmJmsoYVsxXSkmJkVhKGFbMl0pKXtQZihhWzFdLGFbMl0pOwppZihNKDc0KSwiYWxsIj09PWFbMV0pe00oNzUpO3ZhciBiPSExO3RyeXtiPWFbMl0oV2ooKSwidW5rbm93biIse30pfWNhdGNoKGMpe31ifHxNKDc2KX19ZWxzZXtNKDczKTt9fSxzZXQ6ZnVuY3Rpb24oYSxiKXt2YXIgYzsyPT1hLmxlbmd0aCYmbGIoYVsxXSk/Yz1uYihhWzFdKTozPT1hLmxlbmd0aCYmayhhWzFdKSYmKGM9e30sbGIoYVsyXSl8fEhhKGFbMl0pP2NbYVsxXV09bmIoYVsyXSk6Y1thWzFdXT1hWzJdKTtpZihjKXt2YXIgZD1XeChhLGIpLGU9ZC5ldmVudElkLGY9ZC5wcmlvcml0eUlkO25iKGMpO3ZhciBnPW5iKGMpO2ttLnB1c2goInNldCIsW2ddLHZvaWQgMCwKYik7Y1siZ3RtLnVuaXF1ZUV2ZW50SWQiXT1lO2YmJihjWyJndG0ucHJpb3JpdHlJZCJdPWYpO1IoNikmJmRlbGV0ZSBjLmV2ZW50O2Iub3ZlcndyaXRlTW9kZWxGaWVsZHM9ITA7cmV0dXJuIGN9fX0sY3k9e3BvbGljeTohMH07dmFyIGR5PWZ1bmN0aW9uKGEpe3ZhciBiPXpbcmkuamFdLmhpZGU7aWYoYiYmdm9pZCAwIT09YlthXSYmYi5lbmQpe2JbYV09ITE7dmFyIGM9ITAsZDtmb3IoZCBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoZCkmJiEwPT09YltkXSl7Yz0hMTticmVha31jJiYoYi5lbmQoKSxiLmVuZD1udWxsKX19LGV5PWZ1bmN0aW9uKGEpe3ZhciBiPXpbcmkuamFdLGM9YiYmYi5oaWRlO2MmJmMuZW5kJiYoY1thXT0hMCl9O3ZhciBmeT0hMSxneT1bXTtmdW5jdGlvbiBoeSgpe2lmKCFmeSl7Znk9ITA7Zm9yKHZhciBhPTA7YTxneS5sZW5ndGg7YSsrKUgoZ3lbYV0pfX12YXIgaXk9ZnVuY3Rpb24oYSl7Znk/SChhKTpneS5wdXNoKGEpfTt2YXIgenk9ZnVuY3Rpb24oYSl7aWYoeXkoYSkpcmV0dXJuIGE7dGhpcy5oPWF9O3p5LnByb3RvdHlwZS5nZXRVbnRydXN0ZWRNZXNzYWdlVmFsdWU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5ofTt2YXIgeXk9ZnVuY3Rpb24oYSl7cmV0dXJuIWF8fCJvYmplY3QiIT09amIoYSl8fGxiKGEpPyExOiJnZXRVbnRydXN0ZWRNZXNzYWdlVmFsdWUiaW4gYX07enkucHJvdG90eXBlLmdldFVudHJ1c3RlZE1lc3NhZ2VWYWx1ZT16eS5wcm90b3R5cGUuZ2V0VW50cnVzdGVkTWVzc2FnZVZhbHVlO3ZhciBBeT0wLEJ5PXt9LEN5PVtdLER5PVtdLEV5PSExLEZ5PSExO2Z1bmN0aW9uIEd5KGEsYil7cmV0dXJuIGEubWVzc2FnZUNvbnRleHQuZXZlbnRJZC1iLm1lc3NhZ2VDb250ZXh0LmV2ZW50SWR8fGEubWVzc2FnZUNvbnRleHQucHJpb3JpdHlJZC1iLm1lc3NhZ2VDb250ZXh0LnByaW9yaXR5SWR9CnZhciBIeT1mdW5jdGlvbihhKXtyZXR1cm4geltyaS5qYV0ucHVzaChhKX0sSXk9ZnVuY3Rpb24oYSxiLGMpe2EuZXZlbnRDYWxsYmFjaz1iO2MmJihhLmV2ZW50VGltZW91dD1jKTtyZXR1cm4gSHkoYSl9LEp5PWZ1bmN0aW9uKGEsYil7aWYoIUdhKGIpfHwwPmIpYj0wO3ZhciBjPXNpW3JpLmphXSxkPTAsZT0hMSxmPXZvaWQgMDtmPXouc2V0VGltZW91dChmdW5jdGlvbigpe2V8fChlPSEwLGEoKSk7Zj12b2lkIDB9LGIpO3JldHVybiBmdW5jdGlvbigpe3ZhciBnPWM/Yy5zdWJzY3JpYmVyczoxOysrZD09PWcmJihmJiYoei5jbGVhclRpbWVvdXQoZiksZj12b2lkIDApLGV8fChhKCksZT0hMCkpfX07CmZ1bmN0aW9uIEt5KGEsYil7dmFyIGM9YS5fY2xlYXJ8fGIub3ZlcndyaXRlTW9kZWxGaWVsZHM7bChhLGZ1bmN0aW9uKGUsZil7Il9jbGVhciIhPT1lJiYoYyYmVmkoZSksVmkoZSxmKSl9KTtGaXx8KEZpPWFbImd0bS5zdGFydCJdKTt2YXIgZD1hWyJndG0udW5pcXVlRXZlbnRJZCJdO2lmKCFhLmV2ZW50KXJldHVybiExOyJudW1iZXIiIT09dHlwZW9mIGQmJihkPUppKCksYVsiZ3RtLnVuaXF1ZUV2ZW50SWQiXT1kLFZpKCJndG0udW5pcXVlRXZlbnRJZCIsZCkpO3JldHVybiBMeChhKX0KZnVuY3Rpb24gTHkoYSl7aWYobnVsbD09YXx8Im9iamVjdCIhPT10eXBlb2YgYSlyZXR1cm4hMTtpZihhLmV2ZW50KXJldHVybiEwO2lmKE1hKGEpKXt2YXIgYj1hWzBdO2lmKCJjb25maWciPT09Ynx8ImV2ZW50Ij09PWJ8fCJqcyI9PT1ifHwiZ2V0Ij09PWIpcmV0dXJuITB9cmV0dXJuITF9CmZ1bmN0aW9uIE15KCl7dmFyIGE7aWYoRHkubGVuZ3RoKWE9RHkuc2hpZnQoKTtlbHNlIGlmKEN5Lmxlbmd0aClhPUN5LnNoaWZ0KCk7ZWxzZSByZXR1cm47dmFyIGI7dmFyIGM9YTtpZihFeXx8IUx5KGMubWVzc2FnZSkpYj1jO2Vsc2V7RXk9ITA7dmFyIGQ9Yy5tZXNzYWdlWyJndG0udW5pcXVlRXZlbnRJZCJdOyJudW1iZXIiIT09dHlwZW9mIGQmJihkPWMubWVzc2FnZVsiZ3RtLnVuaXF1ZUV2ZW50SWQiXT1KaSgpKTt2YXIgZT17fSxmPXttZXNzYWdlOihlLmV2ZW50PSJndG0uaW5pdF9jb25zZW50IixlWyJndG0udW5pcXVlRXZlbnRJZCJdPWQtMixlKSxtZXNzYWdlQ29udGV4dDp7ZXZlbnRJZDpkLTJ9fSxnPXt9LGg9e21lc3NhZ2U6KGcuZXZlbnQ9Imd0bS5pbml0IixnWyJndG0udW5pcXVlRXZlbnRJZCJdPWQtMSxnKSxtZXNzYWdlQ29udGV4dDp7ZXZlbnRJZDpkLTF9fTtDeS51bnNoaWZ0KGgsYyk7aWYodGspe3ZhciBtPVZmLmN0aWQ7aWYobSl7dmFyIG4scD1ZaihaaigpKTsKbj1wJiZwLmNvbnRleHQ7dmFyIHEscj12aih6LmxvY2F0aW9uLmhyZWYpO3E9ci5ob3N0bmFtZStyLnBhdGhuYW1lO3ZhciB0PW4mJm4uZnJvbUNvbnRhaW5lckV4ZWN1dGlvbix1PW4mJm4uc291cmNlLHY9VmYuY2Fub25pY2FsQ29udGFpbmVySWQsdz1Pai5xZTt0ayYmKEZsfHwoRmw9cSksR2wucHVzaChtKyI7Iit2KyI7IisodD8xOjApKyI7IisodXx8MCkrIjsiKyh3PzE6MCkpKX19Yj1mfXJldHVybiBifQpmdW5jdGlvbiBOeSgpe2Zvcih2YXIgYT0hMSxiOyFGeSYmKGI9TXkoKSk7KXtGeT0hMDtkZWxldGUgUGkuZXZlbnRNb2RlbDtSaSgpO3ZhciBjPWIsZD1jLm1lc3NhZ2UsZT1jLm1lc3NhZ2VDb250ZXh0O2lmKG51bGw9PWQpRnk9ITE7ZWxzZXtlLmZyb21Db250YWluZXJFeGVjdXRpb24mJldpKCk7dHJ5e2lmKEVhKGQpKXRyeXtkLmNhbGwoVGkpfWNhdGNoKHgpe31lbHNlIGlmKEhhKGQpKXt2YXIgZj1kO2lmKGsoZlswXSkpe3ZhciBnPWZbMF0uc3BsaXQoIi4iKSxoPWcucG9wKCksbT1mLnNsaWNlKDEpLG49U2koZy5qb2luKCIuIiksMik7aWYobnVsbCE9bil0cnl7bltoXS5hcHBseShuLG0pfWNhdGNoKHgpe319fWVsc2V7dmFyIHA9dm9pZCAwLHE9ITE7aWYoTWEoZCkpe2E6e2lmKGQubGVuZ3RoJiZrKGRbMF0pKXt2YXIgcj1ieVtkWzBdXTtpZihyJiYoIWUuZnJvbUNvbnRhaW5lckV4ZWN1dGlvbnx8IWN5W2RbMF1dKSl7cD1yKGQsZSk7YnJlYWsgYX19cD12b2lkIDB9KHE9cCYmCiJzZXQiPT09ZFswXSYmISFwLmV2ZW50KSYmTSgxMDEpfWVsc2UgcD1kO2lmKHApe3ZhciB0PUt5KHAsZSk7YT10fHxhO3EmJnQmJk0oMTEzKX19fWZpbmFsbHl7ZS5mcm9tQ29udGFpbmVyRXhlY3V0aW9uJiZSaSghMCk7dmFyIHU9ZFsiZ3RtLnVuaXF1ZUV2ZW50SWQiXTtpZigibnVtYmVyIj09PXR5cGVvZiB1KXtmb3IodmFyIHY9QnlbU3RyaW5nKHUpXXx8W10sdz0wO3c8di5sZW5ndGg7dysrKUR5LnB1c2goT3kodlt3XSkpO3YubGVuZ3RoJiZEeS5zb3J0KEd5KTtkZWxldGUgQnlbU3RyaW5nKHUpXTt1PkF5JiYoQXk9dSl9Rnk9ITF9fX1yZXR1cm4hYX0KZnVuY3Rpb24gUHkoKXtpZihSKDYxKSl7dmFyIGE9UXkoKTt9dmFyIGI9TnkoKTtpZihSKDYxKSl7fXRyeXtkeShXaigpKX1jYXRjaChjKXt9cmV0dXJuIGJ9CmZ1bmN0aW9uIHB4KGEpe2lmKEF5PGEubm90QmVmb3JlRXZlbnRJZCl7dmFyIGI9U3RyaW5nKGEubm90QmVmb3JlRXZlbnRJZCk7QnlbYl09QnlbYl18fFtdO0J5W2JdLnB1c2goYSl9ZWxzZSBEeS5wdXNoKE95KGEpKSxEeS5zb3J0KEd5KSxIKGZ1bmN0aW9uKCl7Rnl8fE55KCl9KX1mdW5jdGlvbiBPeShhKXtyZXR1cm57bWVzc2FnZTphLm1lc3NhZ2UsbWVzc2FnZUNvbnRleHQ6YS5tZXNzYWdlQ29udGV4dH19CnZhciBSeT1mdW5jdGlvbigpe2Z1bmN0aW9uIGEoZil7dmFyIGc9e307aWYoeXkoZikpe3ZhciBoPWY7Zj15eShoKT9oLmdldFVudHJ1c3RlZE1lc3NhZ2VWYWx1ZSgpOnZvaWQgMDtnLmZyb21Db250YWluZXJFeGVjdXRpb249ITB9cmV0dXJue21lc3NhZ2U6ZixtZXNzYWdlQ29udGV4dDpnfX12YXIgYj1EYyhyaS5qYSxbXSksYz1zaVtyaS5qYV09c2lbcmkuamFdfHx7fTshMD09PWMucHJ1bmVkJiZNKDgzKTtCeT1ueCgpLmdldCgpO3F4KCk7UXYoZnVuY3Rpb24oKXtpZighYy5ndG1Eb20pe2MuZ3RtRG9tPSEwO3ZhciBmPXt9O2IucHVzaCgoZi5ldmVudD0iZ3RtLmRvbSIsZikpfX0pO2l5KGZ1bmN0aW9uKCl7aWYoIWMuZ3RtTG9hZCl7Yy5ndG1Mb2FkPSEwO3ZhciBmPXt9O2IucHVzaCgoZi5ldmVudD0iZ3RtLmxvYWQiLGYpKX19KTtjLnN1YnNjcmliZXJzPShjLnN1YnNjcmliZXJzfHwwKSsxO3ZhciBkPWIucHVzaDtiLnB1c2g9ZnVuY3Rpb24oKXt2YXIgZjtpZigwPHNpLlNBTkRCT1hFRF9KU19TRU1BUEhPUkUpe2Y9CltdO2Zvcih2YXIgZz0wO2c8YXJndW1lbnRzLmxlbmd0aDtnKyspZltnXT1uZXcgenkoYXJndW1lbnRzW2ddKX1lbHNlIGY9W10uc2xpY2UuY2FsbChhcmd1bWVudHMsMCk7dmFyIGg9Zi5tYXAoZnVuY3Rpb24ocSl7cmV0dXJuIGEocSl9KTtDeS5wdXNoLmFwcGx5KEN5LGgpO3ZhciBtPWQuYXBwbHkoYixmKSxuPU1hdGgubWF4KDEwMCxOdW1iZXIoIjEwMDAiKXx8MzAwKTtpZih0aGlzLmxlbmd0aD5uKWZvcihNKDQpLGMucHJ1bmVkPSEwO3RoaXMubGVuZ3RoPm47KXRoaXMuc2hpZnQoKTt2YXIgcD0iYm9vbGVhbiIhPT10eXBlb2YgbXx8bTtyZXR1cm4gTnkoKSYmcH07dmFyIGU9Yi5zbGljZSgwKS5tYXAoZnVuY3Rpb24oZil7cmV0dXJuIGEoZil9KTtDeS5wdXNoLmFwcGx5KEN5LGUpO2lmKFF5KCkpe2lmKFIoNjEpKXt9SChQeSl9fSxReT1mdW5jdGlvbigpe3ZhciBhPSEwO3JldHVybiBhfTtmdW5jdGlvbiBTeShhKXtpZihudWxsPT1hfHwwPT09YS5sZW5ndGgpcmV0dXJuITE7dmFyIGI9TnVtYmVyKGEpLGM9VGEoKTtyZXR1cm4gYjxjKzNFNSYmYj5jLTlFNX1mdW5jdGlvbiBUeShhKXtyZXR1cm4gYSYmMD09PWEuaW5kZXhPZigicGVuZGluZzoiKT9TeShhLnN1YnN0cig4KSk6ITF9OwoKdmFyIG56PWZ1bmN0aW9uKCl7fTt2YXIgb3o9ZnVuY3Rpb24oKXt9O296LnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiJ1bmRlZmluZWQifTt2YXIgcHo9bmV3IG96Owp2YXIgd3o9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPXtldmVudDpiLCJndG0uZWxlbWVudCI6YSwiZ3RtLmVsZW1lbnRDbGFzc2VzIjpXYyhhLCJjbGFzc05hbWUiKSwiZ3RtLmVsZW1lbnRJZCI6YVsiZm9yIl18fE9jKGEsImlkIil8fCIiLCJndG0uZWxlbWVudFRhcmdldCI6YS5mb3JtVGFyZ2V0fHxXYyhhLCJ0YXJnZXQiKXx8IiJ9O2MmJihkWyJndG0udHJpZ2dlcnMiXT1jLmpvaW4oIiwiKSk7ZFsiZ3RtLmVsZW1lbnRVcmwiXT0oYS5hdHRyaWJ1dGVzJiZhLmF0dHJpYnV0ZXMuZm9ybWFjdGlvbj9hLmZvcm1BY3Rpb246IiIpfHxhLmFjdGlvbnx8V2MoYSwiaHJlZiIpfHxhLnNyY3x8YS5jb2RlfHxhLmNvZGViYXNlfHwiIjtyZXR1cm4gZH0seHo9ZnVuY3Rpb24oYSl7c2kuaGFzT3duUHJvcGVydHkoImF1dG9FdmVudHNTZXR0aW5ncyIpfHwoc2kuYXV0b0V2ZW50c1NldHRpbmdzPXt9KTt2YXIgYj1zaS5hdXRvRXZlbnRzU2V0dGluZ3M7Yi5oYXNPd25Qcm9wZXJ0eShhKXx8KGJbYV09Cnt9KTtyZXR1cm4gYlthXX0seXo9ZnVuY3Rpb24oYSxiLGMpe3h6KGEpW2JdPWN9LHp6PWZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPXh6KGEpLGY9VWEoZSxiLGQpO2VbYl09YyhmKX0sQXo9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPXh6KGEpO3JldHVybiBVYShkLGIsYyl9LEJ6PWZ1bmN0aW9uKGEsYil7QXooYSwiaW5pdCIsITEpfHwoeXooYSwiaW5pdCIsITApLGIoKSl9LEN6PWZ1bmN0aW9uKGEpe3JldHVybiJzdHJpbmciPT09dHlwZW9mIGE/YTpTdHJpbmcoSmkoKSl9Owp2YXIgRHo9WyJpbnB1dCIsInNlbGVjdCIsInRleHRhcmVhIl0sRXo9WyJidXR0b24iLCJoaWRkZW4iLCJpbWFnZSIsInJlc2V0Iiwic3VibWl0Il0sRno9ZnVuY3Rpb24oYSl7dmFyIGI9YS50YWdOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuIDA+RHouaW5kZXhPZihiKXx8ImlucHV0Ij09PWImJjA8PUV6LmluZGV4T2YoYS50eXBlLnRvTG93ZXJDYXNlKCkpPyExOiEwfSxHej1mdW5jdGlvbihhKXtyZXR1cm4gYS5mb3JtP2EuZm9ybS50YWdOYW1lP2EuZm9ybTpDLmdldEVsZW1lbnRCeUlkKGEuZm9ybSk6UmMoYSxbImZvcm0iXSwxMDApfSxIej1mdW5jdGlvbihhLGIsYyl7aWYoIWEuZWxlbWVudHMpcmV0dXJuIDA7Zm9yKHZhciBkPWIuZGF0YXNldFtjXSxlPTAsZj0xO2U8YS5lbGVtZW50cy5sZW5ndGg7ZSsrKXt2YXIgZz1hLmVsZW1lbnRzW2VdO2lmKEZ6KGcpKXtpZihnLmRhdGFzZXRbY109PT1kKXJldHVybiBmO2YrK319cmV0dXJuIDB9O3ZhciBJej0hIXouTXV0YXRpb25PYnNlcnZlcixKej12b2lkIDAsS3o9ZnVuY3Rpb24oYSl7aWYoIUp6KXt2YXIgYj1mdW5jdGlvbigpe3ZhciBjPUMuYm9keTtpZihjKWlmKEl6KShuZXcgTXV0YXRpb25PYnNlcnZlcihmdW5jdGlvbigpe2Zvcih2YXIgZT0wO2U8SnoubGVuZ3RoO2UrKylIKEp6W2VdKX0pKS5vYnNlcnZlKGMse2NoaWxkTGlzdDohMCxzdWJ0cmVlOiEwfSk7ZWxzZXt2YXIgZD0hMTtNYyhjLCJET01Ob2RlSW5zZXJ0ZWQiLGZ1bmN0aW9uKCl7ZHx8KGQ9ITAsSChmdW5jdGlvbigpe2Q9ITE7Zm9yKHZhciBlPTA7ZTxKei5sZW5ndGg7ZSsrKUgoSnpbZV0pfSkpfSl9fTtKej1bXTtDLmJvZHk/YigpOkgoYil9SnoucHVzaChhKX0sTHo9ZnVuY3Rpb24oYSl7aWYoSnopZm9yKHZhciBiPTA7YjxKei5sZW5ndGg7YisrKUp6W2JdPT09YSYmSnouc3BsaWNlKGIsMSl9Owp2YXIgV3o9ZnVuY3Rpb24oYSxiLGMpe2Z1bmN0aW9uIGQoKXt2YXIgZz1hKCk7Zis9ZT8oVGEoKS1lKSpnLnBsYXliYWNrUmF0ZS8xRTM6MDtlPVRhKCl9dmFyIGU9MCxmPTA7cmV0dXJue2NyZWF0ZUV2ZW50OmZ1bmN0aW9uKGcsaCxtKXt2YXIgbj1hKCkscD1uLnJoLHE9dm9pZCAwIT09bT9NYXRoLnJvdW5kKG0pOnZvaWQgMCE9PWg/TWF0aC5yb3VuZChuLnJoKmgpOk1hdGgucm91bmQobi5Kaikscj12b2lkIDAhPT1oP01hdGgucm91bmQoMTAwKmgpOjA+PXA/MDpNYXRoLnJvdW5kKHEvcCoxMDApLHQ9Qy5oaWRkZW4/ITE6LjU8PXByKGMpO2QoKTt2YXIgdT12b2lkIDA7dm9pZCAwIT09YiYmKHU9W2JdKTt2YXIgdj13eihjLCJndG0udmlkZW8iLHUpO3ZbImd0bS52aWRlb1Byb3ZpZGVyIl09InlvdXR1YmUiO3ZbImd0bS52aWRlb1N0YXR1cyJdPWc7dlsiZ3RtLnZpZGVvVXJsIl09bi51cmw7dlsiZ3RtLnZpZGVvVGl0bGUiXT1uLnRpdGxlO3ZbImd0bS52aWRlb0R1cmF0aW9uIl09Ck1hdGgucm91bmQocCk7dlsiZ3RtLnZpZGVvQ3VycmVudFRpbWUiXT1NYXRoLnJvdW5kKHEpO3ZbImd0bS52aWRlb0VsYXBzZWRUaW1lIl09TWF0aC5yb3VuZChmKTt2WyJndG0udmlkZW9QZXJjZW50Il09cjt2WyJndG0udmlkZW9WaXNpYmxlIl09dDtyZXR1cm4gdn0sZ2s6ZnVuY3Rpb24oKXtlPVRhKCl9LHBkOmZ1bmN0aW9uKCl7ZCgpfX19O3ZhciBYej16LmNsZWFyVGltZW91dCxZej16LnNldFRpbWVvdXQsWno9ZnVuY3Rpb24oYSxiLGMsZCl7aWYoS24oKSl7YiYmSChiKX1lbHNlIHJldHVybiBJYyhhLGIsYyxkKX0sJHo9ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IERhdGV9LGFBPWZ1bmN0aW9uKCl7cmV0dXJuIHoubG9jYXRpb24uaHJlZn0sYkE9ZnVuY3Rpb24oYSl7cmV0dXJuIHJqKHZqKGEpLCJmcmFnbWVudCIpfSxjQT1mdW5jdGlvbihhKXtyZXR1cm4gc2oodmooYSkpfSxkQT1mdW5jdGlvbihhLGIpe3JldHVybiBTaShhLGJ8fDIpfSxlQT1mdW5jdGlvbihhLGIsYyl7cmV0dXJuIGI/SXkoYSxiLGMpOkh5KGEpfSxmQT1mdW5jdGlvbihhLGIpe3pbYV09Yn0sVz1mdW5jdGlvbihhLGIsYyl7YiYmKHZvaWQgMD09PXpbYV18fGMmJiF6W2FdKSYmKHpbYV09Yik7cmV0dXJuIHpbYV19LApnQT1mdW5jdGlvbihhLGIsYyl7cmV0dXJuIFFuKGEsYix2b2lkIDA9PT1jPyEwOiEhYyl9LGhBPWZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gMD09PVpuKGEsYixjKX0saUE9ZnVuY3Rpb24oYSxiKXtpZihLbigpKXtiJiZIKGIpfWVsc2UgS2MoYSxiKX0sakE9ZnVuY3Rpb24oYSl7cmV0dXJuISFBeihhLCJpbml0IiwhMSl9LGtBPWZ1bmN0aW9uKGEpe3l6KGEsImluaXQiLCEwKX07CgpmdW5jdGlvbiBIQShhLGIpe2Z1bmN0aW9uIGMoZyl7dmFyIGg9dmooZyksbT1yaihoLCJwcm90b2NvbCIpLG49cmooaCwiaG9zdCIsITApLHA9cmooaCwicG9ydCIpLHE9cmooaCwicGF0aCIpLnRvTG93ZXJDYXNlKCkucmVwbGFjZSgvXC8kLywiIik7aWYodm9pZCAwPT09bXx8Imh0dHAiPT09bSYmIjgwIj09PXB8fCJodHRwcyI9PT1tJiYiNDQzIj09PXApbT0id2ViIixwPSJkZWZhdWx0IjtyZXR1cm5bbSxuLHAscV19Zm9yKHZhciBkPWMoU3RyaW5nKGEpKSxlPWMoU3RyaW5nKGIpKSxmPTA7ZjxkLmxlbmd0aDtmKyspaWYoZFtmXSE9PWVbZl0pcmV0dXJuITE7cmV0dXJuITB9CmZ1bmN0aW9uIElBKGEpe3JldHVybiBKQShhKT8xOjB9CmZ1bmN0aW9uIEpBKGEpe3ZhciBiPWEuYXJnMCxjPWEuYXJnMTtpZihhLmFueV9vZiYmQXJyYXkuaXNBcnJheShjKSl7Zm9yKHZhciBkPTA7ZDxjLmxlbmd0aDtkKyspe3ZhciBlPW5iKGEse30pO25iKHthcmcxOmNbZF0sYW55X29mOnZvaWQgMH0sZSk7aWYoSUEoZSkpcmV0dXJuITB9cmV0dXJuITF9c3dpdGNoKGFbImZ1bmN0aW9uIl0pe2Nhc2UgIl9jbiI6cmV0dXJuIHZnKGIsYyk7Y2FzZSAiX2NzcyI6dmFyIGY7YTp7aWYoYil0cnl7Zm9yKHZhciBnPTA7ZzxyZy5sZW5ndGg7ZysrKXt2YXIgaD1yZ1tnXTtpZihiW2hdKXtmPWJbaF0oYyk7YnJlYWsgYX19fWNhdGNoKG0pe31mPSExfXJldHVybiBmO2Nhc2UgIl9ldyI6cmV0dXJuIHNnKGIsYyk7Y2FzZSAiX2VxIjpyZXR1cm4gd2coYixjKTtjYXNlICJfZ2UiOnJldHVybiB4ZyhiLGMpO2Nhc2UgIl9ndCI6cmV0dXJuIHpnKGIsYyk7Y2FzZSAiX2xjIjpyZXR1cm4gMDw9U3RyaW5nKGIpLnNwbGl0KCIsIikuaW5kZXhPZihTdHJpbmcoYykpOwpjYXNlICJfbGUiOnJldHVybiB5ZyhiLGMpO2Nhc2UgIl9sdCI6cmV0dXJuIEFnKGIsYyk7Y2FzZSAiX3JlIjpyZXR1cm4gdWcoYixjLGEuaWdub3JlX2Nhc2UpO2Nhc2UgIl9zdyI6cmV0dXJuIEJnKGIsYyk7Y2FzZSAiX3VtIjpyZXR1cm4gSEEoYixjKX1yZXR1cm4hMX07ZnVuY3Rpb24gS0EoKXt2YXIgYT1bWyJjdiIsIjEiXSxbInJ2IixyaS5maF0sWyJ0YyIsb2YuZmlsdGVyKGZ1bmN0aW9uKGIpe3JldHVybiBifSkubGVuZ3RoXV07cmkudWUmJmEucHVzaChbIngiLHJpLnVlXSk7TGkuaCYmYS5wdXNoKFsidGFnX2V4cCIsTGkuaF0pO3JldHVybiBhfTtmdW5jdGlvbiBMQSgpe3ZhciBhPWZqKCk7cmV0dXJuIGEubGVuZ3RoP1tbImV4cF9nZW8iLGFdXTpbXX12YXIgTUE7ZnVuY3Rpb24gTkEoKXt0cnl7bnVsbCE9TUF8fChNQT0obmV3IEludGwuRGF0ZVRpbWVGb3JtYXQpLnJlc29sdmVkT3B0aW9ucygpLnRpbWVab25lKX1jYXRjaChiKXt9dmFyIGE7cmV0dXJuKG51bGw9PShhPU1BKT8wOmEubGVuZ3RoKT9bWyJleHBfdHoiLE1BXV06W119O2Z1bmN0aW9uIE9BKGEpe2lmKGEuc2NyaXB0U291cmNlKXt2YXIgYjt0cnl7Yj1ZYygpLmdldEVudHJpZXNCeVR5cGUoInJlc291cmNlIil9Y2F0Y2goZyl7fWlmKGIpe2Zvcih2YXIgYz17fSxkPTA7ZDxiLmxlbmd0aDsrK2Qpe3ZhciBlPWJbZF0sZj1lLmluaXRpYXRvclR5cGU7aWYoInNjcmlwdCI9PT1mJiZlLm5hbWU9PT1hLnNjcmlwdFNvdXJjZSlyZXR1cm57bG46ZCxtbjpjfTtjW2ZdPTErKGNbZl18fDApfU0oMTQ2KX1lbHNlIE0oMTQ1KX19ZnVuY3Rpb24gUEEoKXtpZih0ayYmUig3Mykpe3ZhciBhPWFrKCk7aWYoIWEpTSgxNDQpO2Vsc2UgaWYoYS5jYW5vbmljYWxDb250YWluZXJJZCl7dmFyIGI9T0EoYSk7aWYoYil7dmFyIGM9ITE7b2soZnVuY3Rpb24oZCl7aWYoYylyZXR1cm5bXTtkLnpiJiYoYz0hMCk7ZC5kZygpO3JldHVybltbInJ0ZyIsYS5jYW5vbmljYWxDb250YWluZXJJZF0sWyJybG8iLGIubG5dLFsic2xvIixiLm1uLnNjcmlwdHx8MF1dfSl9fX19O3ZhciBRQT1mdW5jdGlvbigpe3JldHVybiExfSxSQT1mdW5jdGlvbigpe3ZhciBhPXt9O3JldHVybiBmdW5jdGlvbihiLGMsZCl7fX07ZnVuY3Rpb24gU0EoKXt2YXIgYT1UQTtyZXR1cm4gZnVuY3Rpb24oYixjLGQpe3ZhciBlPWQmJmQuZXZlbnQ7VUEoYyk7dmFyIGY9MD09PWIuaW5kZXhPZigiX19jdnRfIik/dm9pZCAwOjEsZz1uZXcgc2I7bChjLGZ1bmN0aW9uKHIsdCl7dmFyIHU9bWQodCx2b2lkIDAsZik7dm9pZCAwPT09dSYmdm9pZCAwIT09dCYmTSg0NCk7Zy5zZXQocix1KX0pO2EuaC5oLkY9SWYoKTt2YXIgaD17SGo6WmYoYiksZXZlbnRJZDp2b2lkIDAhPT1lP2UuaWQ6dm9pZCAwLHByaW9yaXR5SWQ6dm9pZCAwIT09ZT9lLnByaW9yaXR5SWQ6dm9pZCAwLExmOnZvaWQgMCE9PWU/ZnVuY3Rpb24ocil7cmV0dXJuIGUuZmMuTGYocil9OnZvaWQgMCxoYzpmdW5jdGlvbigpe3JldHVybiBifSxsb2c6ZnVuY3Rpb24oKXt9LFBsOntpbmRleDpkJiZkLmluZGV4LHR5cGU6ZCYmZC50eXBlLG5hbWU6ZCYmZC5uYW1lfSxrbjohIXR2KGIsMyksb3JpZ2luYWxFdmVudERhdGE6bnVsbD09ZT92b2lkIDA6ZS5vcmlnaW5hbEV2ZW50RGF0YX07CmUmJmUuY2FjaGVkTW9kZWxWYWx1ZXMmJihoLmNhY2hlZE1vZGVsVmFsdWVzPXtndG06ZS5jYWNoZWRNb2RlbFZhbHVlcy5ndG0sZWNvbW1lcmNlOmUuY2FjaGVkTW9kZWxWYWx1ZXMuZWNvbW1lcmNlfSk7aWYoUUEoKSl7dmFyIG09UkEoKSxuPXZvaWQgMCxwPXZvaWQgMDtoLmhiPXtmaTpbXSx4ZTp7fSx4YjpmdW5jdGlvbihyLHQsdSl7MT09PXQmJihuPXIpOzc9PT10JiYocD11KTttKHIsdCx1KX0sTGg6cWgoKX07aC5sb2c9ZnVuY3Rpb24ocix0KXtpZihuKXt2YXIgdT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMSk7bShuLDQse2xldmVsOnIsc291cmNlOnAsbWVzc2FnZTp1fSl9fX12YXIgcT1LZShhLGgsW2IsZ10pO2EuaC5oLkY9dm9pZCAwO3EgaW5zdGFuY2VvZiB3YSYmInJldHVybiI9PT1xLmgmJihxPXEucyk7cmV0dXJuIG5kKHEsdm9pZCAwLGYpfX0KZnVuY3Rpb24gVUEoYSl7dmFyIGI9YS5ndG1PblN1Y2Nlc3MsYz1hLmd0bU9uRmFpbHVyZTtFYShiKSYmKGEuZ3RtT25TdWNjZXNzPWZ1bmN0aW9uKCl7SChiKX0pO0VhKGMpJiYoYS5ndG1PbkZhaWx1cmU9ZnVuY3Rpb24oKXtIKGMpfSl9O2Z1bmN0aW9uIFZBKGEsYil7dmFyIGM9dGhpczt9VkEuUD0iYWRkQ29uc2VudExpc3RlbmVyIjt2YXIgV0E7dmFyIFhBPWZ1bmN0aW9uKGEpe2Zvcih2YXIgYj0wO2I8YS5sZW5ndGg7KytiKWlmKFdBKXRyeXthW2JdKCl9Y2F0Y2goYyl7TSg3Nyl9ZWxzZSBhW2JdKCl9O2Z1bmN0aW9uIFlBKGEsYixjKXt2YXIgZD10aGlzLGU7SyhKKHRoaXMpLFsiZXZlbnROYW1lOiFzdHJpbmciLCJjYWxsYmFjazohRm4iLCJ0cmlnZ2VySWQ6P3N0cmluZyJdLGFyZ3VtZW50cyksWEEoW2Z1bmN0aW9uKCl7cmV0dXJuIEwoZCwibGlzdGVuX2RhdGFfbGF5ZXIiLGEpfV0pLGU9R3goKS5hZGRMaXN0ZW5lcihhLG5kKGIpLGMpO3JldHVybiBlfVlBLkQ9ImludGVybmFsLmFkZERhdGFMYXllckV2ZW50TGlzdGVuZXIiO2Z1bmN0aW9uIFpBKGEsYixjKXt9WkEuUD0iYWRkRG9jdW1lbnRFdmVudExpc3RlbmVyIjtmdW5jdGlvbiAkQShhLGIsYyxkKXt9JEEuUD0iYWRkRWxlbWVudEV2ZW50TGlzdGVuZXIiO2Z1bmN0aW9uIGFCKGEpe31hQi5QPSJhZGRFdmVudENhbGxiYWNrIjsKZnVuY3Rpb24gZUIoYSl7fWVCLkQ9ImludGVybmFsLmFkZEZvcm1BYmFuZG9ubWVudExpc3RlbmVyIjtmdW5jdGlvbiBmQihhLGIsYyxkKXt9ZkIuRD0iaW50ZXJuYWwuYWRkRm9ybURhdGEiO3ZhciBnQj17fSxoQj1bXSxpQj17fSxqQj0wLGtCPTA7CnZhciBtQj1mdW5jdGlvbigpe01jKEMsImNoYW5nZSIsZnVuY3Rpb24oYSl7Zm9yKHZhciBiPTA7YjxoQi5sZW5ndGg7YisrKWhCW2JdKGEpfSk7TWMoeiwicGFnZWhpZGUiLGZ1bmN0aW9uKCl7bEIoKX0pfSxsQj1mdW5jdGlvbigpe2woaUIsZnVuY3Rpb24oYSxiKXt2YXIgYz1nQlthXTtjJiZsKGIsZnVuY3Rpb24oZCxlKXtuQihlLGMpfSl9KX0scUI9ZnVuY3Rpb24oYSxiKXt2YXIgYz0iIithO2lmKGdCW2NdKWdCW2NdLnB1c2goYik7ZWxzZXt2YXIgZD1bYl07Z0JbY109ZDt2YXIgZT1pQltjXTtlfHwoZT17fSxpQltjXT1lKTtoQi5wdXNoKGZ1bmN0aW9uKGYpe3ZhciBnPWYudGFyZ2V0O2lmKGcpe3ZhciBoPUd6KGcpO2lmKGgpe3ZhciBtPW9CKGgsImd0bUZvcm1JbnRlcmFjdElkIixmdW5jdGlvbigpe3JldHVybiBqQisrfSksbj1vQihnLCJndG1Gb3JtSW50ZXJhY3RGaWVsZElkIixmdW5jdGlvbigpe3JldHVybiBrQisrfSkscD1lW21dO3A/KHAuTWEmJih6LmNsZWFyVGltZW91dChwLk1hKSwKcC53YS5kYXRhc2V0Lmd0bUZvcm1JbnRlcmFjdEZpZWxkSWQhPT1uJiZuQihwLGQpKSxwLndhPWcscEIocCxkLGEpKTooZVttXT17Zm9ybTpoLHdhOmcsamM6MCxNYTpudWxsfSxwQihlW21dLGQsYSkpfX19KX19LG5CPWZ1bmN0aW9uKGEsYil7dmFyIGM9YS5mb3JtLGQ9YS53YSxlPXd6KGMsImd0bS5mb3JtSW50ZXJhY3QiKSxmPWMuYWN0aW9uO2YmJmYudGFnTmFtZSYmKGY9Yy5jbG9uZU5vZGUoITEpLmFjdGlvbik7ZVsiZ3RtLmVsZW1lbnRVcmwiXT1mO2VbImd0bS5pbnRlcmFjdGVkRm9ybU5hbWUiXT1jLmdldEF0dHJpYnV0ZSgibmFtZSIpO2VbImd0bS5pbnRlcmFjdGVkRm9ybUxlbmd0aCJdPWMubGVuZ3RoO2VbImd0bS5pbnRlcmFjdGVkRm9ybUZpZWxkIl09ZDtlWyJndG0uaW50ZXJhY3RlZEZvcm1GaWVsZFBvc2l0aW9uIl09SHooYyxkLCJndG1Gb3JtSW50ZXJhY3RGaWVsZElkIik7ZVsiZ3RtLmludGVyYWN0U2VxdWVuY2VOdW1iZXIiXT1hLmpjO2VbImd0bS5pbnRlcmFjdGVkRm9ybUZpZWxkSWQiXT0KZC5pZDtlWyJndG0uaW50ZXJhY3RlZEZvcm1GaWVsZE5hbWUiXT1kLmdldEF0dHJpYnV0ZSgibmFtZSIpO2VbImd0bS5pbnRlcmFjdGVkRm9ybUZpZWxkVHlwZSJdPWQuZ2V0QXR0cmlidXRlKCJ0eXBlIik7Zm9yKHZhciBnPTA7ZzxiLmxlbmd0aDtnKyspYltnXShlKTthLmpjKys7YS5NYT1udWxsfSxwQj1mdW5jdGlvbihhLGIsYyl7Yz9hLk1hPXouc2V0VGltZW91dChmdW5jdGlvbigpe25CKGEsYil9LGMpOm5CKGEsYil9LG9CPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1hLmRhdGFzZXRbYl07aWYoZClyZXR1cm4gZDtkPVN0cmluZyhjKCkpO3JldHVybiBhLmRhdGFzZXRbYl09ZH07CmZ1bmN0aW9uIHJCKGEsYil7SyhKKHRoaXMpLFsiY2FsbGJhY2s6IUZuIiwib3B0aW9uczo/KiJdLGFyZ3VtZW50cyk7dmFyIGM9bmQoYil8fHt9LGQ9TnVtYmVyKGMuaW50ZXJ2YWwpO2lmKCFkfHwwPmQpZD0wO3ZhciBlPW5kKGEpLGY7QXooInBpeC5maWwiLCJpbml0Iik/Zj1BeigicGl4LmZpbCIsInJlZyIpOihtQigpLGY9cUIseXooInBpeC5maWwiLCJyZWciLHFCKSx5eigicGl4LmZpbCIsImluaXQiLCEwKSk7ZihkLGUpO31yQi5EPSJpbnRlcm5hbC5hZGRGb3JtSW50ZXJhY3Rpb25MaXN0ZW5lciI7CnZhciB0Qj1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9d3ooYSwiZ3RtLmZvcm1TdWJtaXQiKTtkWyJndG0uaW50ZXJhY3RlZEZvcm1OYW1lIl09YS5nZXRBdHRyaWJ1dGUoIm5hbWUiKTtkWyJndG0uaW50ZXJhY3RlZEZvcm1MZW5ndGgiXT1hLmxlbmd0aDtkWyJndG0ud2lsbE9wZW5JbkN1cnJlbnRXaW5kb3ciXT0hYiYmc0IoYSk7YyYmYy52YWx1ZSYmKGRbImd0bS5mb3JtU3VibWl0QnV0dG9uVGV4dCJdPWMudmFsdWUpO3ZhciBlPWEuYWN0aW9uO2UmJmUudGFnTmFtZSYmKGU9YS5jbG9uZU5vZGUoITEpLmFjdGlvbik7ZFsiZ3RtLmVsZW1lbnRVcmwiXT1lO2RbImd0bS5mb3JtQ2FuY2VsZWQiXT1iO3JldHVybiBkfSx1Qj1mdW5jdGlvbihhLGIpe3ZhciBjPUF6KCJwaXguZnNsIixhPyJudi5td3QiOiJtd3QiLDApO3ouc2V0VGltZW91dChiLGMpfSx2Qj1mdW5jdGlvbihhLGIsYyxkLGUpe3ZhciBmPUF6KCJwaXguZnNsIixjPyJudi5td3QiOiJtd3QiLDApLGc9QXooInBpeC5mc2wiLApjPyJydW5JZkNhbmNlbGVkIjoicnVuSWZVbmNhbmNlbGVkIixbXSk7aWYoIWcubGVuZ3RoKXJldHVybiEwO3ZhciBoPXRCKGEsYyxlKTtNKDEyMSk7aWYoImh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS90ci8iPT09aFsiZ3RtLmVsZW1lbnRVcmwiXSlyZXR1cm4gTSgxMjIpLCEwO2lmKGQmJmYpe2Zvcih2YXIgbT1jYihiLGcubGVuZ3RoKSxuPTA7bjxnLmxlbmd0aDsrK24pZ1tuXShoLG0pO3JldHVybiBtLmRvbmV9Zm9yKHZhciBwPTA7cDxnLmxlbmd0aDsrK3ApZ1twXShoLGZ1bmN0aW9uKCl7fSk7cmV0dXJuITB9LHdCPWZ1bmN0aW9uKCl7dmFyIGE9W10sYj1mdW5jdGlvbihjKXtyZXR1cm4gSWEoYSxmdW5jdGlvbihkKXtyZXR1cm4gZC5mb3JtPT09Y30pfTtyZXR1cm57c3RvcmU6ZnVuY3Rpb24oYyxkKXt2YXIgZT1iKGMpO2U/ZS5idXR0b249ZDphLnB1c2goe2Zvcm06YyxidXR0b246ZH0pfSxnZXQ6ZnVuY3Rpb24oYyl7dmFyIGQ9YihjKTtyZXR1cm4gZD9kLmJ1dHRvbjpudWxsfX19LApzQj1mdW5jdGlvbihhKXt2YXIgYj1XYyhhLCJ0YXJnZXQiKTtyZXR1cm4gYiYmIl9zZWxmIiE9PWImJiJfcGFyZW50IiE9PWImJiJfdG9wIiE9PWI/ITE6ITB9LHhCPWZ1bmN0aW9uKCl7dmFyIGE9d0IoKSxiPUhUTUxGb3JtRWxlbWVudC5wcm90b3R5cGUuc3VibWl0O01jKEMsImNsaWNrIixmdW5jdGlvbihjKXt2YXIgZD1jLnRhcmdldDtpZihkJiYoZD1SYyhkLFsiYnV0dG9uIiwiaW5wdXQiXSwxMDApKSYmKCJzdWJtaXQiPT1kLnR5cGV8fCJpbWFnZSI9PWQudHlwZSkmJmQubmFtZSYmT2MoZCwidmFsdWUiKSl7dmFyIGU9R3ooZCk7ZSYmYS5zdG9yZShlLGQpfX0sITEpO01jKEMsInN1Ym1pdCIsZnVuY3Rpb24oYyl7dmFyIGQ9Yy50YXJnZXQ7aWYoIWQpcmV0dXJuIGMucmV0dXJuVmFsdWU7dmFyIGU9Yy5kZWZhdWx0UHJldmVudGVkfHwhMT09PWMucmV0dXJuVmFsdWUsZj1zQihkKSYmIWUsZz1hLmdldChkKSxoPSEwLG09ZnVuY3Rpb24oKXtpZihoKXt2YXIgbixwPXt9O2cmJihuPQpDLmNyZWF0ZUVsZW1lbnQoImlucHV0Iiksbi50eXBlPSJoaWRkZW4iLG4ubmFtZT1nLm5hbWUsbi52YWx1ZT1nLnZhbHVlLGQuYXBwZW5kQ2hpbGQobiksZy5oYXNBdHRyaWJ1dGUoImZvcm1hY3Rpb24iKSYmKHAuYWN0aW9uPWQuZ2V0QXR0cmlidXRlKCJhY3Rpb24iKSx5YyhkLG9jKGcuZ2V0QXR0cmlidXRlKCJmb3JtYWN0aW9uIikpKSksZy5oYXNBdHRyaWJ1dGUoImZvcm1lbmN0eXBlIikmJihwLmVuY3R5cGU9ZC5nZXRBdHRyaWJ1dGUoImVuY3R5cGUiKSxkLnNldEF0dHJpYnV0ZSgiZW5jdHlwZSIsZy5nZXRBdHRyaWJ1dGUoImZvcm1lbmN0eXBlIikpKSxnLmhhc0F0dHJpYnV0ZSgiZm9ybW1ldGhvZCIpJiYocC5tZXRob2Q9ZC5nZXRBdHRyaWJ1dGUoIm1ldGhvZCIpLGQuc2V0QXR0cmlidXRlKCJtZXRob2QiLGcuZ2V0QXR0cmlidXRlKCJmb3JtbWV0aG9kIikpKSxnLmhhc0F0dHJpYnV0ZSgiZm9ybXZhbGlkYXRlIikmJihwLnZhbGlkYXRlPWQuZ2V0QXR0cmlidXRlKCJ2YWxpZGF0ZSIpLApkLnNldEF0dHJpYnV0ZSgidmFsaWRhdGUiLGcuZ2V0QXR0cmlidXRlKCJmb3JtdmFsaWRhdGUiKSkpLGcuaGFzQXR0cmlidXRlKCJmb3JtdGFyZ2V0IikmJihwLnRhcmdldD1kLmdldEF0dHJpYnV0ZSgidGFyZ2V0IiksZC5zZXRBdHRyaWJ1dGUoInRhcmdldCIsZy5nZXRBdHRyaWJ1dGUoImZvcm10YXJnZXQiKSkpKTtiLmNhbGwoZCk7biYmKGQucmVtb3ZlQ2hpbGQobikscC5oYXNPd25Qcm9wZXJ0eSgiYWN0aW9uIikmJnljKGQscC5hY3Rpb24pLHAuaGFzT3duUHJvcGVydHkoImVuY3R5cGUiKSYmZC5zZXRBdHRyaWJ1dGUoImVuY3R5cGUiLHAuZW5jdHlwZSkscC5oYXNPd25Qcm9wZXJ0eSgibWV0aG9kIikmJmQuc2V0QXR0cmlidXRlKCJtZXRob2QiLHAubWV0aG9kKSxwLmhhc093blByb3BlcnR5KCJ2YWxpZGF0ZSIpJiZkLnNldEF0dHJpYnV0ZSgidmFsaWRhdGUiLHAudmFsaWRhdGUpLHAuaGFzT3duUHJvcGVydHkoInRhcmdldCIpJiZkLnNldEF0dHJpYnV0ZSgidGFyZ2V0IiwKcC50YXJnZXQpKX19O2lmKHZCKGQsbSxlLGYsZykpcmV0dXJuIGg9ITEsYy5yZXR1cm5WYWx1ZTt1QihlLG0pO2V8fChjLnByZXZlbnREZWZhdWx0JiZjLnByZXZlbnREZWZhdWx0KCksYy5yZXR1cm5WYWx1ZT0hMSk7cmV0dXJuITF9LCExKTtIVE1MRm9ybUVsZW1lbnQucHJvdG90eXBlLnN1Ym1pdD1mdW5jdGlvbigpe3ZhciBjPXRoaXMsZD0hMCxlPWZ1bmN0aW9uKCl7ZCYmYi5jYWxsKGMpfTt2QihjLGUsITEsc0IoYykpPyhiLmNhbGwoYyksZD0hMSk6dUIoITEsZSl9fTsKZnVuY3Rpb24geUIoYSxiKXtLKEoodGhpcyksWyJjYWxsYmFjazohRm4iLCJvcHRpb25zOj9QaXhpZU1hcCJdLGFyZ3VtZW50cyk7dmFyIGM9bmQoYil8fHt9LGQ9Yy53YWl0Rm9yQ2FsbGJhY2tzLGU9Yy53YWl0Rm9yQ2FsbGJhY2tzVGltZW91dCxmPWMuY2hlY2tWYWxpZGF0aW9uO2U9ZSYmMDxlP2U6MkUzO3ZhciBnPW5kKGEpO2lmKGQpe3ZhciBoPWZ1bmN0aW9uKG4pe3JldHVybiBNYXRoLm1heChlLG4pfTt6eigicGl4LmZzbCIsIm13dCIsaCwwKTtmfHx6eigicGl4LmZzbCIsIm52Lm13dCIsaCwwKX12YXIgbT1mdW5jdGlvbihuKXtuLnB1c2goZyk7cmV0dXJuIG59O3p6KCJwaXguZnNsIiwicnVuSWZVbmNhbmNlbGVkIixtLFtdKTtmfHx6eigicGl4LmZzbCIsInJ1bklmQ2FuY2VsZWQiLG0sW10pO0F6KCJwaXguZnNsIiwiaW5pdCIpfHwoeEIoKSx5eigicGl4LmZzbCIsCiJpbml0IiwhMCkpO315Qi5EPSJpbnRlcm5hbC5hZGRGb3JtU3VibWl0TGlzdGVuZXIiOwpmdW5jdGlvbiBEQihhKXt9REIuRD0iaW50ZXJuYWwuYWRkR2FTZW5kTGlzdGVuZXIiO2Z1bmN0aW9uIEVCKGEpe2lmKCFhKXJldHVybnt9O3ZhciBiPWEuUGw7cmV0dXJuIFN2KGIudHlwZSxiLmluZGV4LGIubmFtZSl9ZnVuY3Rpb24gRkIoYSl7cmV0dXJuIGE/e29yaWdpbmF0aW5nRW50aXR5OkVCKGEpfTp7fX07dmFyIEdCPWZ1bmN0aW9uKGEsYil7dGhpcy50YWdJZD1hO3RoaXMuemU9Yn07CmZ1bmN0aW9uIEhCKGEsYil7dmFyIGM9dGhpczt9CkhCLkQ9ImludGVybmFsLmxvYWRHb29nbGVUYWciO2Z1bmN0aW9uIElCKGEpe3JldHVybiBuZXcgZWQoIiIsZnVuY3Rpb24oYil7Yj1JKHRoaXMsYik7aWYoYiBpbnN0YW5jZW9mIGVkKXJldHVybiBuZXcgZWQoIiIsZnVuY3Rpb24oKXt2YXIgYz10YS5hcHBseSgwLGFyZ3VtZW50cyksZD10aGlzLGU9bmIodGhpcy5oLmgpO2UuZXZlbnRJZD1hLmV2ZW50SWQ7ZS5wcmlvcml0eUlkPWEucHJpb3JpdHlJZDtlLm9yaWdpbmFsRXZlbnREYXRhPWEub3JpZ2luYWxFdmVudERhdGE7dmFyIGY9Yy5tYXAoZnVuY3Rpb24oaCl7cmV0dXJuIEkoZCxoKX0pLGc9Q2EodGhpcy5oKTtnLmg9ZTtyZXR1cm4gYi5lYi5hcHBseShiLFtnXS5jb25jYXQoa2EoZikpKX0pfSl9O2Z1bmN0aW9uIEpCKGEsYixjKXt2YXIgZD10aGlzO31KQi5EPSJpbnRlcm5hbC5hZGRHb29nbGVUYWdSZXN0cmljdGlvbiI7dmFyIEtCPXt9LExCPVtdOwp2YXIgU0I9ZnVuY3Rpb24oYSxiKXt9OwpTQi5EPSJpbnRlcm5hbC5hZGRIaXN0b3J5Q2hhbmdlTGlzdGVuZXIiO2Z1bmN0aW9uIFRCKGEsYixjKXt9VEIuUD0iYWRkV2luZG93RXZlbnRMaXN0ZW5lciI7ZnVuY3Rpb24gVUIoYSxiKXtyZXR1cm4hMH1VQi5QPSJhbGlhc0luV2luZG93IjtmdW5jdGlvbiBWQihhLGIsYyl7fVZCLkQ9ImludGVybmFsLmFwcGVuZFJlbW90ZUNvbmZpZ1BhcmFtZXRlciI7ZnVuY3Rpb24gV0IoKXt2YXIgYT0yO3JldHVybiBhfTtmdW5jdGlvbiBYQihhLGIpe3ZhciBjO3JldHVybiBjfVhCLlA9ImNhbGxJbldpbmRvdyI7ZnVuY3Rpb24gWUIoYSl7fVlCLlA9ImNhbGxMYXRlciI7ZnVuY3Rpb24gWkIoYSl7fVpCLkQ9ImNhbGxPbkRvbVJlYWR5IjtmdW5jdGlvbiAkQihhKXt9JEIuRD0iY2FsbE9uV2luZG93TG9hZCI7ZnVuY3Rpb24gYUMoYSxiKXt2YXIgYztyZXR1cm4gY31hQy5EPSJpbnRlcm5hbC5jb21wdXRlR3RtUGFyYW1ldGVyIjtmdW5jdGlvbiBiQyhhLGIpe3ZhciBjO3ZhciBkPW1kKGMsdGhpcy5oLFdCKCkpO3ZvaWQgMD09PWQmJnZvaWQgMCE9PWMmJk0oNDUpO3JldHVybiBkfWJDLlA9ImNvcHlGcm9tRGF0YUxheWVyIjsKZnVuY3Rpb24gY0MoYSl7dmFyIGI9dm9pZCAwO3JldHVybiBifWNDLkQ9ImludGVybmFsLmNvcHlGcm9tRGF0YUxheWVyQ2FjaGUiO2Z1bmN0aW9uIGRDKGEpe3ZhciBiO3JldHVybiBifWRDLlA9ImNvcHlGcm9tV2luZG93IjtmdW5jdGlvbiBlQyhhKXt2YXIgYj12b2lkIDA7cmV0dXJuIG1kKGIsdGhpcy5oLFdCKCkpfWVDLkQ9ImludGVybmFsLmNvcHlLZXlGcm9tV2luZG93IjtmdW5jdGlvbiBmQyhhLGIpe3ZhciBjO0soSih0aGlzKSxbInByZUhpdDohUGl4aWVNYXAiLCJkdXN0T3B0aW9uczo/UGl4aWVNYXAiXSxhcmd1bWVudHMpO3ZhciBkPW5kKGIpfHx7fSxlPW5kKGEsdGhpcy5oLDEpLlBqKCksZj1lLm87ZC5vbWl0RXZlbnRDb250ZXh0JiYoZj1nbShuZXcgV2woZS5vLmV2ZW50SWQsZS5vLnByaW9yaXR5SWQpKSk7dmFyIGc9bmV3IGdxKGUudGFyZ2V0LGUuZXZlbnROYW1lLGYpO2Qub21pdEhpdERhdGF8fG5iKGUuaCxnLmgpO2Qub21pdE1ldGFkYXRhP2cubWV0YWRhdGE9e306bmIoZS5tZXRhZGF0YSxnLm1ldGFkYXRhKTtnLmlzQWJvcnRlZD1lLmlzQWJvcnRlZDtjPW1kKGVyKGcpLHRoaXMuaCwxKTtyZXR1cm4gY31mQy5EPSJpbnRlcm5hbC5jb3B5UHJlSGl0IjtmdW5jdGlvbiBnQyhhLGIpe3ZhciBjPW51bGwsZD1XQigpO3JldHVybiBtZChjLHRoaXMuaCxkKX1nQy5QPSJjcmVhdGVBcmd1bWVudHNRdWV1ZSI7ZnVuY3Rpb24gaEMoYSl7dmFyIGI7cmV0dXJuIG1kKGIsdGhpcy5oLDEpfWhDLkQ9ImludGVybmFsLmNyZWF0ZUdhQ29tbWFuZFF1ZXVlIjtmdW5jdGlvbiBpQyhhKXt2YXIgYjtyZXR1cm4gbWQoYix0aGlzLmgsCldCKCkpfWlDLlA9ImNyZWF0ZVF1ZXVlIjtmdW5jdGlvbiBqQyhhLGIpe3ZhciBjPW51bGw7cmV0dXJuIGN9akMuRD0iaW50ZXJuYWwuY3JlYXRlUmVnZXgiO2Z1bmN0aW9uIGtDKGEpe31rQy5EPSJpbnRlcm5hbC5kZWNsYXJlQ29uc2VudFN0YXRlIjtmdW5jdGlvbiBsQyhhKXt2YXIgYj0iIjtyZXR1cm4gYn1sQy5EPSJpbnRlcm5hbC5kZWNvZGVVcmxIdG1sRW50aXRpZXMiO2Z1bmN0aW9uIG1DKGEsYixjKXt2YXIgZDtyZXR1cm4gZH1tQy5EPSJpbnRlcm5hbC5kZWNvcmF0ZVVybFdpdGhHYUNvb2tpZXMiO2Z1bmN0aW9uIG5DKGEpe3ZhciBiOwpyZXR1cm4gYn1uQy5EPSJpbnRlcm5hbC5kZXRlY3RVc2VyUHJvdmlkZWREYXRhIjsKZnVuY3Rpb24gckMoYSxiKXtyZXR1cm4gYn1yQy5EPSJpbnRlcm5hbC5lbmFibGVBdXRvRXZlbnRPbkNsaWNrIjsKZnVuY3Rpb24gd0MoYSxiKXtyZXR1cm4gYn13Qy5EPSJpbnRlcm5hbC5lbmFibGVBdXRvRXZlbnRPbkVsZW1lbnRWaXNpYmlsaXR5IjtmdW5jdGlvbiB4Qygpe314Qy5EPSJpbnRlcm5hbC5lbmFibGVBdXRvRXZlbnRPbkVycm9yIjt2YXIgeUM9e30sekM9W10sQUM9e30sQkM9MCxDQz0wOwp2YXIgRUM9ZnVuY3Rpb24oKXtsKEFDLGZ1bmN0aW9uKGEsYil7dmFyIGM9eUNbYV07YyYmbChiLGZ1bmN0aW9uKGQsZSl7REMoZSxjKX0pfSl9LEhDPWZ1bmN0aW9uKGEsYil7dmFyIGM9IiIrYjtpZih5Q1tjXSl5Q1tjXS5wdXNoKGEpO2Vsc2V7dmFyIGQ9W2FdO3lDW2NdPWQ7dmFyIGU9QUNbY107ZXx8KGU9e30sQUNbY109ZSk7ekMucHVzaChmdW5jdGlvbihmKXt2YXIgZz1mLnRhcmdldDtpZihnKXt2YXIgaD1HeihnKTtpZihoKXt2YXIgbT1GQyhoLCJndG1Gb3JtSW50ZXJhY3RJZCIsZnVuY3Rpb24oKXtyZXR1cm4gQkMrK30pLG49RkMoZywiZ3RtRm9ybUludGVyYWN0RmllbGRJZCIsZnVuY3Rpb24oKXtyZXR1cm4gQ0MrK30pO2lmKG51bGwhPT1tJiZudWxsIT09bil7dmFyIHA9ZVttXTtwPyhwLk1hJiYoei5jbGVhclRpbWVvdXQocC5NYSkscC53YS5nZXRBdHRyaWJ1dGUoImRhdGEtZ3RtLWZvcm0taW50ZXJhY3QtZmllbGQtaWQiKSE9PW4mJkRDKHAsZCkpLHAud2E9ZyxHQyhwLApkLGIpKTooZVttXT17Zm9ybTpoLHdhOmcsamM6MCxNYTpudWxsfSxHQyhlW21dLGQsYikpfX19fSl9fSxEQz1mdW5jdGlvbihhLGIpe3ZhciBjPWEuZm9ybSxkPWEud2EsZT13eihjLCJndG0uZm9ybUludGVyYWN0IixiKSxmPWMuYWN0aW9uO2YmJmYudGFnTmFtZSYmKGY9Yy5jbG9uZU5vZGUoITEpLmFjdGlvbik7ZVsiZ3RtLmVsZW1lbnRVcmwiXT1mO2VbImd0bS5pbnRlcmFjdGVkRm9ybU5hbWUiXT1udWxsIT1jLmdldEF0dHJpYnV0ZSgibmFtZSIpP2MuZ2V0QXR0cmlidXRlKCJuYW1lIik6dm9pZCAwO2VbImd0bS5pbnRlcmFjdGVkRm9ybUxlbmd0aCJdPWMubGVuZ3RoO2VbImd0bS5pbnRlcmFjdGVkRm9ybUZpZWxkIl09ZDtlWyJndG0uaW50ZXJhY3RlZEZvcm1GaWVsZElkIl09ZC5pZDtlWyJndG0uaW50ZXJhY3RlZEZvcm1GaWVsZE5hbWUiXT1udWxsIT1kLmdldEF0dHJpYnV0ZSgibmFtZSIpP2QuZ2V0QXR0cmlidXRlKCJuYW1lIik6dm9pZCAwO2VbImd0bS5pbnRlcmFjdGVkRm9ybUZpZWxkUG9zaXRpb24iXT0KSHooYyxkLCJndG1Gb3JtSW50ZXJhY3RGaWVsZElkIik7ZVsiZ3RtLmludGVyYWN0ZWRGb3JtRmllbGRUeXBlIl09bnVsbCE9ZC5nZXRBdHRyaWJ1dGUoInR5cGUiKT9kLmdldEF0dHJpYnV0ZSgidHlwZSIpOnZvaWQgMDtlWyJndG0uaW50ZXJhY3RTZXF1ZW5jZU51bWJlciJdPWEuamM7SHkoZSk7YS5qYysrO2EuTWE9bnVsbH0sR0M9ZnVuY3Rpb24oYSxiLGMpe2M/YS5NYT16LnNldFRpbWVvdXQoZnVuY3Rpb24oKXtEQyhhLGIpfSxjKTpEQyhhLGIpfSxGQz1mdW5jdGlvbihhLGIsYyl7dmFyIGQ7dHJ5e2lmKGQ9YS5kYXRhc2V0W2JdKXJldHVybiBkO2Q9U3RyaW5nKGMoKSk7YS5kYXRhc2V0W2JdPWR9Y2F0Y2goZSl7ZD1udWxsfXJldHVybiBkfTsKZnVuY3Rpb24gSUMoYSxiKXt2YXIgYz10aGlzO0soSih0aGlzKSxbIm9wdGlvbnM6P1BpeGllTWFwIiwidHJpZ2dlcklkOj8qIl0sYXJndW1lbnRzKTtYQShbZnVuY3Rpb24oKXtyZXR1cm4gTChjLCJkZXRlY3RfZm9ybV9pbnRlcmFjdGlvbl9ldmVudHMiKX1dKTtiPUN6KGIpO3ZhciBkPWEmJk51bWJlcihhLmdldCgiaW50ZXJ2YWwiKSk7MDxkJiZpc0Zpbml0ZShkKXx8KGQ9MCk7aWYoQXooImZpbCIsImluaXQiLCExKSl7dmFyIGU9QXooImZpbCIsInJlZyIpO2lmKGUpZShiLGQpO2Vsc2UgdGhyb3cgRXJyb3IoIkZhaWxlZCB0byByZWdpc3RlciB0cmlnZ2VyOiAiK2IpO31lbHNlIE1jKEMsImNoYW5nZSIsZnVuY3Rpb24oZil7Zm9yKHZhciBnPTA7Zzx6Qy5sZW5ndGg7ZysrKXpDW2ddKGYpfSksTWMoeiwicGFnZWhpZGUiLGZ1bmN0aW9uKCl7RUMoKX0pLApIQyhiLGQpLHl6KCJmaWwiLCJyZWciLEhDKSx5eigiZmlsIiwiaW5pdCIsITApO3JldHVybiBifUlDLkQ9ImludGVybmFsLmVuYWJsZUF1dG9FdmVudE9uRm9ybUludGVyYWN0aW9uIjsKdmFyIEpDPWZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9QXooImZzbCIsYz8ibnYubXd0IjoibXd0IiwwKSxnO2c9Yz9BeigiZnNsIiwibnYuaWRzIixbXSk6QXooImZzbCIsImlkcyIsW10pO2lmKCFnLmxlbmd0aClyZXR1cm4hMDt2YXIgaD13eihhLCJndG0uZm9ybVN1Ym1pdCIsZyksbT1hLmFjdGlvbjttJiZtLnRhZ05hbWUmJihtPWEuY2xvbmVOb2RlKCExKS5hY3Rpb24pO00oMTIxKTtpZigiaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL3RyLyI9PT1tKXJldHVybiBNKDEyMiksITA7aFsiZ3RtLmVsZW1lbnRVcmwiXT1tO2hbImd0bS5mb3JtQ2FuY2VsZWQiXT1jO251bGwhPWEuZ2V0QXR0cmlidXRlKCJuYW1lIikmJihoWyJndG0uaW50ZXJhY3RlZEZvcm1OYW1lIl09YS5nZXRBdHRyaWJ1dGUoIm5hbWUiKSk7ZSYmKGhbImd0bS5mb3JtU3VibWl0RWxlbWVudCJdPWUsaFsiZ3RtLmZvcm1TdWJtaXRFbGVtZW50VGV4dCJdPWUudmFsdWUpO2lmKGQmJmYpe2lmKCFJeShoLEp5KGIsCmYpLGYpKXJldHVybiExfWVsc2UgSXkoaCxmdW5jdGlvbigpe30sZnx8MkUzKTtyZXR1cm4hMH0sS0M9ZnVuY3Rpb24oKXt2YXIgYT1bXSxiPWZ1bmN0aW9uKGMpe3JldHVybiBJYShhLGZ1bmN0aW9uKGQpe3JldHVybiBkLmZvcm09PT1jfSl9O3JldHVybntzdG9yZTpmdW5jdGlvbihjLGQpe3ZhciBlPWIoYyk7ZT9lLmJ1dHRvbj1kOmEucHVzaCh7Zm9ybTpjLGJ1dHRvbjpkfSl9LGdldDpmdW5jdGlvbihjKXt2YXIgZD1iKGMpO3JldHVybiBkP2QuYnV0dG9uOm51bGx9fX0sTEM9ZnVuY3Rpb24oYSl7dmFyIGI9YS50YXJnZXQ7cmV0dXJuIGImJiJfc2VsZiIhPT1iJiYiX3BhcmVudCIhPT1iJiYiX3RvcCIhPT1iPyExOiEwfSxNQz1mdW5jdGlvbigpe3ZhciBhPUtDKCksYj1IVE1MRm9ybUVsZW1lbnQucHJvdG90eXBlLnN1Ym1pdDtNYyhDLCJjbGljayIsZnVuY3Rpb24oYyl7dmFyIGQ9Yy50YXJnZXQ7aWYoZCYmKGQ9UmMoZCxbImJ1dHRvbiIsImlucHV0Il0sMTAwKSkmJigic3VibWl0Ij09CmQudHlwZXx8ImltYWdlIj09ZC50eXBlKSYmZC5uYW1lJiZPYyhkLCJ2YWx1ZSIpKXt2YXIgZT1HeihkKTtlJiZhLnN0b3JlKGUsZCl9fSwhMSk7TWMoQywic3VibWl0IixmdW5jdGlvbihjKXt2YXIgZD1jLnRhcmdldDtpZighZClyZXR1cm4gYy5yZXR1cm5WYWx1ZTt2YXIgZT1jLmRlZmF1bHRQcmV2ZW50ZWR8fCExPT09Yy5yZXR1cm5WYWx1ZSxmPUxDKGQpJiYhZSxnPWEuZ2V0KGQpLGg9ITA7aWYoSkMoZCxmdW5jdGlvbigpe2lmKGgpe3ZhciBtLG49e307ZyYmKG09Qy5jcmVhdGVFbGVtZW50KCJpbnB1dCIpLG0udHlwZT0iaGlkZGVuIixtLm5hbWU9Zy5uYW1lLG0udmFsdWU9Zy52YWx1ZSxkLmFwcGVuZENoaWxkKG0pLGcuaGFzQXR0cmlidXRlKCJmb3JtYWN0aW9uIikmJihuLmFjdGlvbj1kLmdldEF0dHJpYnV0ZSgiYWN0aW9uIikseWMoZCxvYyhnLmdldEF0dHJpYnV0ZSgiZm9ybWFjdGlvbiIpKSkpLGcuaGFzQXR0cmlidXRlKCJmb3JtZW5jdHlwZSIpJiYobi5lbmN0eXBlPQpkLmdldEF0dHJpYnV0ZSgiZW5jdHlwZSIpLGQuc2V0QXR0cmlidXRlKCJlbmN0eXBlIixnLmdldEF0dHJpYnV0ZSgiZm9ybWVuY3R5cGUiKSkpLGcuaGFzQXR0cmlidXRlKCJmb3JtbWV0aG9kIikmJihuLm1ldGhvZD1kLmdldEF0dHJpYnV0ZSgibWV0aG9kIiksZC5zZXRBdHRyaWJ1dGUoIm1ldGhvZCIsZy5nZXRBdHRyaWJ1dGUoImZvcm1tZXRob2QiKSkpLGcuaGFzQXR0cmlidXRlKCJmb3JtdmFsaWRhdGUiKSYmKG4udmFsaWRhdGU9ZC5nZXRBdHRyaWJ1dGUoInZhbGlkYXRlIiksZC5zZXRBdHRyaWJ1dGUoInZhbGlkYXRlIixnLmdldEF0dHJpYnV0ZSgiZm9ybXZhbGlkYXRlIikpKSxnLmhhc0F0dHJpYnV0ZSgiZm9ybXRhcmdldCIpJiYobi50YXJnZXQ9ZC5nZXRBdHRyaWJ1dGUoInRhcmdldCIpLGQuc2V0QXR0cmlidXRlKCJ0YXJnZXQiLGcuZ2V0QXR0cmlidXRlKCJmb3JtdGFyZ2V0IikpKSk7Yi5jYWxsKGQpO20mJihkLnJlbW92ZUNoaWxkKG0pLG4uaGFzT3duUHJvcGVydHkoImFjdGlvbiIpJiYKeWMoZCxuLmFjdGlvbiksbi5oYXNPd25Qcm9wZXJ0eSgiZW5jdHlwZSIpJiZkLnNldEF0dHJpYnV0ZSgiZW5jdHlwZSIsbi5lbmN0eXBlKSxuLmhhc093blByb3BlcnR5KCJtZXRob2QiKSYmZC5zZXRBdHRyaWJ1dGUoIm1ldGhvZCIsbi5tZXRob2QpLG4uaGFzT3duUHJvcGVydHkoInZhbGlkYXRlIikmJmQuc2V0QXR0cmlidXRlKCJ2YWxpZGF0ZSIsbi52YWxpZGF0ZSksbi5oYXNPd25Qcm9wZXJ0eSgidGFyZ2V0IikmJmQuc2V0QXR0cmlidXRlKCJ0YXJnZXQiLG4udGFyZ2V0KSl9fSxlLGYsZykpaD0hMTtlbHNlIHJldHVybiBlfHwoYy5wcmV2ZW50RGVmYXVsdCYmYy5wcmV2ZW50RGVmYXVsdCgpLGMucmV0dXJuVmFsdWU9ITEpLCExO3JldHVybiBjLnJldHVyblZhbHVlfSwhMSk7SFRNTEZvcm1FbGVtZW50LnByb3RvdHlwZS5zdWJtaXQ9ZnVuY3Rpb24oKXt2YXIgYz10aGlzLGQ9ITA7SkMoYyxmdW5jdGlvbigpe2QmJmIuY2FsbChjKX0sITEsTEMoYykpJiYoYi5jYWxsKGMpLGQ9CiExKX19OwpmdW5jdGlvbiBOQyhhLGIpe3ZhciBjPXRoaXM7SyhKKHRoaXMpLFsib3B0aW9uczo/UGl4aWVNYXAiLCJ0cmlnZ2VySWQ6PyoiXSxhcmd1bWVudHMpO3ZhciBkPWEmJmEuZ2V0KCJ3YWl0Rm9yVGFncyIpO1hBKFtmdW5jdGlvbigpe3JldHVybiBMKGMsImRldGVjdF9mb3JtX3N1Ym1pdF9ldmVudHMiLHt3YWl0Rm9yVGFnczohIWR9KX1dKTt2YXIgZT1hJiZhLmdldCgiY2hlY2tWYWxpZGF0aW9uIik7Yj1DeihiKTtpZihkKXt2YXIgZj1OdW1iZXIoYS5nZXQoIndhaXRGb3JUYWdzVGltZW91dCIpKTswPGYmJmlzRmluaXRlKGYpfHwoZj0yRTMpO3ZhciBnPWZ1bmN0aW9uKG0pe3JldHVybiBNYXRoLm1heChmLG0pfTt6eigiZnNsIiwibXd0IixnLDApO2V8fHp6KCJmc2wiLCJudi5td3QiLGcsMCl9dmFyIGg9ZnVuY3Rpb24obSl7bS5wdXNoKGIpO3JldHVybiBtfTsKenooImZzbCIsImlkcyIsaCxbXSk7ZXx8enooImZzbCIsIm52LmlkcyIsaCxbXSk7QXooImZzbCIsImluaXQiLCExKXx8KE1DKCkseXooImZzbCIsImluaXQiLCEwKSk7cmV0dXJuIGJ9TkMuRD0iaW50ZXJuYWwuZW5hYmxlQXV0b0V2ZW50T25Gb3JtU3VibWl0IjsKZnVuY3Rpb24gU0MoKXt2YXIgYT10aGlzO31TQy5EPSJpbnRlcm5hbC5lbmFibGVBdXRvRXZlbnRPbkdhU2VuZCI7dmFyIFRDPXt9LFVDPVtdOwp2YXIgV0M9ZnVuY3Rpb24oYSxiKXt2YXIgYz0iIitiO2lmKFRDW2NdKVRDW2NdLnB1c2goYSk7ZWxzZXt2YXIgZD1bYV07VENbY109ZDt2YXIgZT1WQygiZ3RtLmhpc3RvcnlDaGFuZ2UtdjIiKSxmPS0xO1VDLnB1c2goZnVuY3Rpb24oZyl7MDw9ZiYmei5jbGVhclRpbWVvdXQoZik7Yj9mPXouc2V0VGltZW91dChmdW5jdGlvbigpe2UoZyxkKTtmPS0xfSxiKTplKGcsZCl9KX19LFZDPWZ1bmN0aW9uKGEpe3ZhciBiPXoubG9jYXRpb24uaHJlZixjPXtzb3VyY2U6bnVsbCxzdGF0ZTp6Lmhpc3Rvcnkuc3RhdGV8fG51bGwsdXJsOnNqKHZqKGIpKSxUOnJqKHZqKGIpLCJmcmFnbWVudCIpfTtyZXR1cm4gZnVuY3Rpb24oZCxlKXt2YXIgZj1jLGc9e307Z1tmLnNvdXJjZV09ITA7Z1tkLnNvdXJjZV09ITA7aWYoIWcucG9wc3RhdGV8fCFnLmhhc2hjaGFuZ2V8fGYuVCE9ZC5UKXt2YXIgaD17ZXZlbnQ6YSwiZ3RtLmhpc3RvcnlDaGFuZ2VTb3VyY2UiOmQuc291cmNlLCJndG0ub2xkVXJsRnJhZ21lbnQiOmMuVCwKImd0bS5uZXdVcmxGcmFnbWVudCI6ZC5ULCJndG0ub2xkSGlzdG9yeVN0YXRlIjpjLnN0YXRlLCJndG0ubmV3SGlzdG9yeVN0YXRlIjpkLnN0YXRlLCJndG0ub2xkVXJsIjpjLnVybCwiZ3RtLm5ld1VybCI6ZC51cmx9O2UmJihoWyJndG0udHJpZ2dlcnMiXT1lLmpvaW4oIiwiKSk7Yz1kO0h5KGgpfX19LFhDPWZ1bmN0aW9uKGEsYil7dmFyIGM9ei5oaXN0b3J5LGQ9Y1thXTtpZihFYShkKSl0cnl7Y1thXT1mdW5jdGlvbihlLGYsZyl7ZC5hcHBseShjLFtdLnNsaWNlLmNhbGwoYXJndW1lbnRzLDApKTt2YXIgaD16LmxvY2F0aW9uLmhyZWY7Yih7c291cmNlOmEsc3RhdGU6ZSx1cmw6c2oodmooaCkpLFQ6cmoodmooaCksImZyYWdtZW50Iil9KX19Y2F0Y2goZSl7fX0sWkM9ZnVuY3Rpb24oYSl7ei5hZGRFdmVudExpc3RlbmVyKCJwb3BzdGF0ZSIsZnVuY3Rpb24oYil7dmFyIGM9WUMoYik7YSh7c291cmNlOiJwb3BzdGF0ZSIsc3RhdGU6Yi5zdGF0ZSx1cmw6c2oodmooYykpLFQ6cmoodmooYyksCiJmcmFnbWVudCIpfSl9KX0sJEM9ZnVuY3Rpb24oYSl7ei5hZGRFdmVudExpc3RlbmVyKCJoYXNoY2hhbmdlIixmdW5jdGlvbihiKXt2YXIgYz1ZQyhiKTthKHtzb3VyY2U6Imhhc2hjaGFuZ2UiLHN0YXRlOm51bGwsdXJsOnNqKHZqKGMpKSxUOnJqKHZqKGMpLCJmcmFnbWVudCIpfSl9KX0sWUM9ZnVuY3Rpb24oYSl7cmV0dXJuIGEudGFyZ2V0JiZhLnRhcmdldC5sb2NhdGlvbiYmYS50YXJnZXQubG9jYXRpb24uaHJlZj9hLnRhcmdldC5sb2NhdGlvbi5ocmVmOnoubG9jYXRpb24uaHJlZn07CmZ1bmN0aW9uIGFEKGEsYil7dmFyIGM9dGhpcztLKEoodGhpcyksWyJvcHRpb25zOj9QaXhpZU1hcCIsInRyaWdnZXJJZDo/KiJdLGFyZ3VtZW50cyk7WEEoW2Z1bmN0aW9uKCl7cmV0dXJuIEwoYywiZGV0ZWN0X2hpc3RvcnlfY2hhbmdlX2V2ZW50cyIpfV0pO3ZhciBkPWEmJmEuZ2V0KCJ1c2VWMkV2ZW50TmFtZSIpPyJlaGwiOiJobCIsZT1OdW1iZXIoYSYmYS5nZXQoImludGVydmFsIikpOzA8ZSYmaXNGaW5pdGUoZSl8fChlPTApO2lmKCFBeihkLCJpbml0IiwhMSkpe3ZhciBmOyJlaGwiPT09ZD8oZj1mdW5jdGlvbihoKXtmb3IodmFyIG09MDttPFVDLmxlbmd0aDttKyspVUNbbV0oaCl9LGI9Q3ooYiksV0MoYixlKSx5eihkLCJyZWciLFdDKSk6Zj1WQygiZ3RtLmhpc3RvcnlDaGFuZ2UiKTskQyhmKTtaQyhmKTtYQygicHVzaFN0YXRlIixmKTsKWEMoInJlcGxhY2VTdGF0ZSIsZik7eXooZCwiaW5pdCIsITApfWVsc2UgaWYoImVobCI9PT1kKXt2YXIgZz1BeihkLCJyZWciKTtnJiYoYj1DeihiKSxnKGIsZSkpfSJobCI9PT1kJiYoYj12b2lkIDApO3JldHVybiBifWFELkQ9ImludGVybmFsLmVuYWJsZUF1dG9FdmVudE9uSGlzdG9yeUNoYW5nZSI7dmFyIGJEPVsiaHR0cDovLyIsImh0dHBzOi8vIiwiamF2YXNjcmlwdDoiLCJmaWxlOi8vIl07CnZhciBjRD1mdW5jdGlvbihhLGIpe2lmKDI9PT1hLndoaWNofHxhLmN0cmxLZXl8fGEuc2hpZnRLZXl8fGEuYWx0S2V5fHxhLm1ldGFLZXkpcmV0dXJuITE7dmFyIGM9V2MoYiwiaHJlZiIpO2lmKC0xIT09Yy5pbmRleE9mKCI6IikmJiFiRC5zb21lKGZ1bmN0aW9uKGgpe3JldHVybiAwPT09Yy5pbmRleE9mKGgpfSkpcmV0dXJuITE7dmFyIGQ9Yy5pbmRleE9mKCIjIiksZT1XYyhiLCJ0YXJnZXQiKTtpZihlJiYiX3NlbGYiIT09ZSYmIl9wYXJlbnQiIT09ZSYmIl90b3AiIT09ZXx8MD09PWQpcmV0dXJuITE7aWYoMDxkKXt2YXIgZj1zaih2aihjKSksZz1zaih2aih6LmxvY2F0aW9uLmhyZWYpKTtyZXR1cm4gZiE9PWd9cmV0dXJuITB9LGREPWZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPXJqKHZqKChiLmF0dHJpYnV0ZXMmJmIuYXR0cmlidXRlcy5mb3JtYWN0aW9uP2IuZm9ybUFjdGlvbjoiIil8fGIuYWN0aW9ufHxXYyhiLCJocmVmIil8fGIuc3JjfHxiLmNvZGV8fGIuY29kZWJhc2V8fAoiIiksImhvc3QiKSxkPTA7ZDxhLmxlbmd0aDtkKyspdHJ5e2lmKChuZXcgUmVnRXhwKGFbZF0pKS50ZXN0KGMpKXJldHVybiExfWNhdGNoKGUpe31yZXR1cm4hMH0sZUQ9ZnVuY3Rpb24oKXt2YXIgYT0wLGI9ZnVuY3Rpb24oYyl7dmFyIGQ9Yy50YXJnZXQ7aWYoZCYmMyE9PWMud2hpY2gmJiEoYy5EaHx8Yy50aW1lU3RhbXAmJmMudGltZVN0YW1wPT09YSkpe2E9Yy50aW1lU3RhbXA7ZD1SYyhkLFsiYSIsImFyZWEiXSwxMDApO2lmKCFkKXJldHVybiBjLnJldHVyblZhbHVlO3ZhciBlPWMuZGVmYXVsdFByZXZlbnRlZHx8ITE9PT1jLnJldHVyblZhbHVlLGY9QXooImxjbCIsZT8ibnYubXd0IjoibXd0IiwwKSxnO2c9ZT9BeigibGNsIiwibnYuaWRzIixbXSk6QXooImxjbCIsImlkcyIsW10pO2Zvcih2YXIgaD1bXSxtPTA7bTxnLmxlbmd0aDttKyspe3ZhciBuPWdbbV0scD1BeigibGNsIiwiYWZmLm1hcCIse30pW25dO3AmJiFkRChwLGQpfHxoLnB1c2gobil9aWYoaC5sZW5ndGgpe3ZhciBxPQpjRChjLGQpLHI9d3ooZCwiZ3RtLmxpbmtDbGljayIsaCk7clsiZ3RtLmVsZW1lbnRUZXh0Il09UGMoZCk7clsiZ3RtLndpbGxPcGVuSW5OZXdXaW5kb3ciXT0hcTtpZihxJiYhZSYmZiYmZC5ocmVmKXt2YXIgdD0hIUlhKFN0cmluZyhXYyhkLCJyZWwiKXx8IiIpLnNwbGl0KCIgIiksZnVuY3Rpb24oeCl7cmV0dXJuIm5vcmVmZXJyZXIiPT09eC50b0xvd2VyQ2FzZSgpfSksdT16WyhXYyhkLCJ0YXJnZXQiKXx8Il9zZWxmIikuc3Vic3RyaW5nKDEpXSx2PSEwLHc9SnkoZnVuY3Rpb24oKXt2YXIgeDtpZih4PXYmJnUpe3ZhciB5O2E6aWYodCl7dmFyIEI7dHJ5e0I9bmV3IE1vdXNlRXZlbnQoYy50eXBlLHtidWJibGVzOiEwfSl9Y2F0Y2goQSl7aWYoIUMuY3JlYXRlRXZlbnQpe3k9ITE7YnJlYWsgYX1CPUMuY3JlYXRlRXZlbnQoIk1vdXNlRXZlbnRzIik7Qi5pbml0RXZlbnQoYy50eXBlLCEwLCEwKX1CLkRoPSEwO2MudGFyZ2V0LmRpc3BhdGNoRXZlbnQoQik7eT0hMH1lbHNlIHk9ITE7Cng9IXl9eCYmKHUubG9jYXRpb24uaHJlZj1XYyhkLCJocmVmIikpfSxmKTtpZihJeShyLHcsZikpdj0hMTtlbHNlIHJldHVybiBjLnByZXZlbnREZWZhdWx0JiZjLnByZXZlbnREZWZhdWx0KCksYy5yZXR1cm5WYWx1ZT0hMX1lbHNlIEl5KHIsZnVuY3Rpb24oKXt9LGZ8fDJFMyk7cmV0dXJuITB9fX07TWMoQywiY2xpY2siLGIsITEpO01jKEMsImF1eGNsaWNrIixiLCExKX07CmZ1bmN0aW9uIGZEKGEsYil7dmFyIGM9dGhpcztLKEoodGhpcyksWyJkdXN0T3B0aW9uczo/UGl4aWVNYXAiLCJ0cmlnZ2VySWQ6PyoiXSxhcmd1bWVudHMpO3ZhciBkPW5kKGEpO1hBKFtmdW5jdGlvbigpe3JldHVybiBMKGMsImRldGVjdF9saW5rX2NsaWNrX2V2ZW50cyIsZCl9XSk7dmFyIGU9ZCYmISFkLndhaXRGb3JUYWdzLGY9ZCYmISFkLmNoZWNrVmFsaWRhdGlvbixnPWQ/ZC5hZmZpbGlhdGVEb21haW5zOnZvaWQgMDtiPUN6KGIpO2lmKGUpe3ZhciBoPU51bWJlcihkLndhaXRGb3JUYWdzVGltZW91dCk7MDxoJiZpc0Zpbml0ZShoKXx8KGg9MkUzKTt2YXIgbT1mdW5jdGlvbihwKXtyZXR1cm4gTWF0aC5tYXgoaCxwKX07enooImxjbCIsIm13dCIsbSwwKTtmfHx6eigibGNsIiwibnYubXd0IixtLDApfXZhciBuPWZ1bmN0aW9uKHApe3AucHVzaChiKTsKcmV0dXJuIHB9O3p6KCJsY2wiLCJpZHMiLG4sW10pO2Z8fHp6KCJsY2wiLCJudi5pZHMiLG4sW10pO2cmJnp6KCJsY2wiLCJhZmYubWFwIixmdW5jdGlvbihwKXtwW2JdPWc7cmV0dXJuIHB9LHt9KTtBeigibGNsIiwiaW5pdCIsITEpfHwoZUQoKSx5eigibGNsIiwiaW5pdCIsITApKTtyZXR1cm4gYn1mRC5EPSJpbnRlcm5hbC5lbmFibGVBdXRvRXZlbnRPbkxpbmtDbGljayI7dmFyIGdELGhEOwp2YXIgaUQ9ZnVuY3Rpb24oYSl7cmV0dXJuIEF6KCJzZGwiLGEse30pfSxqRD1mdW5jdGlvbihhLGIsYyl7YiYmKEFycmF5LmlzQXJyYXkoYSl8fChhPVthXSksenooInNkbCIsYyxmdW5jdGlvbihkKXtmb3IodmFyIGU9MDtlPGEubGVuZ3RoO2UrKyl7dmFyIGY9U3RyaW5nKGFbZV0pO2QuaGFzT3duUHJvcGVydHkoZil8fChkW2ZdPVtdKTtkW2ZdLnB1c2goYil9cmV0dXJuIGR9LHt9KSl9LG1EPWZ1bmN0aW9uKCl7dmFyIGE9ZnVuY3Rpb24oKXtrRCgpO2xEKGEsITApfTtyZXR1cm4gYX0sbkQ9ZnVuY3Rpb24oKXt2YXIgYT0yNTAsYj0hMTtDLnNjcm9sbGluZ0VsZW1lbnQmJkMuZG9jdW1lbnRFbGVtZW50JiZ6LmFkZEV2ZW50TGlzdGVuZXImJihhPTUwLGI9ITApO3ZhciBjPTAsZD0hMSxlPWZ1bmN0aW9uKCl7ZD9jPXouc2V0VGltZW91dChlLGEpOihjPTAsa0QoKSxsRChmKSk7ZD0hMX0sZj1mdW5jdGlvbigpe2ImJmdEKCk7Yz9kPSEwOihjPXouc2V0VGltZW91dChlLGEpLHl6KCJzZGwiLAoicGVuZGluZyIsITApKX07cmV0dXJuIGZ9LGxEPWZ1bmN0aW9uKGEsYil7QXooInNkbCIsImluaXQiLCExKSYmIW9EKCkmJihiP05jKHosInNjcm9sbGVuZCIsYSk6TmMoeiwic2Nyb2xsIixhKSxOYyh6LCJyZXNpemUiLGEpLHl6KCJzZGwiLCJpbml0IiwhMSkpfSxrRD1mdW5jdGlvbigpe3ZhciBhPWdEKCksYj1hLnBoLGM9YS5xaCxkPWIvaEQuc2Nyb2xsV2lkdGgqMTAwLGU9Yy9oRC5zY3JvbGxIZWlnaHQqMTAwO3BEKGIsImhvcml6LnBpeCIsIlBJWEVMUyIsImhvcml6b250YWwiKTtwRChkLCJob3Jpei5wY3QiLCJQRVJDRU5UIiwiaG9yaXpvbnRhbCIpO3BEKGMsInZlcnQucGl4IiwiUElYRUxTIiwidmVydGljYWwiKTtwRChlLCJ2ZXJ0LnBjdCIsIlBFUkNFTlQiLCJ2ZXJ0aWNhbCIpO3l6KCJzZGwiLCJwZW5kaW5nIiwhMSl9LHBEPWZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWlEKGIpLGY9e30sZztmb3IoZyBpbiBlKWlmKGY9e3lkOmYueWR9LGYueWQ9ZyxlLmhhc093blByb3BlcnR5KGYueWQpKXt2YXIgaD0KTnVtYmVyKGYueWQpO2lmKCEoYTxoKSl7dmFyIG09e307SHkoKG0uZXZlbnQ9Imd0bS5zY3JvbGxEZXB0aCIsbVsiZ3RtLnNjcm9sbFRocmVzaG9sZCJdPWgsbVsiZ3RtLnNjcm9sbFVuaXRzIl09Yy50b0xvd2VyQ2FzZSgpLG1bImd0bS5zY3JvbGxEaXJlY3Rpb24iXT1kLG1bImd0bS50cmlnZ2VycyJdPWVbZi55ZF0uam9pbigiLCIpLG0pKTt6eigic2RsIixiLGZ1bmN0aW9uKG4pe3JldHVybiBmdW5jdGlvbihwKXtkZWxldGUgcFtuLnlkXTtyZXR1cm4gcH19KGYpLHt9KX19fSxyRD1mdW5jdGlvbigpe3p6KCJzZGwiLCJzY3IiLGZ1bmN0aW9uKGEpe2F8fChhPUMuc2Nyb2xsaW5nRWxlbWVudHx8Qy5ib2R5JiZDLmJvZHkucGFyZW50Tm9kZSk7cmV0dXJuIGhEPWF9LCExKTt6eigic2RsIiwiZGVwdGgiLGZ1bmN0aW9uKGEpe2F8fChhPXFEKCkpO3JldHVybiBnRD1hfSwhMSl9LHFEPWZ1bmN0aW9uKCl7dmFyIGE9MCxiPTA7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGM9b3IoKSxkPWMuaGVpZ2h0OwphPU1hdGgubWF4KGhELnNjcm9sbExlZnQrYy53aWR0aCxhKTtiPU1hdGgubWF4KGhELnNjcm9sbFRvcCtkLGIpO3JldHVybntwaDphLHFoOmJ9fX0sb0Q9ZnVuY3Rpb24oKXtyZXR1cm4hIShPYmplY3Qua2V5cyhpRCgiaG9yaXoucGl4IikpLmxlbmd0aHx8T2JqZWN0LmtleXMoaUQoImhvcml6LnBjdCIpKS5sZW5ndGh8fE9iamVjdC5rZXlzKGlEKCJ2ZXJ0LnBpeCIpKS5sZW5ndGh8fE9iamVjdC5rZXlzKGlEKCJ2ZXJ0LnBjdCIpKS5sZW5ndGgpfTsKZnVuY3Rpb24gc0QoYSxiKXt2YXIgYz10aGlzO0soSih0aGlzKSxbIm9wdGlvbnM6IVBpeGllTWFwIiwidHJpZ2dlcklkOj8qIl0sYXJndW1lbnRzKTtYQShbZnVuY3Rpb24oKXtyZXR1cm4gTChjLCJkZXRlY3Rfc2Nyb2xsX2V2ZW50cyIpfV0pO3JEKCk7aWYoIWhEKXJldHVybjtiPUN6KGIpO3ZhciBkPW5kKGEpO3N3aXRjaChkLmhvcml6b250YWxUaHJlc2hvbGRVbml0cyl7Y2FzZSAiUElYRUxTIjpqRChkLmhvcml6b250YWxUaHJlc2hvbGRzLGIsImhvcml6LnBpeCIpO2JyZWFrO2Nhc2UgIlBFUkNFTlQiOmpEKGQuaG9yaXpvbnRhbFRocmVzaG9sZHMsYiwiaG9yaXoucGN0Iil9c3dpdGNoKGQudmVydGljYWxUaHJlc2hvbGRVbml0cyl7Y2FzZSAiUElYRUxTIjpqRChkLnZlcnRpY2FsVGhyZXNob2xkcyxiLCJ2ZXJ0LnBpeCIpO2JyZWFrO2Nhc2UgIlBFUkNFTlQiOmpEKGQudmVydGljYWxUaHJlc2hvbGRzLApiLCJ2ZXJ0LnBjdCIpfUF6KCJzZGwiLCJpbml0IiwhMSk/QXooInNkbCIsInBlbmRpbmciLCExKXx8SChmdW5jdGlvbigpe3JldHVybiBrRCgpfSk6KHl6KCJzZGwiLCJpbml0IiwhMCkseXooInNkbCIsInBlbmRpbmciLCEwKSxIKGZ1bmN0aW9uKCl7a0QoKTtpZihvRCgpKXt2YXIgZT1uRCgpO1IoNzQpJiYib25zY3JvbGxlbmQiaW4gej8oZT1tRCgpLE1jKHosInNjcm9sbGVuZCIsZSkpOk1jKHosInNjcm9sbCIsZSk7TWMoeiwicmVzaXplIixlKX1lbHNlIHl6KCJzZGwiLCJpbml0IiwhMSl9KSk7cmV0dXJuIGJ9c0QuRD0iaW50ZXJuYWwuZW5hYmxlQXV0b0V2ZW50T25TY3JvbGwiO2Z1bmN0aW9uIHREKGEpe3JldHVybiBmdW5jdGlvbigpe2lmKGEuRmMmJmEuSWM+PWEuRmMpYS5EYyYmei5jbGVhckludGVydmFsKGEuRGMpO2Vsc2V7YS5JYysrO3ZhciBiPVRhKCk7SHkoe2V2ZW50OmEuZXZlbnROYW1lLCJndG0udGltZXJJZCI6YS5EYywiZ3RtLnRpbWVyRXZlbnROdW1iZXIiOmEuSWMsImd0bS50aW1lckludGVydmFsIjphLmludGVydmFsLCJndG0udGltZXJMaW1pdCI6YS5GYywiZ3RtLnRpbWVyU3RhcnRUaW1lIjphLmNmLCJndG0udGltZXJDdXJyZW50VGltZSI6YiwiZ3RtLnRpbWVyRWxhcHNlZFRpbWUiOmItYS5jZiwiZ3RtLnRyaWdnZXJzIjphLmhpfSl9fX0KZnVuY3Rpb24gdUQoYSxiKXsKcmV0dXJuIGJ9dUQuRD0iaW50ZXJuYWwuZW5hYmxlQXV0b0V2ZW50T25UaW1lciI7dmFyIHZjPWRhKFsiZGF0YS1ndG0teXQtaW5zcGVjdGVkLSJdKSx2RD1bInd3dy55b3V0dWJlLmNvbSIsInd3dy55b3V0dWJlLW5vY29va2llLmNvbSJdLHdELHhEPSExOwp2YXIgeUQ9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWEubWFwKGZ1bmN0aW9uKGcpe3JldHVybntKYTpnLGJmOmcsWmU6dm9pZCAwfX0pO2lmKCFiLmxlbmd0aClyZXR1cm4gZDt2YXIgZT1iLm1hcChmdW5jdGlvbihnKXtyZXR1cm57SmE6ZypjLGJmOnZvaWQgMCxaZTpnfX0pO2lmKCFkLmxlbmd0aClyZXR1cm4gZTt2YXIgZj1kLmNvbmNhdChlKTtmLnNvcnQoZnVuY3Rpb24oZyxoKXtyZXR1cm4gZy5KYS1oLkphfSk7cmV0dXJuIGZ9LHpEPWZ1bmN0aW9uKGEpe2E9dm9pZCAwPT09YT9bXTphO2Zvcih2YXIgYj1bXSxjPTA7YzxhLmxlbmd0aDtjKyspMD5hW2NdfHxiLnB1c2goYVtjXSk7Yi5zb3J0KGZ1bmN0aW9uKGQsZSl7cmV0dXJuIGQtZX0pO3JldHVybiBifSxBRD1mdW5jdGlvbihhKXthPXZvaWQgMD09PWE/W106YTtmb3IodmFyIGI9W10sYz0wO2M8YS5sZW5ndGg7YysrKTEwMDxhW2NdfHwwPmFbY118fChiW2NdPWFbY10vMTAwKTtiLnNvcnQoZnVuY3Rpb24oZCxlKXtyZXR1cm4gZC0KZX0pO3JldHVybiBifSxCRD1mdW5jdGlvbihhLGIpe3ZhciBjLGQ7ZnVuY3Rpb24gZSgpe3Q9V3ooZnVuY3Rpb24oKXtyZXR1cm57dXJsOncsdGl0bGU6eCxyaDp2LEpqOmEuZ2V0Q3VycmVudFRpbWUoKSxwbGF5YmFja1JhdGU6eX19LGIueWIsYS5nZXRJZnJhbWUoKSk7dj0wO3g9dz0iIjt5PTE7cmV0dXJuIGZ9ZnVuY3Rpb24gZihHKXtzd2l0Y2goRyl7Y2FzZSAxOnY9TWF0aC5yb3VuZChhLmdldER1cmF0aW9uKCkpO3c9YS5nZXRWaWRlb1VybCgpO2lmKGEuZ2V0VmlkZW9EYXRhKXt2YXIgRD1hLmdldFZpZGVvRGF0YSgpO3g9RD9ELnRpdGxlOiIifXk9YS5nZXRQbGF5YmFja1JhdGUoKTtiLmxoP0h5KHQuY3JlYXRlRXZlbnQoInN0YXJ0IikpOnQucGQoKTt1PXlEKGIuV2gsYi5WaCxhLmdldER1cmF0aW9uKCkpO3JldHVybiBnKEcpO2RlZmF1bHQ6cmV0dXJuIGZ9fWZ1bmN0aW9uIGcoKXtCPWEuZ2V0Q3VycmVudFRpbWUoKTtBPVNhKCkuZ2V0VGltZSgpO3QuZ2soKTtyKCk7cmV0dXJuIGh9CmZ1bmN0aW9uIGgoRyl7dmFyIEQ7c3dpdGNoKEcpe2Nhc2UgMDpyZXR1cm4gbihHKTtjYXNlIDI6RD0icGF1c2UiO2Nhc2UgMzp2YXIgRT1hLmdldEN1cnJlbnRUaW1lKCktQjtEPTE8TWF0aC5hYnMoKFNhKCkuZ2V0VGltZSgpLUEpLzFFMyp5LUUpPyJzZWVrIjpEfHwiYnVmZmVyaW5nIjthLmdldEN1cnJlbnRUaW1lKCkmJihiLmtoP0h5KHQuY3JlYXRlRXZlbnQoRCkpOnQucGQoKSk7cSgpO3JldHVybiBtO2Nhc2UgLTE6cmV0dXJuIGUoRyk7ZGVmYXVsdDpyZXR1cm4gaH19ZnVuY3Rpb24gbShHKXtzd2l0Y2goRyl7Y2FzZSAwOnJldHVybiBuKEcpO2Nhc2UgMTpyZXR1cm4gZyhHKTtjYXNlIC0xOnJldHVybiBlKEcpO2RlZmF1bHQ6cmV0dXJuIG19fWZ1bmN0aW9uIG4oKXtmb3IoO2Q7KXt2YXIgRz1jO3ouY2xlYXJUaW1lb3V0KGQpO0coKX1iLmpoJiZIeSh0LmNyZWF0ZUV2ZW50KCJjb21wbGV0ZSIsMSkpO3JldHVybiBlKC0xKX1mdW5jdGlvbiBwKCl7fWZ1bmN0aW9uIHEoKXtkJiYKKHouY2xlYXJUaW1lb3V0KGQpLGQ9MCxjPXApfWZ1bmN0aW9uIHIoKXtpZih1Lmxlbmd0aCYmMCE9PXkpe3ZhciBHPS0xLEQ7ZG97RD11WzBdO2lmKEQuSmE+YS5nZXREdXJhdGlvbigpKXJldHVybjtHPShELkphLWEuZ2V0Q3VycmVudFRpbWUoKSkveTtpZigwPkcmJih1LnNoaWZ0KCksMD09PXUubGVuZ3RoKSlyZXR1cm59d2hpbGUoMD5HKTtjPWZ1bmN0aW9uKCl7ZD0wO2M9cDswPHUubGVuZ3RoJiZ1WzBdLkphPT09RC5KYSYmKHUuc2hpZnQoKSxIeSh0LmNyZWF0ZUV2ZW50KCJwcm9ncmVzcyIsRC5aZSxELmJmKSkpO3IoKX07ZD16LnNldFRpbWVvdXQoYywxRTMqRyl9fXZhciB0LHU9W10sdix3LHgseSxCLEEsRj1lKC0xKTtkPTA7Yz1wO3JldHVybntvblN0YXRlQ2hhbmdlOmZ1bmN0aW9uKEcpe0Y9RihHKX0sb25QbGF5YmFja1JhdGVDaGFuZ2U6ZnVuY3Rpb24oRyl7Qj1hLmdldEN1cnJlbnRUaW1lKCk7QT1TYSgpLmdldFRpbWUoKTt0LnBkKCk7eT1HO3EoKTtyKCl9fX0sREQ9CmZ1bmN0aW9uKGEpe0goZnVuY3Rpb24oKXtmdW5jdGlvbiBiKCl7Zm9yKHZhciBkPWMuZ2V0RWxlbWVudHNCeVRhZ05hbWUoImlmcmFtZSIpLGU9ZC5sZW5ndGgsZj0wO2Y8ZTtmKyspQ0QoZFtmXSxhKX12YXIgYz1DO2IoKTtLeihiKX0pfSxDRD1mdW5jdGlvbihhLGIpe2lmKCFhLmdldEF0dHJpYnV0ZSgiZGF0YS1ndG0teXQtaW5zcGVjdGVkLSIrYi55YikmJih1YyhhLCJkYXRhLWd0bS15dC1pbnNwZWN0ZWQtIitiLnliKSxFRChhLGIuSGUpKSl7YS5pZHx8KGEuaWQ9RkQoKSk7dmFyIGM9ei5ZVCxkPWMuZ2V0KGEuaWQpO2R8fChkPW5ldyBjLlBsYXllcihhLmlkKSk7dmFyIGU9QkQoZCxiKSxmPXt9LGc7Zm9yKGcgaW4gZSlmPXtSZTpmLlJlfSxmLlJlPWcsZS5oYXNPd25Qcm9wZXJ0eShmLlJlKSYmZC5hZGRFdmVudExpc3RlbmVyKGYuUmUsZnVuY3Rpb24oaCl7cmV0dXJuIGZ1bmN0aW9uKG0pe3JldHVybiBlW2guUmVdKG0uZGF0YSl9fShmKSl9fSxFRD1mdW5jdGlvbihhLGIpe3ZhciBjPQphLmdldEF0dHJpYnV0ZSgic3JjIik7aWYoR0QoYywiZW1iZWQvIikpe2lmKDA8Yy5pbmRleE9mKCJlbmFibGVqc2FwaT0xIikpcmV0dXJuITA7aWYoYil7dmFyIGQ7dmFyIGU9LTEhPT1jLmluZGV4T2YoIj8iKT8iJiI6Ij8iOy0xPGMuaW5kZXhPZigib3JpZ2luPSIpP2Q9YytlKyJlbmFibGVqc2FwaT0xIjood0R8fCh3RD1DLmxvY2F0aW9uLnByb3RvY29sKyIvLyIrQy5sb2NhdGlvbi5ob3N0bmFtZSxDLmxvY2F0aW9uLnBvcnQmJih3RCs9IjoiK0MubG9jYXRpb24ucG9ydCkpLGQ9YytlKyJlbmFibGVqc2FwaT0xJm9yaWdpbj0iK2VuY29kZVVSSUNvbXBvbmVudCh3RCkpO3ZhciBmO2Y9SmIoZCk7YS5zcmM9SGIoZikudG9TdHJpbmcoKTtyZXR1cm4hMH19cmV0dXJuITF9LEdEPWZ1bmN0aW9uKGEsYil7aWYoIWEpcmV0dXJuITE7Zm9yKHZhciBjPTA7Yzx2RC5sZW5ndGg7YysrKWlmKDA8PWEuaW5kZXhPZigiLy8iK3ZEW2NdKyIvIitiKSlyZXR1cm4hMDtyZXR1cm4hMX0sRkQ9ZnVuY3Rpb24oKXt2YXIgYT0KTWF0aC5yb3VuZCgxRTkqTWF0aC5yYW5kb20oKSkrIiI7cmV0dXJuIEMuZ2V0RWxlbWVudEJ5SWQoYSk/RkQoKTphfTsKZnVuY3Rpb24gSEQoYSxiKXt2YXIgYz10aGlzO0soSih0aGlzKSxbImR1c3RPcHRpb25zOiFQaXhpZU1hcCIsInRyaWdnZXJJZDo/KiJdLGFyZ3VtZW50cyk7WEEoW2Z1bmN0aW9uKCl7cmV0dXJuIEwoYywiZGV0ZWN0X3lvdXR1YmVfYWN0aXZpdHlfZXZlbnRzIix7Zml4TWlzc2luZ0FwaTohIWEuZ2V0KCJmaXhNaXNzaW5nQXBpIil9KX1dKTtiPUN6KGIpO3ZhciBkPSEhYS5nZXQoImNhcHR1cmVTdGFydCIpLGU9ISFhLmdldCgiY2FwdHVyZUNvbXBsZXRlIiksZj0hIWEuZ2V0KCJjYXB0dXJlUGF1c2UiKSxnPUFEKG5kKGEuZ2V0KCJwcm9ncmVzc1RocmVzaG9sZHNQZXJjZW50IikpKSxoPXpEKG5kKGEuZ2V0KCJwcm9ncmVzc1RocmVzaG9sZHNUaW1lSW5TZWNvbmRzIikpKSxtPSEhYS5nZXQoImZpeE1pc3NpbmdBcGkiKTtpZighKGR8fGV8fApmfHxnLmxlbmd0aHx8aC5sZW5ndGgpKXJldHVybjt2YXIgbj17bGg6ZCxqaDplLGtoOmYsVmg6ZyxXaDpoLEhlOm0seWI6Yn0scD16LllULHE9ZnVuY3Rpb24oKXtERChuKX07aWYocClyZXR1cm4gcC5yZWFkeSYmcC5yZWFkeShxKSxiO3ZhciByPXoub25Zb3VUdWJlSWZyYW1lQVBJUmVhZHk7ei5vbllvdVR1YmVJZnJhbWVBUElSZWFkeT1mdW5jdGlvbigpe3ImJnIoKTtxKCl9O0goZnVuY3Rpb24oKXtmb3IodmFyIHQ9Qy5nZXRFbGVtZW50c0J5VGFnTmFtZSgic2NyaXB0IiksdT10Lmxlbmd0aCx2PTA7djx1O3YrKyl7dmFyIHc9dFt2XS5nZXRBdHRyaWJ1dGUoInNyYyIpO2lmKEdEKHcsImlmcmFtZV9hcGkiKXx8R0QodywicGxheWVyX2FwaSIpKXJldHVybiBifWZvcih2YXIgeD1DLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJpZnJhbWUiKSx5PXgubGVuZ3RoLEI9MDtCPHk7QisrKWlmKCF4RCYmRUQoeFtCXSxuLkhlKSlyZXR1cm4gSWMoImh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL2lmcmFtZV9hcGkiKSwKeEQ9ITAsYn0pO3JldHVybiBifUhELkQ9ImludGVybmFsLmVuYWJsZUF1dG9FdmVudE9uWW91VHViZUFjdGl2aXR5Ijt2YXIgSUQ7ZnVuY3Rpb24gSkQoYSl7dmFyIGI9ITE7cmV0dXJuIGJ9SkQuRD0iaW50ZXJuYWwuZXZhbHVhdGVNYXRjaGluZ1J1bGVzIjt2YXIgcEU9ZnVuY3Rpb24oKXt2YXIgYT0hMDtqbig3KSYmam4oOSkmJmpuKDEwKXx8KGE9ITEpO3JldHVybiBhfTtmdW5jdGlvbiBrRihhLGIsYyxkKXt9a0YuRD0iaW50ZXJuYWwuZXhlY3V0ZUV2ZW50UHJvY2Vzc29yIjtmdW5jdGlvbiBsRihhKXt2YXIgYj12b2lkIDA7cmV0dXJuIG1kKGIsdGhpcy5oLDEpfWxGLkQ9ImludGVybmFsLmV4ZWN1dGVKYXZhc2NyaXB0U3RyaW5nIjt2YXIgbUY9ZnVuY3Rpb24oYSl7dmFyIGI7cmV0dXJuIGJ9O3ZhciBuRj1udWxsOwpmdW5jdGlvbiBvRigpe3ZhciBhPW5ldyBzYjtMKHRoaXMsInJlYWRfY29udGFpbmVyX2RhdGEiKSxSKDM4KSYmbkY/YT1uRjooYS5zZXQoImNvbnRhaW5lcklkIiwnRy1UQlBZRUQ4V1NXJyksYS5zZXQoInZlcnNpb24iLCcxJyksYS5zZXQoImVudmlyb25tZW50TmFtZSIsJycpLGEuc2V0KCJkZWJ1Z01vZGUiLGJnKSxhLnNldCgicHJldmlld01vZGUiLGRnKSxhLnNldCgiZW52aXJvbm1lbnRNb2RlIixjZyksYS5zZXQoImZpcnN0UGFydHlTZXJ2aW5nIixGaigpKSxhLnNldCgiY29udGFpbmVyVXJsIixDYyksYS5KYigpLFIoMzgpJiYobkY9YSkpO3JldHVybiBhfQpvRi5QPSJnZXRDb250YWluZXJWZXJzaW9uIjtmdW5jdGlvbiBwRihhLGIpe2I9dm9pZCAwPT09Yj8hMDpiO3ZhciBjO3JldHVybiBjfXBGLlA9ImdldENvb2tpZVZhbHVlcyI7ZnVuY3Rpb24gcUYoKXtyZXR1cm4gZmooKX1xRi5EPSJpbnRlcm5hbC5nZXRDb3VudHJ5Q29kZSI7ZnVuY3Rpb24gckYoKXt2YXIgYT1bXTthPVVqKCk7cmV0dXJuIG1kKGEpfXJGLkQ9ImludGVybmFsLmdldERlc3RpbmF0aW9uSWRzIjtmdW5jdGlvbiBzRihhLGIpe3ZhciBjPW51bGw7cmV0dXJuIGN9c0YuRD0iaW50ZXJuYWwuZ2V0RWxlbWVudEF0dHJpYnV0ZSI7ZnVuY3Rpb24gdEYoYSl7dmFyIGI9bnVsbDtyZXR1cm4gYn10Ri5EPSJpbnRlcm5hbC5nZXRFbGVtZW50QnlJZCI7ZnVuY3Rpb24gdUYoYSl7dmFyIGI9IiI7cmV0dXJuIGJ9dUYuRD0iaW50ZXJuYWwuZ2V0RWxlbWVudElubmVyVGV4dCI7ZnVuY3Rpb24gdkYoYSxiKXt2YXIgYz1udWxsO3JldHVybiBjfXZGLkQ9ImludGVybmFsLmdldEVsZW1lbnRQcm9wZXJ0eSI7ZnVuY3Rpb24gd0YoYSl7dmFyIGI7cmV0dXJuIGJ9d0YuRD0iaW50ZXJuYWwuZ2V0RWxlbWVudFZhbHVlIjtmdW5jdGlvbiB4RihhKXt2YXIgYj0wO3JldHVybiBifXhGLkQ9ImludGVybmFsLmdldEVsZW1lbnRWaXNpYmlsaXR5UmF0aW8iO2Z1bmN0aW9uIHlGKGEpe3ZhciBiPW51bGw7cmV0dXJuIGJ9eUYuRD0iaW50ZXJuYWwuZ2V0RWxlbWVudHNCeUNzc1NlbGVjdG9yIjsKZnVuY3Rpb24gekYoYSl7dmFyIGI9dm9pZCAwO3JldHVybiBifXpGLkQ9ImludGVybmFsLmdldEV2ZW50RGF0YSI7dmFyIEFGPXt9O0FGLmVuYWJsZUFXRmxlZGdlPVIoMjEpO0FGLmVuYWJsZUFkc0NvbnZlcnNpb25WYWxpZGF0aW9uPVIoMTIpO0FGLmVuYWJsZUF1dG9QaWlPblBob25lQW5kQWRkcmVzcz1SKDIwKTtBRi5lbmFibGVDYWNoZWRFY29tbWVyY2VEYXRhPVIoMjUpO0FGLmVuYWJsZUNjZFByZUF1dG9QaWlEZXRlY3Rpb249UigyNik7QUYuZW5hYmxlQ2xvdWRSZWNvbW1lbnRhdGlvbnNFcnJvckxvZ2dpbmc9UigzMCk7QUYuZW5hYmxlQ2xvdWRSZWNvbW1lbnRhdGlvbnNTY2hlbWFJbmdlc3Rpb249UigzMSk7QUYuZW5hYmxlQ2xvdWRSZXRhaWxJbmplY3RQdXJjaGFzZU1ldGFkYXRhPVIoMzMpO0FGLmVuYWJsZUNsb3VkUmV0YWlsTG9nZ2luZz1SKDMyKTtBRi5lbmFibGVDbG91ZFJldGFpbFBhZ2VDYXRlZ29yaWVzPVIoMzQpO0FGLmVuYWJsZUNvbnNlbnREaXNjbG9zdXJlQWN0aXZpdHk9UigzNik7QUYuZW5hYmxlRENGbGVkZ2U9Uig0MSk7QUYuZW5hYmxlRGVjb2RlVXJpPVIoNTApOwpBRi5lbmFibGVEZWZlckFsbEVuaGFuY2VkTWVhc3VyZW1lbnQ9Uig0Mik7QUYuZW5hYmxlRXVpZEF1dG9Nb2RlPVIoNDUpO0FGLmVuYWJsZUZvcm1Ta2lwVmFsaWRhdGlvbj1SKDQ4KTtBRi5lbmFibGVVcmxEZWNvZGVFdmVudFVzYWdlPVIoODUpO0FGLmVuYWJsZVpvbmVDb25maWdJbkNoaWxkQ29udGFpbmVycz1SKDg3KTtBRi5sb2FkQ29udGFpbmVyRm9yR3RtRXZlbnRUYWdzPVIoOTApO0FGLnVzZUVuYWJsZUF1dG9FdmVudE9uRm9ybUFwaXM9Uig5OSk7QUYuYXV0b1BpaUVsaWdpYmxlPWtqKCk7ZnVuY3Rpb24gQkYoKXtyZXR1cm4gbWQoQUYpfUJGLkQ9ImludGVybmFsLmdldEZsYWdzIjtmdW5jdGlvbiBDRigpe3JldHVybiBuZXcgamQocHopfUNGLkQ9ImludGVybmFsLmdldEh0bWxJZCI7ZnVuY3Rpb24gREYoYSxiKXt2YXIgYztLKEoodGhpcyksWyJ0YXJnZXRJZDohc3RyaW5nIiwibmFtZTohc3RyaW5nIl0sYXJndW1lbnRzKTt2YXIgZD1mcShhKXx8e307Yz1tZChkW2JdLHRoaXMuaCk7cmV0dXJuIGN9REYuRD0iaW50ZXJuYWwuZ2V0UHJvZHVjdFNldHRpbmdzUGFyYW1ldGVyIjtmdW5jdGlvbiBFRihhLGIpe3ZhciBjO0soSih0aGlzKSxbInF1ZXJ5S2V5OiFzdHJpbmciLCJyZXRyaWV2ZUFsbDo/Ym9vbGVhbiJdLGFyZ3VtZW50cyk7TCh0aGlzLCJnZXRfdXJsIiwicXVlcnkiLGEpO3ZhciBkPXJqKHZqKHoubG9jYXRpb24uaHJlZiksInF1ZXJ5IiksZT1vaihkLGEsYik7Yz1tZChlLHRoaXMuaCk7cmV0dXJuIGN9RUYuUD0iZ2V0UXVlcnlQYXJhbWV0ZXJzIjtmdW5jdGlvbiBGRihhLGIpe3ZhciBjO3JldHVybiBjfUZGLlA9ImdldFJlZmVycmVyUXVlcnlQYXJhbWV0ZXJzIjtmdW5jdGlvbiBHRihhKXt2YXIgYj0iIjtyZXR1cm4gYn1HRi5QPSJnZXRSZWZlcnJlclVybCI7ZnVuY3Rpb24gSEYoKXtyZXR1cm4gZ2ooKX1IRi5EPSJpbnRlcm5hbC5nZXRSZWdpb25Db2RlIjtmdW5jdGlvbiBJRihhLGIpe3ZhciBjO0soSih0aGlzKSxbInRhcmdldElkOiFzdHJpbmciLCJuYW1lOiFzdHJpbmciXSxhcmd1bWVudHMpO3ZhciBkPXBtKGEpO2M9bWQoZFtiXSx0aGlzLmgpO3JldHVybiBjfUlGLkQ9ImludGVybmFsLmdldFJlbW90ZUNvbmZpZ1BhcmFtZXRlciI7ZnVuY3Rpb24gSkYoYSl7dmFyIGI9IiI7SyhKKHRoaXMpLFsiY29tcG9uZW50Oj9zdHJpbmciXSxhcmd1bWVudHMpLEwodGhpcywiZ2V0X3VybCIsYSksYj1yaih2aih6LmxvY2F0aW9uLmhyZWYpLGEpO3JldHVybiBifUpGLlA9ImdldFVybCI7ZnVuY3Rpb24gS0YoKXtMKHRoaXMsImdldF91c2VyX2FnZW50Iik7cmV0dXJuIEJjLnVzZXJBZ2VudH1LRi5QPSJnZXRVc2VyQWdlbnQiO3ZhciBMRj0hMSxNRj1mdW5jdGlvbihhKXt2YXIgYj1hLmV2ZW50TmFtZT09PU4uZy5zYyYmZmwoKSYmaXMoYSksYz1hLm1ldGFkYXRhLmlzX3NndG1fc2VydmljZV93b3JrZXIsZD1hLm1ldGFkYXRhLmJhdGNoX29uX25hdmlnYXRpb24sZT1hLm1ldGFkYXRhLmlzX2NvbnZlcnNpb24sZj1hLm1ldGFkYXRhLmlzX3Nlc3Npb25fc3RhcnQsZz1hLm1ldGFkYXRhLmNyZWF0ZV9kY19qb2luLGg9YS5tZXRhZGF0YS5jcmVhdGVfZ29vZ2xlX2pvaW4sbT1hLm1ldGFkYXRhLmV1aWRfbW9kZV9lbmFibGVkJiYhIWpzKGEpO3JldHVybiEoIShSKDUxKSYmUig1MikmJiJmZXRjaCJpbiB6fHxCYy5zZW5kQmVhY29uKXx8ZXx8bXx8Znx8Z3x8aHx8Ynx8Y3x8IWQmJkxGKX07CnZhciBORj1mdW5jdGlvbihhKXt2YXIgYj0wLGM9MDtyZXR1cm57c3RhcnQ6ZnVuY3Rpb24oKXtiPVRhKCl9LHN0b3A6ZnVuY3Rpb24oKXtjPXRoaXMuZ2V0KCl9LGdldDpmdW5jdGlvbigpe3ZhciBkPTA7YS5GaCgpJiYoZD1UYSgpLWIpO3JldHVybiBkK2N9fX0sT0Y9ZnVuY3Rpb24oKXt0aGlzLmg9dm9pZCAwO3RoaXMucz0wO3RoaXMuaXNBY3RpdmU9dGhpcy5pc1Zpc2libGU9dGhpcy5DPSExO3RoaXMuTT10aGlzLkY9dm9pZCAwfTthYT1PRi5wcm90b3R5cGU7YWEuWWs9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcztpZighdGhpcy5oKXt0aGlzLkM9Qy5oYXNGb2N1cygpO3RoaXMuaXNWaXNpYmxlPSFDLmhpZGRlbjt0aGlzLmlzQWN0aXZlPSEwO3ZhciBjPWZ1bmN0aW9uKGQsZSxmKXtNYyhkLGUsZnVuY3Rpb24oZyl7Yi5oLnN0b3AoKTtmKGcpO2IuRmgoKSYmYi5oLnN0YXJ0KCl9KX07Yyh6LCJmb2N1cyIsZnVuY3Rpb24oKXtiLkM9ITB9KTtjKHosImJsdXIiLGZ1bmN0aW9uKCl7Yi5DPQohMX0pO2MoeiwicGFnZXNob3ciLGZ1bmN0aW9uKGQpe2IuaXNBY3RpdmU9ITA7ZC5wZXJzaXN0ZWQmJk0oNTYpO2IuTSYmYi5NKCl9KTtjKHosInBhZ2VoaWRlIixmdW5jdGlvbigpe2IuaXNBY3RpdmU9ITE7Yi5GJiZiLkYoKX0pO2MoQywidmlzaWJpbGl0eWNoYW5nZSIsZnVuY3Rpb24oKXtiLmlzVmlzaWJsZT0hQy5oaWRkZW59KTtpcyhhKSYmLTE9PT0oQmMudXNlckFnZW50fHwiIikuaW5kZXhPZigiRmlyZWZveCIpJiYtMT09PShCYy51c2VyQWdlbnR8fCIiKS5pbmRleE9mKCJGeGlPUyIpJiZjKHosImJlZm9yZXVubG9hZCIsZnVuY3Rpb24oKXtMRj0hMH0pO3RoaXMuWmgoKTt0aGlzLnM9MH19O2FhLlpoPWZ1bmN0aW9uKCl7dGhpcy5zKz10aGlzLlNmKCk7dGhpcy5oPU5GKHRoaXMpO3RoaXMuRmgoKSYmdGhpcy5oLnN0YXJ0KCl9O2FhLnluPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMuU2YoKTswPGImJihhLmhbTi5nLk1kXT1iKX07YWEua209ZnVuY3Rpb24oYSl7YS5oW04uZy5NZF09CnZvaWQgMDt0aGlzLlpoKCk7dGhpcy5zPTB9O2FhLkZoPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuQyYmdGhpcy5pc1Zpc2libGUmJnRoaXMuaXNBY3RpdmV9O2FhLlpsPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucyt0aGlzLlNmKCl9O2FhLlNmPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaCYmdGhpcy5oLmdldCgpfHwwfTthYS5obj1mdW5jdGlvbihhKXt0aGlzLkY9YX07YWEuZGs9ZnVuY3Rpb24oYSl7dGhpcy5NPWF9O3ZhciBQRj1mdW5jdGlvbihhKXtBYigiR0E0X0VWRU5UIixhKX0sUUY9ZnVuY3Rpb24oKXtkZWxldGUgemIuR0E0X0VWRU5UfTtmdW5jdGlvbiBSRigpe3JldHVybiB6LmdhR2xvYmFsPXouZ2FHbG9iYWx8fHt9fXZhciBTRj1mdW5jdGlvbigpe3ZhciBhPVJGKCk7YS5oaWQ9YS5oaWR8fEphKCk7cmV0dXJuIGEuaGlkfSxURj1mdW5jdGlvbihhLGIpe3ZhciBjPVJGKCk7aWYodm9pZCAwPT1jLnZpZHx8YiYmIWMuZnJvbV9jb29raWUpYy52aWQ9YSxjLmZyb21fY29va2llPWJ9Owp2YXIgVUY9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWEubWV0YWRhdGEuY2xpZW50X2lkX3NvdXJjZTtpZih2b2lkIDA9PT1kfHxjPD1kKWEuaFtOLmcubmJdPWIsYS5tZXRhZGF0YS5jbGllbnRfaWRfc291cmNlPWN9LFhGPWZ1bmN0aW9uKGEsYil7dmFyIGM7dmFyIGQ9Yi5tZXRhZGF0YS5jb29raWVfb3B0aW9ucyxlPWQucHJlZml4KyJfZ2EiLGY9am8oZCx2b2lkIDAsdm9pZCAwLE4uZy5SKTtpZighMT09PVYoYi5vLE4uZy52YykmJlZGKGIpPT09YSljPSEwO2Vsc2V7dmFyIGc9aW8oYSxXRlswXSxkLmRvbWFpbixkLnBhdGgpO2M9MSE9PVpuKGUsZyxmKX1yZXR1cm4gY30sVkY9ZnVuY3Rpb24oYSl7dmFyIGI9YS5tZXRhZGF0YS5jb29raWVfb3B0aW9ucyxjPWIucHJlZml4KyJfZ2EiLGQ9aG8oYyxiLmRvbWFpbixiLnBhdGgsV0YsTi5nLlIpO2lmKCFkKXt2YXIgZT1TdHJpbmcoVihhLm8sTi5nLnVjLCIiKSk7ZSYmZSE9YyYmKGQ9aG8oZSxiLmRvbWFpbixiLnBhdGgsV0YsTi5nLlIpKX1yZXR1cm4gZH0sCldGPVsiR0ExIl0sWUY9ZnVuY3Rpb24oYSxiKXt2YXIgYz1hLmhbTi5nLm5iXTtpZihWKGEubyxOLmcuRWIpJiZWKGEubyxOLmcuVGIpfHxiJiZjPT09YilyZXR1cm4gYztpZihjKXtjPSIiK2M7aWYoIVhGKGMsYSkpcmV0dXJuIE0oMzEpLGEuaXNBYm9ydGVkPSEwLCIiO1RGKGMsdGwoTi5nLlIpKTtyZXR1cm4gY31NKDMyKTthLmlzQWJvcnRlZD0hMDtyZXR1cm4iIn07CnZhciBhRz1mdW5jdGlvbihhLGIsYyl7aWYoIWIpcmV0dXJuIGE7aWYoIWEpcmV0dXJuIGI7dmFyIGQ9WkYoYSk7aWYoIWQpcmV0dXJuIGI7dmFyIGUsZj1OYShudWxsIT0oZT1WKGMubyxOLmcua2QpKT9lOjMwKTtpZighKE1hdGguZmxvb3IoYy5tZXRhZGF0YS5ldmVudF9zdGFydF90aW1lc3RhbXBfbXMvMUUzKT5kLlRlKzYwKmYpKXJldHVybiBhO3ZhciBnPVpGKGIpO2lmKCFnKXJldHVybiBhO2cuTmM9ZC5OYysxO3ZhciBoO3JldHVybiBudWxsIT0oaD0kRihnLnNlc3Npb25JZCxnLk5jLGcueGQsZy5UZSxnLkpoLGcuR2MsZy5EZSkpP2g6Yn0sZEc9ZnVuY3Rpb24oYSxiKXt2YXIgYz1iLm1ldGFkYXRhLmNvb2tpZV9vcHRpb25zLGQ9YkcoYixjKSxlPWlvKGEsY0dbMF0sYy5kb21haW4sYy5wYXRoKSxmPXtOYjpOLmcuUixkb21haW46Yy5kb21haW4scGF0aDpjLnBhdGgsZXhwaXJlczpjLkhjP25ldyBEYXRlKFRhKCkrMUUzKmMuSGMpOnZvaWQgMCxmbGFnczpjLmZsYWdzfTtabihkLAp2b2lkIDAsZik7cmV0dXJuIDEhPT1abihkLGUsZil9LGVHPWZ1bmN0aW9uKGEpe3ZhciBiPWEubWV0YWRhdGEuY29va2llX29wdGlvbnMsYz1iRyhhLGIpLGQ9aG8oYyxiLmRvbWFpbixiLnBhdGgsY0csTi5nLlIpO2lmKCFkKXJldHVybiBkO3ZhciBlPVFuKGMsdm9pZCAwLHZvaWQgMCxOLmcuUik7aWYoZCYmMTxlLmxlbmd0aCl7TSgxMTQpO2Zvcih2YXIgZj12b2lkIDAsZz12b2lkIDAsaD0wO2g8ZS5sZW5ndGg7aCsrKXt2YXIgbT1lW2hdLnNwbGl0KCIuIik7aWYoISg3Pm0ubGVuZ3RoKSl7dmFyIG49TnVtYmVyKG1bNV0pO24mJighZ3x8bj5nKSYmKGc9bixmPWVbaF0pfX1mJiZmLnN1YnN0cmluZyhmLmxlbmd0aC1kLmxlbmd0aCxmLmxlbmd0aCkhPT1kJiYoTSgxMTUpLGQ9Zi5zcGxpdCgiLiIpLnNsaWNlKDIpLmpvaW4oIi4iKSl9cmV0dXJuIGR9LCRGPWZ1bmN0aW9uKGEsYixjLGQsZSxmLGcpe2lmKGEmJmIpe3ZhciBoPVthLGIsTmEoYyksZCxlXTtoLnB1c2goZj8iMSI6IjAiKTsKaC5wdXNoKGd8fCIwIik7cmV0dXJuIGguam9pbigiLiIpfX0sY0c9WyJHUzEiXSxiRz1mdW5jdGlvbihhLGIpe3JldHVybiBiLnByZWZpeCsiX2dhXyIrYS50YXJnZXQuT1swXX0sWkY9ZnVuY3Rpb24oYSl7aWYoYSl7dmFyIGI9YS5zcGxpdCgiLiIpO2lmKCEoNT5iLmxlbmd0aHx8NzxiLmxlbmd0aCkpezc+Yi5sZW5ndGgmJk0oNjcpO3ZhciBjPU51bWJlcihiWzFdKSxkPU51bWJlcihiWzNdKSxlPU51bWJlcihiWzRdfHwwKTtjfHxNKDExOCk7ZHx8TSgxMTkpO2lzTmFOKGUpJiZNKDEyMCk7aWYoYyYmZCYmIWlzTmFOKGUpKXJldHVybntzZXNzaW9uSWQ6YlswXSxOYzpjLHhkOiEhTnVtYmVyKGJbMl0pLFRlOmQsSmg6ZSxHYzoiMSI9PT1iWzVdLERlOiIwIiE9PWJbNl0/Yls2XTp2b2lkIDB9fX19LGZHPWZ1bmN0aW9uKGEpe3JldHVybiAkRihhLmhbTi5nLnViXSxhLmhbTi5nLmJlXSxhLmhbTi5nLmFlXSxNYXRoLmZsb29yKGEubWV0YWRhdGEuZXZlbnRfc3RhcnRfdGltZXN0YW1wX21zLwoxRTMpLGEubWV0YWRhdGEuam9pbl90aW1lcl9zZWN8fDAsISFhLm1ldGFkYXRhW04uZy52Zl0sYS5oW04uZy5OZF0pfTsKdmFyIGdHPWZ1bmN0aW9uKGEpe3ZhciBiPVYoYS5vLE4uZy5CYSksYz1hLm8uc1tOLmcuQmFdO2lmKGM9PT1iKXJldHVybiBjO3ZhciBkPW5iKGIpO2MmJmNbTi5nLlhdJiYoZFtOLmcuWF09KGRbTi5nLlhdfHxbXSkuY29uY2F0KGNbTi5nLlhdKSk7cmV0dXJuIGR9LGhHPWZ1bmN0aW9uKGEsYil7dmFyIGM9em8oITApO3JldHVybiIxIiE9PWMuX3VwP3t9OntjbGllbnRJZDpjW2FdLGVnOmNbYl19fSxpRz1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9em8oITApLGU9ZFtiXTtlJiYoVUYoYSxlLDIpLFhGKGUsYSkpO3ZhciBmPWRbY107ZiYmZEcoZixhKTtyZXR1cm57Y2xpZW50SWQ6ZSxlZzpmfX0sakc9ITEsa0c9ZnVuY3Rpb24oYSl7dmFyIGI9Z0coYSl8fHt9LGM9YS5tZXRhZGF0YS5jb29raWVfb3B0aW9ucyxkPWMucHJlZml4KyJfZ2EiLGU9YkcoYSxjKSxmPXt9O0pvKGJbTi5nLlViXSwhIWJbTi5nLlhdKSYmKGY9aUcoYSxkLGUpLGYuY2xpZW50SWQmJmYuZWcmJihqRz0hMCkpO2JbTi5nLlhdJiYKR28oZnVuY3Rpb24oKXt2YXIgZz17fSxoPVZGKGEpO2gmJihnW2RdPWgpO3ZhciBtPWVHKGEpO20mJihnW2VdPW0pO3ZhciBuPVFuKCJGUExDIix2b2lkIDAsdm9pZCAwLE4uZy5SKTtuLmxlbmd0aCYmKGcuX2ZwbGM9blswXSk7cmV0dXJuIGd9LGJbTi5nLlhdLGJbTi5nLkZiXSwhIWJbTi5nLnRiXSk7cmV0dXJuIGZ9LG1HPWZ1bmN0aW9uKGEpe2lmKCFWKGEubyxOLmcuWmEpKXJldHVybnt9O3ZhciBiPWEubWV0YWRhdGEuY29va2llX29wdGlvbnMsYz1iLnByZWZpeCsiX2dhIixkPWJHKGEsYik7SG8oZnVuY3Rpb24oKXt2YXIgZTtpZih0bCgiYW5hbHl0aWNzX3N0b3JhZ2UiKSllPXt9O2Vsc2V7dmFyIGY9e307ZT0oZi5fdXA9IjEiLGZbY109YS5oW04uZy5uYl0sZltkXT1mRyhhKSxmKX1yZXR1cm4gZX0sMSk7cmV0dXJuIXRsKCJhbmFseXRpY3Nfc3RvcmFnZSIpJiZsRygpP2hHKGMsZCk6e319LGxHPWZ1bmN0aW9uKCl7dmFyIGE9cWooei5sb2NhdGlvbiwiaG9zdCIpLGI9cWoodmooQy5yZWZlcnJlciksCiJob3N0Iik7cmV0dXJuIGEmJmI/YT09PWJ8fDA8PWEuaW5kZXhPZigiLiIrYil8fDA8PWIuaW5kZXhPZigiLiIrYSk/ITA6ITE6ITF9O3ZhciBuRz1mdW5jdGlvbigpe3ZhciBhPVRhKCksYj1hKzg2NEU1LGM9MjAsZD01RTM7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGU9VGEoKTtlPj1iJiYoYj1lKzg2NEU1LGQ9NUUzKTtpZigxPmQpcmV0dXJuITE7Yz1NYXRoLm1pbihjKyhlLWEpLzFFMyo1LDIwKTthPWU7aWYoMT5jKXJldHVybiExO2QtLTtjLS07cmV0dXJuITB9fTsKdmFyIG9HPWZ1bmN0aW9uKGEsYil7cW4oKSYmKGEuZ2NzPXJuKCksYi5tZXRhZGF0YS5pc19jb25zZW50X3VwZGF0ZSYmKGEuZ2N1PSIxIikpO2EuZ2NkPXZuKGIubyk7cG4oYi5vKT9hLm5wYT0iMCI6YS5ucGE9IjEifSxyRz1mdW5jdGlvbihhKXtpZihhLm1ldGFkYXRhLmlzX21lcmNoYW50X2NlbnRlcilyZXR1cm4gSWooImh0dHBzOi8vd3d3Lm1lcmNoYW50LWNlbnRlci1hbmFseXRpY3MuZ29vZyIpKyIvbWMvY29sbGVjdCI7dmFyIGI9RWooSGooYS5vKSwiL2cvY29sbGVjdCIpO2lmKGIpcmV0dXJuIGI7aWYoTGkucylyZXR1cm4iIitNaSgpKyIvZy9jb2xsZWN0Ijt2YXIgYz1ocyhhKSxkPVYoYS5vLE4uZy5sYik7cmV0dXJuIGMmJiFoaigpJiYhMSE9PWQmJnBFKCkmJnRsKE4uZy5KKSYmdGwoTi5nLlIpP3BHKCk6cUcoKX0sc0c9ITE7c0c9ITA7CnZhciB0Rz17fTt0R1tOLmcubmJdPSJjaWQiO3RHW04uZy5RYl09ImFyZSI7dEdbTi5nLndmXT0iX2ZpZCI7dEdbTi5nLkhnXT0iX2dlbyI7dEdbTi5nLnNiXT0iZ2RpZCI7dEdbTi5nLmRkXT0iaXIiO3RHW04uZy5QYV09InVsIjt0R1tOLmcuUmddPSJwYWUiO3RHW04uZy5aZF09Il9yZGkiO3RHW04uZy5IYl09InNyIjt0R1tOLmcuZWpdPSJ0aWQiO3RHW04uZy5DZl09InR0Ijt0R1tOLmcubWVdPSJlY19tb2RlIjt0R1tOLmcub2pdPSJndG1fdXAiO3RHW04uZy5jZV09InVhYSI7dEdbTi5nLmRlXT0idWFiIjt0R1tOLmcuZWVdPSJ1YWZ2bCI7dEdbTi5nLmZlXT0idWFtYiI7dEdbTi5nLmhlXT0idWFtIjt0R1tOLmcuaWVdPSJ1YXAiO3RHW04uZy5qZV09InVhcHYiOwp0R1tOLmcua2VdPSJ1YXciO3RHW04uZy5mal09InVyIjt0R1tOLmcuZWRdPSJscHMiO3RHW04uZy5xZl09InBzY2RsIjt2YXIgdUc9e307dUdbTi5nLlBjXT0iY2MiO3VHW04uZy5RY109ImNpIjt1R1tOLmcuUmNdPSJjbSI7dUdbTi5nLlNjXT0iY24iO3VHW04uZy5VY109ImNzIjt1R1tOLmcuVmNdPSJjayI7dUdbTi5nLkFhXT0KImN1Ijt1R1tOLmcucmFdPSJkbCI7dUdbTi5nLkdhXT0iZHIiO3VHW04uZy5HYl09ImR0Ijt1R1tOLmcuYWVdPSJzZWciO3VHW04uZy51Yl09InNpZCI7dUdbTi5nLmJlXT0ic2N0Ijt1R1tOLmcuUmFdPSJ1aWQiO1IoODkpJiYodUdbTi5nLmdkXT0iZHAiKTt2YXIgdkc9e307dkdbTi5nLk1kXT0iX2V0Ijt2R1tOLmcucGJdPSJlZGlkIjt2YXIgd0c9e307d0dbTi5nLlBjXT0iY2MiO3dHW04uZy5RY109ImNpIjt3R1tOLmcuUmNdPSJjbSI7d0dbTi5nLlNjXT0iY24iO3dHW04uZy5VY109ImNzIjt3R1tOLmcuVmNdPSJjayI7dmFyIHhHPXt9LHlHPU9iamVjdC5mcmVlemUoKHhHW04uZy5IYV09MSx4RykpLHFHPWZ1bmN0aW9uKCl7dmFyIGE9CiJ3d3ciO3NHJiZqaigpJiYoYT1qaigpKTtyZXR1cm4iaHR0cHM6Ly8iK2ErIi5nb29nbGUtYW5hbHl0aWNzLmNvbS9nL2NvbGxlY3QifSxwRz1mdW5jdGlvbigpe3ZhciBhO3NHJiYiIiE9PWpqKCkmJihhPWpqKCkpO3JldHVybiJodHRwczovLyIrKGE/YSsiLiI6IiIpKyJhbmFseXRpY3MuZ29vZ2xlLmNvbS9nL2NvbGxlY3QifSx6Rz1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9e30sZT17fSxmPXt9O2Qudj0iMiI7ZC50aWQ9YS50YXJnZXQuYmE7aHEoYSwiZ29vZ2xlX29ubyIsITEpJiYhaGooKSYmKGQuX29ubz0xKTtkLmd0bT1NbihhLm1ldGFkYXRhLnNvdXJjZV9jYW5vbmljYWxfaWQpO2QuX3A9UigxMDApP0ZpOlNGKCk7YyYmKGQuZW09Yyk7YS5tZXRhZGF0YS5jcmVhdGVfZ29vZ2xlX2pvaW4mJihkLl9nYXo9MSk7b0coZCxhKTtJbigpJiYoZC5kbWFfY3BzPUduKCkpO2QuZG1hPUhuKCk7a24oKSYmKGQudGNmZD1KbigpKTtMaS5oJiYoZC50YWdfZXhwPUxpLmgpO3ZhciBnPWEuaFtOLmcuc2JdOwpnJiYoZC5nZGlkPWcpO2UuZW49U3RyaW5nKGEuZXZlbnROYW1lKTthLm1ldGFkYXRhLmlzX2ZpcnN0X3Zpc2l0JiYoZS5fZnY9YS5tZXRhZGF0YS5pc19maXJzdF92aXNpdF9jb252ZXJzaW9uPzI6MSk7YS5tZXRhZGF0YS5pc19uZXdfdG9fc2l0ZSYmKGUuX25zaT0xKTthLm1ldGFkYXRhLmlzX3Nlc3Npb25fc3RhcnQmJihlLl9zcz1hLm1ldGFkYXRhLmlzX3Nlc3Npb25fc3RhcnRfY29udmVyc2lvbj8yOjEpO2EubWV0YWRhdGEuaXNfY29udmVyc2lvbiYmKGUuX2M9MSk7YS5tZXRhZGF0YS5pc19leHRlcm5hbF9ldmVudCYmKGUuX2VlPTEpO2lmKGEubWV0YWRhdGEuaXNfZWNvbW1lcmNlKXt2YXIgaD1hLmhbTi5nLlpdfHxWKGEubyxOLmcuWik7aWYoSGEoaCkpZm9yKHZhciBtPTA7bTxoLmxlbmd0aCYmMjAwPm07bSsrKWVbInByIisobSsxKV09aGcoaFttXSl9dmFyIG49YS5oW04uZy5wYl07biYmKGUuZWRpZD1uKTt2YXIgcD1mdW5jdGlvbih0LHUpe2lmKCJvYmplY3QiIT09dHlwZW9mIHV8fAoheUdbdF0pe3ZhciB2PSJlcC4iK3Qsdz0iZXBuLiIrdDt0PUdhKHUpP3c6djt2YXIgeD1HYSh1KT92Onc7ZS5oYXNPd25Qcm9wZXJ0eSh4KSYmZGVsZXRlIGVbeF07ZVt0XT1TdHJpbmcodSl9fSxxPVIoOTQpJiZpcyhhKTtsKGEuaCxmdW5jdGlvbih0LHUpe2lmKHZvaWQgMCE9PXUmJiFjaS5oYXNPd25Qcm9wZXJ0eSh0KSl7bnVsbD09PXUmJih1PSIiKTt2YXIgdjt0IT09Ti5nLk5kP3Y9ITE6YS5tZXRhZGF0YS5ldWlkX21vZGVfZW5hYmxlZHx8cT8oZC5lY2lkPXUsdj0hMCk6dj12b2lkIDA7aWYoIXYmJnQhPT1OLmcudmYpe3ZhciB3PXU7ITA9PT11JiYodz0iMSIpOyExPT09dSYmKHc9IjAiKTt3PVN0cmluZyh3KTt2YXIgeDtpZih0R1t0XSl4PXRHW3RdLGRbeF09dztlbHNlIGlmKHVHW3RdKXg9dUdbdF0sZlt4XT13O2Vsc2UgaWYodkdbdF0peD12R1t0XSxlW3hdPXc7ZWxzZSBpZigiXyI9PT10LmNoYXJBdCgwKSlkW3RdPXc7ZWxzZXt2YXIgeTt3R1t0XT95PSEwOnQhPT1OLmcuVGM/Cnk9ITE6KCJvYmplY3QiIT09dHlwZW9mIHUmJnAodCx1KSx5PSEwKTt5fHxwKHQsdSl9fX19KTsoZnVuY3Rpb24odCl7aXMoYSkmJiJvYmplY3QiPT09dHlwZW9mIHQmJmwodHx8e30sZnVuY3Rpb24odSx2KXsib2JqZWN0IiE9PXR5cGVvZiB2JiYoZFsic3N0LiIrdV09U3RyaW5nKHYpKX0pfSkoYS5oW04uZy52ZV0pO3ZhciByPWEuaFtOLmcuYWJdfHx7fTtSKDYyKSYmITE9PT1WKGEubyxOLmcubGIsdm9pZCAwLDQpJiYoZC5uZ3M9IjEiKTtsKHIsZnVuY3Rpb24odCx1KXt2b2lkIDAhPT11JiYoKG51bGw9PT11JiYodT0iIiksdCE9PU4uZy5SYXx8Zi51aWQpP2JbdF0hPT11JiYoZVsoR2EodSk/InVwbi4iOiJ1cC4iKStTdHJpbmcodCldPVN0cmluZyh1KSxiW3RdPXUpOmYudWlkPVN0cmluZyh1KSl9KTtyZXR1cm4gamcuY2FsbCh0aGlzLHtvYTpkLE9jOmYsdGg6ZX0sckcoYSksaXMoYSkpfHx0aGlzfTtzYSh6RyxqZyk7dmFyIEFHPWZ1bmN0aW9uKGEpe3RoaXMucz1hO3RoaXMuQz0iIjt0aGlzLmg9dGhpcy5zfSxCRz1mdW5jdGlvbihhLGIpe2EuaD1iO3JldHVybiBhfSxDRz1mdW5jdGlvbihhLGIpe2EuRj1iO3JldHVybiBhfTtmdW5jdGlvbiBERyhhKXt2YXIgYj1hLnNlYXJjaDtyZXR1cm4gYS5wcm90b2NvbCsiLy8iK2EuaG9zdG5hbWUrYS5wYXRobmFtZSsoYj9iKyImcmljaHNzdHNzZSI6Ij9yaWNoc3N0c3NlIil9ZnVuY3Rpb24gRUcoYSxiLGMpe2lmKGEpe3ZhciBkPWF8fFtdO2lmKEFycmF5LmlzQXJyYXkoZCkpZm9yKHZhciBlPWxiKGIpP2I6e30sZj1mYShkKSxnPWYubmV4dCgpOyFnLmRvbmU7Zz1mLm5leHQoKSljKGcudmFsdWUsZSl9fTsKdmFyIEZHPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGEucmVwbGFjZSgvXCRceyhbXlx9XSspXH0vZyxmdW5jdGlvbihjLGQpe3JldHVybiBiW2RdfHxjfSl9LEdHPWZ1bmN0aW9uKGEpe3ZhciBiPXt9LGM9IiIsZD1hLnBhdGhuYW1lLmluZGV4T2YoIi9nL2NvbGxlY3QiKTswPD1kJiYoYz1hLnBhdGhuYW1lLnN1YnN0cmluZygwLGQpKTtiLnRyYW5zcG9ydF91cmw9YS5wcm90b2NvbCsiLy8iK2EuaG9zdG5hbWUrYztyZXR1cm4gYn0sSEc9ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9Q0coQkcobmV3IEFHKGZ1bmN0aW9uKGgsbSl7dmFyIG49RkcoaCxjKTtkJiYobj1uLnJlcGxhY2UoIl9pc19zdz0wIixkKSk7dmFyIHA9e307bS5hdHRyaWJ1dGlvbl9yZXBvcnRpbmcmJihwLmF0dHJpYnV0aW9uc3JjPSIiKTtMYyhuLHZvaWQgMCx2b2lkIDAscCl9KSxmdW5jdGlvbihoKXt2YXIgbT1GRyhoLGMpO1NjKG0pfSksZnVuY3Rpb24oaCxtKXt2YXIgbj1GRyhoLGMpLHA9bS5kZWR1cGVfa2V5O3AmJgppdChuLHApfSksZj0wLGc9bmV3IHouWE1MSHR0cFJlcXVlc3Q7Zy53aXRoQ3JlZGVudGlhbHM9ITA7Zy5vbnByb2dyZXNzPWZ1bmN0aW9uKGgpe2lmKDIwMD09PWcuc3RhdHVzKXt2YXIgbT1nLnJlc3BvbnNlVGV4dC5zdWJzdHJpbmcoZik7Zj1oLmxvYWRlZDt2YXIgbjtuPWUuQyttO2Zvcih2YXIgcD1uLmluZGV4T2YoIlxuXG4iKTstMSE9PXA7KXt2YXIgcTthOnt2YXIgcj1mYShuLnN1YnN0cmluZygwLHApLnNwbGl0KCJcbiIpKSx0PXIubmV4dCgpLnZhbHVlLHU9ci5uZXh0KCkudmFsdWU7aWYoMD09PXQuaW5kZXhPZigiZXZlbnQ6IG1lc3NhZ2UiKSYmMD09PXUuaW5kZXhPZigiZGF0YTogIikpdHJ5e3E9SlNPTi5wYXJzZSh1LnN1YnN0cmluZyh1LmluZGV4T2YoIjoiKSsxKSk7YnJlYWsgYX1jYXRjaChFKXt9cT12b2lkIDB9dmFyIHY9ZSx3PXE7aWYodyl7RUcody5zZW5kX3BpeGVsLHcub3B0aW9ucyx2LnMpO0VHKHcuc2VuZF9iZWFjb24sdm9pZCAwLHYuaCk7dmFyIHg9dy5jcmVhdGVfaWZyYW1lLAp5PXcub3B0aW9ucyxCPXYuRjtpZih4JiZCKXt2YXIgQT14fHxbXTtpZihBcnJheS5pc0FycmF5KEEpKWZvcih2YXIgRj1sYih5KT95Ont9LEc9ZmEoQSksRD1HLm5leHQoKTshRC5kb25lO0Q9Ry5uZXh0KCkpQihELnZhbHVlLEYpfX1uPW4uc3Vic3RyaW5nKHArMik7cD1uLmluZGV4T2YoIlxuXG4iKX1lLkM9bn19O2cub3BlbihiPyJQT1NUIjoiR0VUIixhKTtSKDE5KSYmZy5zZXRBdHRyaWJ1dGlvblJlcG9ydGluZyYmZy5zZXRBdHRyaWJ1dGlvblJlcG9ydGluZyh7ZXZlbnRTb3VyY2VFbGlnaWJsZTohMSx0cmlnZ2VyRWxpZ2libGU6ITB9KTtnLnNlbmQoYil9LElHPWZ1bmN0aW9uKGEsYil7dmFyIGM9dmooYSksZD1HRyhjKSxlPURHKGMpO1IoNzYpJiZSKDY3KT9NcyhlLGIsZCxmdW5jdGlvbihmKXtIRyhlLGIsZCxmKX0pOkhHKGUsYixkKX07CnZhciBKRz1mdW5jdGlvbihhLGIpe3JldHVybiBhP1thLGJdLmpvaW4oIiYiKTpifSxNRz1mdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1SKDU0KSYmZDtpZihSKDUzKXx8ZSl7dmFyIGY9YixnPVhjKCk7dm9pZCAwIT09ZyYmKGYrPSImdGZkPSIrTWF0aC5yb3VuZChnKSk7Yj1mfXZhciBoPWErIj8iK2I7S0cmJihkPSEoMD09PWguaW5kZXhPZihxRygpKXx8MD09PWguaW5kZXhPZihwRygpKSkpO2lmKGQmJiFMRilJRyhoLGMpO2Vsc2V7dmFyIG07dmFyIG49YjtSKDUxKSYmImZldGNoImluIHo/Uig1Mik/bT1WYyhhKyI/IitKRyhuLCJfej1mZXRjaCIpLGMpOihMRyhhLEpHKG4sIl96PXNlbmRCZWFjb24iKSxjKSxtPSEwKTptPSExO218fExHKGEsYixjKX19LE5HPWZ1bmN0aW9uKGEsYil7ZnVuY3Rpb24gYyh0KXtuLnB1c2godCsiPSIrZW5jb2RlVVJJQ29tcG9uZW50KCIiK2Eub2FbdF0pKX12YXIgZD1iLnJuLGU9Yi5zbixmPWIuZG0sZz1iLnhtLGg9Yi53bSxtPWIuZm47aWYoZHx8ZSl7dmFyIG49CltdO2Eub2EuX29ubyYmYygiX29ubyIpO2MoInRpZCIpO2MoImNpZCIpO2MoImd0bSIpO24ucHVzaCgiYWlwPTEiKTthLk9jLnVpZCYmIWgmJm4ucHVzaCgidWlkPSIrZW5jb2RlVVJJQ29tcG9uZW50KCIiK2EuT2MudWlkKSk7dmFyIHA9ZnVuY3Rpb24oKXtjKCJkbWEiKTtudWxsIT1hLm9hLmRtYV9jcHMmJmMoImRtYV9jcHMiKTtudWxsIT1hLm9hLmdjcyYmYygiZ2NzIik7YygiZ2NkIik7bnVsbCE9YS5vYS5ucGEmJmMoIm5wYSIpfTtwKCk7ZCYmKExHKCJodHRwczovL3N0YXRzLmcuZG91YmxlY2xpY2submV0L2cvY29sbGVjdCIsInY9MiYiK24uam9pbigiJiIpKSxsbCgiaHR0cHM6Ly9zdGF0cy5nLmRvdWJsZWNsaWNrLm5ldC9nL2NvbGxlY3Q/dj0yJiIrbi5qb2luKCImIikpKTtpZihlKXt2YXIgcT1mdW5jdGlvbigpe3ZhciB0PWp0KCkrIi90ZC9nYS9ydWw/IjtuPVtdO2MoInRpZCIpO24ucHVzaCgiZ2FjaWQ9IitlbmNvZGVVUklDb21wb25lbnQoU3RyaW5nKGEub2EuY2lkKSkpOwpjKCJndG0iKTtwKCk7UigyOSkmJmMoInBzY2RsIik7bi5wdXNoKCJhaXA9MSIpO24ucHVzaCgiZmxlZGdlPTEiKTtuLnB1c2goIno9IitKYSgpKTtpdCh0K24uam9pbigiJiIpLGEub2EudGlkKX07bi5wdXNoKCJ6PSIrSmEoKSk7aWYoIWcpe3ZhciByPWYmJjA9PT1mLmluZGV4T2YoImdvb2dsZS4iKSYmImdvb2dsZS5jb20iIT1mPyJodHRwczovL3d3dy4lL2Fkcy9nYS1hdWRpZW5jZXM/dj0xJnQ9c3Imc2xmX3JkPTEmX3I9NCYiLnJlcGxhY2UoIiUiLGYpOnZvaWQgMDtyJiZMYyhyK24uam9pbigiJiIpKX1SKDYyKSYmbSYmIUxGJiZxKCl9fX0sS0c9ITE7dmFyIE9HPWZ1bmN0aW9uKCl7dGhpcy5GPTE7dGhpcy5NPXt9O3RoaXMuaD0KbmV3IGtnO3RoaXMucz0tMX07T0cucHJvdG90eXBlLkM9ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzLGQ9bmV3IHpHKGEsdGhpcy5NLGIpLGU9TUYoYSk7ZSYmdGhpcy5oLlcoZCl8fHRoaXMuZmx1c2goKTtpZihlJiZ0aGlzLmguYWRkKGQpKXtpZigwPnRoaXMucyl7dmFyIGY9ei5zZXRUaW1lb3V0LGc7aXMoYSk/UEc/KFBHPSExLGc9UUcpOmc9Ukc6Zz01RTM7dGhpcy5zPWYuY2FsbCh6LGZ1bmN0aW9uKCl7cmV0dXJuIGMuZmx1c2goKX0sZyl9fWVsc2V7dmFyIGg9bWcoZCx0aGlzLkYrKyk7TUcoZC5zLGgucGFyYW1zLGguYm9keSxkLkYpO3ZhciBtPWEubWV0YWRhdGEuY3JlYXRlX2RjX2pvaW4sbj1hLm1ldGFkYXRhLmNyZWF0ZV9nb29nbGVfam9pbixwPSExIT09VihhLm8sTi5nLkZhKSxxPXBuKGEubykscj17ZXZlbnRJZDphLm8uZXZlbnRJZCxwcmlvcml0eUlkOmEuby5wcmlvcml0eUlkfSx0PWEuaFtOLmcuUmddLHU9e3JuOm0sc246bixkbTpsaigpLGpvOnAsaW86cSx4bTpoaigpLAp3bTphLm1ldGFkYXRhLmV1aWRfbW9kZV9lbmFibGVkLG5vOnIsZm46dCxvOmEub307TkcoZCx1KX1OdShhLm8uZXZlbnRJZCxhLmV2ZW50TmFtZSl9O09HLnByb3RvdHlwZS5hZGQ9ZnVuY3Rpb24oYSl7YS5tZXRhZGF0YS5ldWlkX21vZGVfZW5hYmxlZCYmIUxGP3RoaXMuVyhhKTp0aGlzLkMoYSl9O09HLnByb3RvdHlwZS5mbHVzaD1mdW5jdGlvbigpe2lmKHRoaXMuaC5ldmVudHMubGVuZ3RoKXt2YXIgYT1uZyh0aGlzLmgsdGhpcy5GKyspO01HKHRoaXMuaC5zLGEucGFyYW1zLGEuYm9keSx0aGlzLmguQyk7dGhpcy5oPW5ldyBrZzswPD10aGlzLnMmJih6LmNsZWFyVGltZW91dCh0aGlzLnMpLHRoaXMucz0tMSl9fTtPRy5wcm90b3R5cGUuVz1mdW5jdGlvbihhKXt2YXIgYj10aGlzLGM9anMoYSk7Yz8kaChjLGZ1bmN0aW9uKGQpe2IuQyhhLDE9PT1kLnNwbGl0KCJ+IikubGVuZ3RoP3ZvaWQgMDpkKX0pOnRoaXMuQyhhKX07dmFyIExHPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1hKyI/IisKYjtjP1RjKGQsYyk6U2MoZCl9LFFHPXdtKCcnLDUwMCksUkc9d20oJycsNUUzKSxQRz0hMDt2YXIgU0c9ZnVuY3Rpb24oYSxiLGMpe3ZvaWQgMD09PWMmJihjPXt9KTtpZigib2JqZWN0Ij09PXR5cGVvZiBiKWZvcih2YXIgZCBpbiBiKVNHKGErIi4iK2QsYltkXSxjKTtlbHNlIGNbYV09YjtyZXR1cm4gY30sVEc9ZnVuY3Rpb24oYSl7aWYoaXMoYSkpe2lmKFIoOTQpKXt2YXIgYj1ocShhLCJjY2RfYWRkXzFwX2RhdGEiLCExKT8xOjA7bHMoYSwidWRlIixiKX12YXIgYz1mdW5jdGlvbihlKXt2YXIgZj1TRyhOLmcuSGEsZSk7bChmLGZ1bmN0aW9uKGcsaCl7YS5oW2ddPWh9KX0sZD1WKGEubyxOLmcuSGEpO3ZvaWQgMCE9PWQ/KGMoZCksUig5NSkmJihhLmhbTi5nLm1lXT0iYyIpKTpjKGEubWV0YWRhdGEudXNlcl9kYXRhKTthLm1ldGFkYXRhLnVzZXJfZGF0YT12b2lkIDB9fTt2YXIgVUc9d2luZG93LFZHPWRvY3VtZW50LFdHPWZ1bmN0aW9uKGEpe3ZhciBiPVVHLl9nYVVzZXJQcmVmcztpZihiJiZiLmlvbyYmYi5pb28oKXx8VkcuZG9jdW1lbnRFbGVtZW50Lmhhc0F0dHJpYnV0ZSgiZGF0YS1nb29nbGUtYW5hbHl0aWNzLW9wdC1vdXQiKXx8YSYmITA9PT1VR1siZ2EtZGlzYWJsZS0iK2FdKXJldHVybiEwO3RyeXt2YXIgYz1VRy5leHRlcm5hbDtpZihjJiZjLl9nYVVzZXJQcmVmcyYmIm9vIj09Yy5fZ2FVc2VyUHJlZnMpcmV0dXJuITB9Y2F0Y2goZil7fWZvcih2YXIgZD1ObigiQU1QX1RPS0VOIixTdHJpbmcoVkcuY29va2llKSwhMCksZT0wO2U8ZC5sZW5ndGg7ZSsrKWlmKCIkT1BUX09VVCI9PWRbZV0pcmV0dXJuITA7cmV0dXJuIFZHLmdldEVsZW1lbnRCeUlkKCJfX2dhT3B0T3V0RXh0ZW5zaW9uIik/ITA6ITF9Owp2YXIgWUc9ZnVuY3Rpb24oYSl7cmV0dXJuIWF8fFhHLnRlc3QoYSl8fGVpLmhhc093blByb3BlcnR5KGEpfSxaRz1mdW5jdGlvbihhKXt2YXIgYj1OLmcuSGIsYztjfHwoYz1mdW5jdGlvbigpe30pO3ZvaWQgMCE9PWEuaFtiXSYmKGEuaFtiXT1jKGEuaFtiXSkpfSwkRz1mdW5jdGlvbihhKXt2YXIgYj1hLmluZGV4T2YoIj8iKSxjPS0xPT09Yj9hOmEuc3Vic3RyaW5nKDAsYik7dHJ5e2M9ZGVjb2RlVVJJQ29tcG9uZW50KGMpfWNhdGNoKGQpe31yZXR1cm4tMT09PWI/YzoiIitjK2Euc3Vic3RyaW5nKGIpfSxhSD1mdW5jdGlvbihhLGIsYyl7dGwoYyl8fHZsKGZ1bmN0aW9uKCl7Yi5tZXRhZGF0YS5pc19jb25zZW50X3VwZGF0ZT0hMDt2YXIgZD1taVtjfHwiIl07ZCYmbHMoYiwiZ2N1dCIsZCk7YS5FaihiKX0sYyl9LGJ0PXtObDoiIixBbjpOdW1iZXIoIiIpfSxiSD17fSxjSD0KKGJIW04uZy5QY109MSxiSFtOLmcuUWNdPTEsYkhbTi5nLlJjXT0xLGJIW04uZy5TY109MSxiSFtOLmcuVWNdPTEsYkhbTi5nLlZjXT0xLGJIKSxYRz0vXihffGdhX3xnb29nbGVffGd0YWdcLnxmaXJlYmFzZV8pLiokLyxkSD1mdW5jdGlvbihhKXt0aGlzLkVhPWE7dGhpcy5ZYj1uZXcgT0c7dGhpcy5oPXZvaWQgMDt0aGlzLkY9bmV3IE9GO3RoaXMucz10aGlzLkM9dm9pZCAwO3RoaXMuWmI9dGhpcy5XPSExO3RoaXMubmQ9MDt0aGlzLk09ITF9O2FhPWRILnByb3RvdHlwZTthYS5ibj1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9dGhpcyxlPUNsKHRoaXMuRWEpO2lmKGUpaWYoYy5ldmVudE1ldGFkYXRhLmlzX2V4dGVybmFsX2V2ZW50JiYiXyI9PT1hLmNoYXJBdCgwKSljLm9uRmFpbHVyZSgpO2Vsc2V7YSE9PU4uZy5kYSYmYSE9PU4uZy5TYSYmWUcoYSkmJk0oNTgpO2VIKGMuaCk7dmFyIGY9bmV3IGdxKGUsYSxjKTtmLm1ldGFkYXRhLmV2ZW50X3N0YXJ0X3RpbWVzdGFtcF9tcz1iO3ZhciBnPQpbTi5nLlJdLGg9aHEoZixOLmcuU2IsVihmLm8sTi5nLlNiKSk7KGh8fGlzKGYpKSYmZy5wdXNoKE4uZy5KKTsoUig0NCkmJmh8fFIoOSkmJmlzKGYpKSYmZy5wdXNoKE4uZy5OKTtjdChmdW5jdGlvbigpe3dsKGZ1bmN0aW9uKCl7ZC5kbihmKX0sZyl9KX1lbHNlIGMub25GYWlsdXJlKCl9O2FhLmRuPWZ1bmN0aW9uKGEpe3RoaXMucz1hO3RyeXtpZihXRyhhLnRhcmdldC5iYSkpTSgyOCksYS5pc0Fib3J0ZWQ9ITA7ZWxzZSBpZihSKDg4KSl7dmFyIGI7dmFyIGM9WWooWmooKSksZD1jJiZjLnBhcmVudDtiPWQ/WWooZCk6dm9pZCAwO2lmKGImJkhhKGIuZGVzdGluYXRpb25zKSlmb3IodmFyIGU9MDtlPGIuZGVzdGluYXRpb25zLmxlbmd0aDtlKyspaWYoV0coYi5kZXN0aW5hdGlvbnNbZV0pKXtNKDEyNSk7YS5pc0Fib3J0ZWQ9ITA7YnJlYWt9fWlmKDA8PWJ0Lk5sLnJlcGxhY2UoL1xzKy9nLCIiKS5zcGxpdCgiLCIpLmluZGV4T2YoYS5ldmVudE5hbWUpKWEuaXNBYm9ydGVkPSEwO2Vsc2V7dmFyIGY9CmtzKGEpO2YmJmYuYmxhY2tsaXN0ZWQmJihhLmlzQWJvcnRlZD0hMCl9dmFyIGc9Qy5sb2NhdGlvbi5wcm90b2NvbDsiaHR0cDoiIT1nJiYiaHR0cHM6IiE9ZyYmKE0oMjkpLGEuaXNBYm9ydGVkPSEwKTtCYyYmInByZXZpZXciPT1CYy5sb2FkUHVycG9zZSYmKE0oMzApLGEuaXNBYm9ydGVkPSEwKTtSKDgyKSYmKGEuaXNBYm9ydGVkPSEwKTtKcShhKTt2YXIgaD1zaS5ncmw7aHx8KGg9bkcoKSxzaS5ncmw9aCk7aCgpfHwoTSgzNSksYS5pc0Fib3J0ZWQ9ITApO2lmKGEuaXNBYm9ydGVkKXthLm8ub25GYWlsdXJlKCk7UUYoKTtyZXR1cm59dmFyIG09e3ByZWZpeDpTdHJpbmcoVihhLm8sTi5nLk9hLCIiKSkscGF0aDpTdHJpbmcoVihhLm8sTi5nLlJiLCIvIikpLGZsYWdzOlN0cmluZyhWKGEubyxOLmcuWWEsIiIpKSxkb21haW46U3RyaW5nKFYoYS5vLE4uZy5VYSwiYXV0byIpKSxIYzpOdW1iZXIoVihhLm8sTi5nLlZhLDYzMDcyRTMpKX07YS5tZXRhZGF0YS5jb29raWVfb3B0aW9ucz0KbTtmSChhKTt0aGlzLlprKGEpO3RoaXMuRi55bihhKTthLm1ldGFkYXRhLmlzX21lcmNoYW50X2NlbnRlcj9hLm1ldGFkYXRhLmV1aWRfbW9kZV9lbmFibGVkPSExOmhxKGEsImNjZF9hZGRfMXBfZGF0YSIsITEpJiYoYS5tZXRhZGF0YS5ldWlkX21vZGVfZW5hYmxlZD0hMCk7aWYoYS5tZXRhZGF0YS5ldWlkX21vZGVfZW5hYmxlZCYmaHEoYSwiY2NkX2FkZF8xcF9kYXRhIiwhMSkpe3ZhciBuPWEuby5zW04uZy5uZV07aWYoJGkobikpe3ZhciBwPVYoYS5vLE4uZy5IYSk7bnVsbD09PXA/YS5tZXRhZGF0YS51c2VyX2RhdGFfZnJvbV9jb2RlPW51bGw6KG4uZW5hYmxlX2NvZGUmJmxiKHApJiYoYS5tZXRhZGF0YS51c2VyX2RhdGFfZnJvbV9jb2RlPXApLGxiKG4uc2VsZWN0b3JzKSYmIWEubWV0YWRhdGEudXNlcl9kYXRhX2Zyb21fbWFudWFsJiYoYS5tZXRhZGF0YS51c2VyX2RhdGFfZnJvbV9tYW51YWw9Wmkobi5zZWxlY3RvcnMpKSl9fXZhciBxPXRoaXMuYmsscjtWKGEubyxOLmcuWmEpJiYKKHRsKE4uZy5SKXx8VihhLm8sTi5nLm5iKXx8KGEuaFtOLmcub2pdPSEwKSk7dmFyIHQ7dmFyIHU7dT12b2lkIDA9PT11PzM6dTt2YXIgdj16LmxvY2F0aW9uLmhyZWY7aWYodil7dmFyIHc9dmoodikuc2VhcmNoLnJlcGxhY2UoIj8iLCIiKSx4PW9qKHcsIl9nbCIsITEsITApfHwiIjt0PXg/dm9pZCAwIT09QW8oeCx1KTohMX1lbHNlIHQ9ITE7dCYmaXMoYSkmJmxzKGEsImdsdiIsMSk7aWYoYS5ldmVudE5hbWUhPT1OLmcuZGEpcj17fTtlbHNle1YoYS5vLE4uZy5aYSkmJkdwKFsiYXciLCJkYyJdKTtJcChbImF3IiwiZGMiXSk7dmFyIHk9a0coYSksQj1tRyhhKTtyPU9iamVjdC5rZXlzKHkpLmxlbmd0aD95OkJ9cS5jYWxsKHRoaXMscik7dmFyIEE9YS5ldmVudE5hbWU9PT1OLmcuZGE7QSYmKHRoaXMuTT0hMCk7YS5ldmVudE5hbWU9PU4uZy5kYSYmKFYoYS5vLE4uZy5RYSwhMCk/KGEuby5oW04uZy5mYV0mJihhLm8uQ1tOLmcuZmFdPWEuby5oW04uZy5mYV0sYS5vLmhbTi5nLmZhXT0Kdm9pZCAwLGEuaFtOLmcuZmFdPXZvaWQgMCksYS5ldmVudE5hbWU9Ti5nLnNjKTphLmlzQWJvcnRlZD0hMCk7QSYmIWEuaXNBYm9ydGVkJiYwPHRoaXMubmQrKyYmUEYoMTcpO3ZhciBGPWJiKFVsKGEubyxOLmcuZmEsMSksIi4iKTtGJiYoYS5oW04uZy5zYl09Rik7dmFyIEc9YmIoVWwoYS5vLE4uZy5mYSwyKSwiLiIpO0cmJihhLmhbTi5nLnBiXT1HKTt2YXIgRD10aGlzLkMsRT10aGlzLkYsTz0hdGhpcy5aYixQPXRoaXMuaCxUPVYoYS5vLE4uZy5uYik7aWYoVihhLm8sTi5nLkViKSYmVihhLm8sTi5nLlRiKSlUP1VGKGEsVCwxKTooTSgxMjcpLGEuaXNBYm9ydGVkPSEwKTtlbHNle3ZhciBZPVQ/MTo4O2EubWV0YWRhdGEuaXNfbmV3X3RvX3NpdGU9ITE7VHx8KFQ9VkYoYSksWT0zKTtUfHwoVD1QLFk9NSk7aWYoIVQpe3ZhciBTPXRsKE4uZy5SKSxVPVJGKCk7VD0hVS5mcm9tX2Nvb2tpZXx8Uz9VLnZpZDp2b2lkIDA7WT02fVQ/VD0iIitUOihUPWdvKCksWT03LGEubWV0YWRhdGEuaXNfZmlyc3RfdmlzaXQ9CmEubWV0YWRhdGEuaXNfbmV3X3RvX3NpdGU9ITApO1VGKGEsVCxZKX12YXIgamE9TWF0aC5mbG9vcihhLm1ldGFkYXRhLmV2ZW50X3N0YXJ0X3RpbWVzdGFtcF9tcy8xRTMpLGhhPXZvaWQgMDthLm1ldGFkYXRhLmlzX25ld190b19zaXRlfHwoaGE9ZUcoYSl8fEQpO3ZhciBjYT1OYShWKGEubyxOLmcua2QsMzApKTtjYT1NYXRoLm1pbig0NzUsY2EpO2NhPU1hdGgubWF4KDUsY2EpO3ZhciBGYT1OYShWKGEubyxOLmcuQWYsMUU0KSksbWE9WkYoaGEpO2EubWV0YWRhdGEuaXNfZmlyc3RfdmlzaXQ9ITE7YS5tZXRhZGF0YS5pc19zZXNzaW9uX3N0YXJ0PSExO2EubWV0YWRhdGEuam9pbl90aW1lcl9zZWM9MDttYSYmbWEuSmgmJihhLm1ldGFkYXRhLmpvaW5fdGltZXJfc2VjPU1hdGgubWF4KDAsbWEuSmgtTWF0aC5tYXgoMCxqYS1tYS5UZSkpKTt2YXIgQWE9ITE7bWF8fChBYT1hLm1ldGFkYXRhLmlzX2ZpcnN0X3Zpc2l0PSEwLG1hPXtzZXNzaW9uSWQ6U3RyaW5nKGphKSxOYzoxLHhkOiExLApUZTpqYSxHYzohMSxEZTp2b2lkIDB9KTtqYT5tYS5UZSs2MCpjYSYmKEFhPSEwLG1hLnNlc3Npb25JZD1TdHJpbmcoamEpLG1hLk5jKyssbWEueGQ9ITEsbWEuRGU9dm9pZCAwKTtpZihBYSlhLm1ldGFkYXRhLmlzX3Nlc3Npb25fc3RhcnQ9ITAsRS5rbShhKTtlbHNlIGlmKEUuWmwoKT5GYXx8YS5ldmVudE5hbWU9PU4uZy5zYyltYS54ZD0hMDthLm1ldGFkYXRhLmV1aWRfbW9kZV9lbmFibGVkP1YoYS5vLE4uZy5SYSk/bWEuR2M9ITA6KG1hLkdjJiYobWEuRGU9dm9pZCAwKSxtYS5HYz0hMSk6bWEuR2M9ITE7dmFyIFBhPW1hLkRlLG1iPVIoOTQpJiZpcyhhKTtpZihhLm1ldGFkYXRhLmV1aWRfbW9kZV9lbmFibGVkfHxtYil7dmFyIHhjPVYoYS5vLE4uZy5OZCksQmQ9eGM/MTo4O3hjfHwoeGM9UGEsQmQ9NCk7eGN8fCh4Yz1mbygpLEJkPTcpO3ZhciBsaD14Yy50b1N0cmluZygpLEp3PUJkLEt3PWEubWV0YWRhdGEuZW5oYW5jZWRfY2xpZW50X2lkX3NvdXJjZTtpZih2b2lkIDA9PT0KS3d8fEp3PD1LdylhLmhbTi5nLk5kXT1saCxhLm1ldGFkYXRhLmVuaGFuY2VkX2NsaWVudF9pZF9zb3VyY2U9Snd9Tz8oYS5jb3B5VG9IaXREYXRhKE4uZy51YixtYS5zZXNzaW9uSWQpLGEuY29weVRvSGl0RGF0YShOLmcuYmUsbWEuTmMpLGEuY29weVRvSGl0RGF0YShOLmcuYWUsbWEueGQ/MTowKSk6KGEuaFtOLmcudWJdPW1hLnNlc3Npb25JZCxhLmhbTi5nLmJlXT1tYS5OYyxhLmhbTi5nLmFlXT1tYS54ZD8xOjApO2EubWV0YWRhdGFbTi5nLnZmXT1tYS5HYz8xOjA7Z0goYSk7aWYoIVYoYS5vLE4uZy5UYil8fCFWKGEubyxOLmcuRWIpKXt2YXIgTHc9IiIsbWg9Qy5sb2NhdGlvbjtpZihtaCl7dmFyIHdqPW1oLnBhdGhuYW1lfHwiIjsiLyIhPXdqLmNoYXJBdCgwKSYmKHdqPSIvIit3aik7THc9bWgucHJvdG9jb2wrIi8vIittaC5ob3N0bmFtZSt3aittaC5zZWFyY2h9YS5jb3B5VG9IaXREYXRhKE4uZy5yYSxMdywkRyk7dmFyIG9KPWEuY29weVRvSGl0RGF0YSxwSj1OLmcuR2EsCnhqO2E6e3ZhciBNdz1RbigiX29wdF9leHBpZCIsdm9pZCAwLHZvaWQgMCxOLmcuUilbMF07aWYoTXcpe3ZhciBOdz1kZWNvZGVVUklDb21wb25lbnQoTXcpLnNwbGl0KCIkIik7aWYoMz09PU53Lmxlbmd0aCl7eGo9TndbMl07YnJlYWsgYX19aWYodm9pZCAwIT09c2kuZ2E0X3JlZmVycmVyX292ZXJyaWRlKXhqPXNpLmdhNF9yZWZlcnJlcl9vdmVycmlkZTtlbHNle3ZhciBPdz1TaSgiZ3RtLmd0YWdSZWZlcnJlci4iK2EudGFyZ2V0LmJhKSxxSj1DLnJlZmVycmVyO3hqPU93PyIiK093OnFKfX1vSi5jYWxsKGEscEoseGp8fHZvaWQgMCwkRyk7YS5jb3B5VG9IaXREYXRhKE4uZy5HYixDLnRpdGxlKTthLmNvcHlUb0hpdERhdGEoTi5nLlBhLChCYy5sYW5ndWFnZXx8IiIpLnRvTG93ZXJDYXNlKCkpO3ZhciBQdz1tcigpO2EuY29weVRvSGl0RGF0YShOLmcuSGIsUHcud2lkdGgrIngiK1B3LmhlaWdodCk7Uig4OSkmJmEuY29weVRvSGl0RGF0YShOLmcuZ2Qsdm9pZCAwLCRHKTtSKDU2KSYmCm1xKCkmJmEuY29weVRvSGl0RGF0YShOLmcuZWQsIjEiKX1hLm1ldGFkYXRhLmNyZWF0ZV9kY19qb2luPSExO2EubWV0YWRhdGEuY3JlYXRlX2dvb2dsZV9qb2luPSExO2lmKCEoTGkuc3x8Uig3KSYmaXMoYSl8fGEubWV0YWRhdGEuaXNfbWVyY2hhbnRfY2VudGVyfHwhMT09PVYoYS5vLE4uZy5sYikpJiZwRSgpJiZ0bChOLmcuSikpe3ZhciBRdz1ocyhhKTsoYS5tZXRhZGF0YS5pc19zZXNzaW9uX3N0YXJ0fHxWKGEubyxOLmcuR2cpKSYmKGEubWV0YWRhdGEuY3JlYXRlX2RjX2pvaW49ISFRdyk7dmFyIFJ3O1J3PWEubWV0YWRhdGEuam9pbl90aW1lcl9zZWM7UXcmJjA9PT0oUnd8fDApJiYoYS5tZXRhZGF0YS5qb2luX3RpbWVyX3NlYz02MCxhLm1ldGFkYXRhLmNyZWF0ZV9nb29nbGVfam9pbj0hMCl9aEgoYSk7Z2kuaGFzT3duUHJvcGVydHkoYS5ldmVudE5hbWUpJiYoYS5tZXRhZGF0YS5pc19lY29tbWVyY2U9ITAsYS5jb3B5VG9IaXREYXRhKE4uZy5aKSxhLmNvcHlUb0hpdERhdGEoTi5nLkFhKSk7CmEuY29weVRvSGl0RGF0YShOLmcuQ2YpO2Zvcih2YXIgU3c9VihhLm8sTi5nLnhmKXx8W10sd249MDt3bjxTdy5sZW5ndGg7d24rKyl7dmFyIFR3PVN3W3duXTtpZihUdy5ydWxlX3Jlc3VsdCl7YS5jb3B5VG9IaXREYXRhKE4uZy5DZixUdy50cmFmZmljX3R5cGUpO1BGKDMpO2JyZWFrfX1pZighYS5tZXRhZGF0YS5pc19tZXJjaGFudF9jZW50ZXImJkhqKGEubykpe3ZhciBVdz1nRyhhKXx8e30sc0o9KEpvKFV3W04uZy5VYl0sISFVd1tOLmcuWF0pP3pvKCEwKS5fZnBsYzp2b2lkIDApfHwoMDxRbigiRlBMQyIsdm9pZCAwLHZvaWQgMCxOLmcuUikubGVuZ3RoP3ZvaWQgMDoiMCIpO2EuaC5fZnBsYz1zSn1pZih2b2lkIDAhPT1WKGEubyxOLmcuZGQpKWEuY29weVRvSGl0RGF0YShOLmcuZGQpO2Vsc2V7dmFyIFZ3PVYoYS5vLE4uZy55ZikseG4seWo7YTp7aWYoakcpe3ZhciB5bj1nRyhhKXx8e307aWYoeW4mJnluW04uZy5YXSlmb3IodmFyIFd3PXJqKHZqKGEuaFtOLmcuR2FdKSwiaG9zdCIsCiEwKSx6aj15bltOLmcuWF0sbmg9MDtuaDx6ai5sZW5ndGg7bmgrKylpZih6altuaF1pbnN0YW5jZW9mIFJlZ0V4cCl7aWYoempbbmhdLnRlc3QoV3cpKXt5aj0hMDticmVhayBhfX1lbHNlIGlmKDA8PVd3LmluZGV4T2YoempbbmhdKSl7eWo9ITA7YnJlYWsgYX19eWo9ITF9aWYoISh4bj15aikpe3ZhciBBajtpZihBaj1WdylhOntmb3IodmFyIFh3PVZ3LmluY2x1ZGVfY29uZGl0aW9uc3x8W10sdEo9cmoodmooYS5oW04uZy5HYV0pLCJob3N0IiwhMCksem49MDt6bjxYdy5sZW5ndGg7em4rKylpZihYd1t6bl0udGVzdCh0Sikpe0FqPSEwO2JyZWFrIGF9QWo9ITF9eG49QWp9eG4mJihhLmhbTi5nLmRkXT0iMSIsUEYoNCkpfWlzKGEpJiYobHMoYSwidWMiLGZqKCkpLGZsKCkmJmxzKGEsInJuZCIsaXEoKSkpO2lmKFIoNTkpJiZpcyhhKSl7aHEoYSxOLmcuU2IsITEpJiZscyhhLCJnc2UiLDEpOyExPT09VihhLm8sTi5nLmxiLHZvaWQgMCw0KSYmbHMoYSwibmdzIiwxKTtoaigpJiZscyhhLCJnYV9yZCIsMSk7cEUoKXx8bHMoYSwibmdzdCIsMSk7dmFyIFl3PWxqKCk7WXcmJmxzKGEsImV0bGQiLFl3KX1pZihpcyhhKSl7dmFyIFp3PXNHP2pqKCk6IiI7WncmJmxzKGEsImdjc3ViIixadyl9aXMoYSkmJihscyhhLCJnY2QiLHZuKGEubykpLGZsKCkmJlYoYS5vLE4uZy5hYSkmJmxzKGEsImFkciIsMSkpO2lmKGlzKGEpKXt2YXIgJHc9QnEoKTskdyYmbHMoYSwidXNfcHJpdmFjeSIsJHcpO3ZhciBheD1obigpO2F4JiZscyhhLCJnZHByIixheCk7dmFyIGJ4PWZuKCk7YngmJmxzKGEsImdkcHJfY29uc2VudCIsYngpfVIoNzgpJiZpcyhhKSYmKGEuaFtOLmcuZmpdPWdqKCl8fGZqKCkpOwppZihpcyhhKSYmUig1NCkpe3ZhciBjeD1GaTtjeCYmbHMoYSwidGZ0IixOdW1iZXIoY3gpKX1SKDY3KSYmUig3NikmJmxzKGEsInN3X2V4cCIsMSk7Uig3OSkmJmlzKGEpJiYoYS5tZXRhZGF0YS5zcGVjdWxhdGl2ZSYmbHMoYSwic3AiLDEpLGEubWV0YWRhdGEuaXNfc3luJiZscyhhLCJzeW4iLDEpLGEubWV0YWRhdGEuZW1fZXZlbnQmJihscyhhLCJlbV9ldmVudCIsMSksbHMoYSwic3AiLDEpKSk7Uig5NikmJmlzKGEpJiYhMSE9PVYoYS5vLE4uZy5GYSkmJmZ0KCJqb2luLWFkLWludGVyZXN0LWdyb3VwIikmJkVhKEJjLmpvaW5BZEludGVyZXN0R3JvdXApJiZscyhhLCJmbGciLDEpO2lmKCFZcyh6KSlNKDg3KTtlbHNlIGlmKHZvaWQgMCE9PSRzKXtNKDg1KTt2YXIgZHg9V3MoKTtkeD9WKGEubyxOLmcuWmQpJiYhaXMoYSl8fGR0KGR4LGEpOk0oODYpfXZhciBBbj1mdChldCgpKTtBbnx8aUh8fChpSD0hMCxLbSgnQXltcXdSQzd1ODhZNEpQdmZJRjJGMzdRS3lsQzA0MjQ4aExDZEpBc2g4eGdPZmUvZFZKUFYzWFMzd0xGY2ExWk1WT3RuQmZWamFDTVRWdWRXTS8vNWc0QUFBQjdleUp2Y21sbmFXNGlPaUpvZEhSd2N6b3ZMM2QzZHk1bmIyOW5iR1YwWVdkdFlXNWhaMlZ5TG1OdmJUbzBORE1pTENKbVpXRjBkWEpsSWpvaVVISnBkbUZqZVZOaGJtUmliM2hCWkhOQlVFbHpJaXdpWlhod2FYSjVJam94TmprMU1UWTNPVGs1TENKcGMxUm9hWEprVUdGeWRIa2lPblJ5ZFdWOScpLApBbj1mdChldCgpKSk7QW4mJihhLmhbTi5nLlFiXT0iMSIpO2lmKCExIT09VihhLm8sTi5nLkZhKSYmcG4oYS5vKSl7dmFyIHVKPWhzKGEpLHZKPVYoYS5vLE4uZy5sYik7aWYodUomJiExIT09dkomJnBFKCkmJnRsKE4uZy5KKSl7dmFyIEJuO2lmKCEoQm49IVIoNDQpKSl7dmFyIGZ4PU4uZy53aTtCbj1xaVtmeF0mJmJsKE4uZy5OKT8hMSE9PWRsKClbZnhdOiExfUJuJiZmdCgiam9pbi1hZC1pbnRlcmVzdC1ncm91cCIpJiZFYShCYy5qb2luQWRJbnRlcmVzdEdyb3VwKSYmKGEuaFtOLmcuUmddPSEwKX19UigyOSkmJktxKGEpO2lmKGEuZXZlbnROYW1lPT1OLmcuU2Epe3ZhciBneD1WKGEubyxOLmcucmIpLHdKPVYoYS5vLE4uZy5EYiksaHg9dm9pZCAwO2h4PWEuaFtneF07d0ooaHh8fFYoYS5vLGd4KSk7YS5pc0Fib3J0ZWQ9ITB9YS5jb3B5VG9IaXREYXRhKE4uZy5SYSk7YS5jb3B5VG9IaXREYXRhKE4uZy5hYik7Z3IoYSk7VEcoYSk7Uig3OSkmJmlzKGEpJiYoYS5tZXRhZGF0YS5zcGVjdWxhdGl2ZT0KITEpO3ZhciBpeD1WKGEubyxOLmcuRWIpO2l4JiZQRigxMik7YS5tZXRhZGF0YS5lbV9ldmVudCYmUEYoMTQpO3ZhciBvaD1ZaihaaigpKTsoaXh8fGxrKG9oKXx8b2gmJm9oLnBhcmVudCYmb2guY29udGV4dCYmNT09PW9oLmNvbnRleHQuc291cmNlKSYmUEYoMTkpOyF0aGlzLk0mJmEubWV0YWRhdGEuZW1fZXZlbnQmJlBGKDE4KTt2YXIgQ249YS5tZXRhZGF0YS5ldmVudF91c2FnZTtpZihIYShDbikpZm9yKHZhciBEbj0wO0RuPENuLmxlbmd0aDtEbisrKVBGKENuW0RuXSk7dmFyIGp4PUJiKCJHQTRfRVZFTlQiKTtqeCYmKGEuaC5fZXU9angpO2lmKGEubWV0YWRhdGEuc3BlY3VsYXRpdmV8fGEuaXNBYm9ydGVkKXthLm8ub25GYWlsdXJlKCk7UUYoKTtyZXR1cm59dmFyIHhKPXRoaXMuYmssa3gseUo9dGhpcy5oLEVuO2E6e3ZhciBGbj1mRyhhKTtpZihGbil7aWYoZEcoRm4sYSkpe0VuPUZuO2JyZWFrIGF9TSgyNSk7YS5pc0Fib3J0ZWQ9ITB9RW49dm9pZCAwfXZhciB6Sj1FbjtreD0Ke2NsaWVudElkOllGKGEseUopLGVnOnpKfTt4Si5jYWxsKHRoaXMsa3gpO3RoaXMuWmI9ITA7dGhpcy53bihhKTtpZihSKDc1KSYmdGwoTi5nLlIpJiYoaXMoYSkmJlIoNzYpJiYoUig2Nyl8fFIoNjYpKSYmKGEubWV0YWRhdGEuaXNfc2d0bV9zZXJ2aWNlX3dvcmtlcj0hMCksUig2NykpKWE6e31pZihpcyhhKSl7dmFyIEJKPWEubWV0YWRhdGEuaXNfY29udmVyc2lvbjtpZigicGFnZV92aWV3Ij09PWEuZXZlbnROYW1lfHxCSilhSCh0aGlzLGEsTi5nLkopLFIoOSkmJmFIKHRoaXMsYSxOLmcuTil9dGhpcy5GLlpoKCk7CmEuY29weVRvSGl0RGF0YShOLmcuSGcpO1YoYS5vLE4uZy5aZCkmJihhLmhbTi5nLlpkXT0hMCxpcyhhKXx8WkcoYSkpO2lmKGEuaXNBYm9ydGVkKXthLm8ub25GYWlsdXJlKCk7UUYoKTtyZXR1cm59dGhpcy5FaihhKTthLm8ub25TdWNjZXNzKCl9Y2F0Y2goZEspe2Euby5vbkZhaWx1cmUoKX1RRigpfTthYS5Faj1mdW5jdGlvbihhKXt0aGlzLlliLmFkZChhKX07YWEuYms9ZnVuY3Rpb24oYSl7dmFyIGI9YS5jbGllbnRJZCxjPWEuZWc7YiYmYyYmKHRoaXMuaD1iLHRoaXMuQz1jKX07YWEuZmx1c2g9ZnVuY3Rpb24oKXt0aGlzLlliLmZsdXNoKCl9O2FhLnduPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXM7aWYoIXRoaXMuVyl7dmFyIGM9dGwoTi5nLlIpO3VsKFtOLmcuUl0sZnVuY3Rpb24oKXt2YXIgZD10bChOLmcuUik7aWYoY15kJiZiLnMmJmIuQyYmYi5oKXt2YXIgZT1iLmg7aWYoZCl7dmFyIGY9VkYoYi5zKTtpZihmKXtiLmg9Zjt2YXIgZz1lRyhiLnMpO2cmJihiLkM9YUcoZyxiLkMsCmIucykpfWVsc2UgWEYoYi5oLGIucyksVEYoYi5oLCEwKTtkRyhiLkMsYi5zKTt2YXIgaD17fTtoW04uZy5HZ109ZTt2YXIgbT1seChiLkVhLE4uZy5DZCxoKTtveChtLGEuby5ldmVudElkLHt9KX1lbHNlIGIuQz12b2lkIDAsYi5oPXZvaWQgMCx6LmdhR2xvYmFsPXt9O2M9ZH19KTt0aGlzLlc9ITB9fTthYS5aaz1mdW5jdGlvbihhKXthLmV2ZW50TmFtZSE9PU4uZy5TYSYmdGhpcy5GLllrKGEpfTt2YXIgZkg9ZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYihjLGQpe2NpW2NdfHx2b2lkIDA9PT1kfHwoYS5oW2NdPWQpfWwoYS5vLkMsYik7bChhLm8uaCxiKX0sZ0g9ZnVuY3Rpb24oYSl7dmFyIGI9VmwoYS5vKSxjPWZ1bmN0aW9uKGQsZSl7Y0hbZF0mJihhLmhbZF09ZSl9O2xiKGJbTi5nLlRjXSk/bChiW04uZy5UY10sZnVuY3Rpb24oZCxlKXtjKChOLmcuVGMrIl8iK2QpLnRvTG93ZXJDYXNlKCksZSl9KTpsKGIsYyl9LGhIPWZ1bmN0aW9uKGEpe3ZhciBiPWZ1bmN0aW9uKGMpe3JldHVybiEhYyYmCmMuY29udmVyc2lvbn07YS5tZXRhZGF0YS5pc19jb252ZXJzaW9uPWIoa3MoYSkpO2EubWV0YWRhdGEuaXNfZmlyc3RfdmlzaXQmJihhLm1ldGFkYXRhLmlzX2ZpcnN0X3Zpc2l0X2NvbnZlcnNpb249YihrcyhhLCJmaXJzdF92aXNpdCIpKSk7YS5tZXRhZGF0YS5pc19zZXNzaW9uX3N0YXJ0JiYoYS5tZXRhZGF0YS5pc19zZXNzaW9uX3N0YXJ0X2NvbnZlcnNpb249YihrcyhhLCJzZXNzaW9uX3N0YXJ0IikpKX0saUg9ITE7ZnVuY3Rpb24gZUgoYSl7bChhLGZ1bmN0aW9uKGMpeyJfIj09PWMuY2hhckF0KDApJiZkZWxldGUgYVtjXX0pO3ZhciBiPWFbTi5nLmFiXXx8e307bChiLGZ1bmN0aW9uKGMpeyJfIj09PWMuY2hhckF0KDApJiZkZWxldGUgYltjXX0pfTt2YXIgakg9ZnVuY3Rpb24oYSl7aWYoUig0KSYmInByZXJlbmRlcmluZyJpbiBDP0MucHJlcmVuZGVyaW5nOiJwcmVyZW5kZXIiPT09Qy52aXNpYmlsaXR5U3RhdGUpcmV0dXJuITE7YSgpO3JldHVybiEwfSxrSD1mdW5jdGlvbihhKXtpZighakgoYSkpe3ZhciBiPSExLGM9ZnVuY3Rpb24oKXshYiYmakgoYSkmJihiPSEwLE5jKEMsInZpc2liaWxpdHljaGFuZ2UiLGMpLFIoNCkmJk5jKEMsInByZXJlbmRlcmluZ2NoYW5nZSIsYyksTSg1NSkpfTtNYyhDLCJ2aXNpYmlsaXR5Y2hhbmdlIixjKTtSKDQpJiZNYyhDLCJwcmVyZW5kZXJpbmdjaGFuZ2UiLGMpO00oNTQpfX07dmFyIG1IPWZ1bmN0aW9uKGEsYil7a0goZnVuY3Rpb24oKXt2YXIgYz1DbChhKTtpZihjKXt2YXIgZD1sSChjLGIpO2xtKGEsZCl9fSk7fTtmdW5jdGlvbiBsSChhLGIpe3ZhciBjPWZ1bmN0aW9uKCl7fTt2YXIgZD1uZXcgZEgoYS5pZCksZT0iTUMiPT09YS5wcmVmaXg7Yz1mdW5jdGlvbihmLGcsaCxtKXtlJiYobS5ldmVudE1ldGFkYXRhLmlzX21lcmNoYW50X2NlbnRlcj0hMCk7ZC5ibihnLGgsbSl9O1BqfHxuSChhLGQsYik7cmV0dXJuIGN9CmZ1bmN0aW9uIG5IKGEsYixjKXt2YXIgZD1iLkYsZT17fSxmPXtldmVudElkOmMsZXZlbnRNZXRhZGF0YTooZS5iYXRjaF9vbl9uYXZpZ2F0aW9uPSEwLGUpfTtSKDQyKSYmKGYuZGVmZXJyYWJsZT0hMCk7ZC5obihmdW5jdGlvbigpe0xGPSEwO2ttLmZsdXNoKCk7MUUzPD1kLlNmKCkmJkJjLnNlbmRCZWFjb24mJm1tKE4uZy5DZCx7fSxhLmlkLGYpO2IuZmx1c2goKTtkLmRrKGZ1bmN0aW9uKCl7TEY9ITE7ZC5kaygpfSl9KTt9O3ZhciBvSD1sSDtmdW5jdGlvbiBxSChhLGIsYyl7dmFyIGQ9dGhpczt9cUguRD0iaW50ZXJuYWwuZ3RhZ0NvbmZpZyI7ZnVuY3Rpb24gckgoKXt2YXIgYT17fTtyZXR1cm4gYX07CmZ1bmN0aW9uIHRIKGEsYil7fXRILlA9Imd0YWdTZXQiO2Z1bmN0aW9uIHVIKGEsYil7fXVILlA9ImluamVjdEhpZGRlbklmcmFtZSI7ZnVuY3Rpb24gdkgoYSxiLGMsZCxlKXt9dkguRD0iaW50ZXJuYWwuaW5qZWN0SHRtbCI7dmFyIHpIPXt9OwpmdW5jdGlvbiBCSChhLGIsYyxkKXt9dmFyIENIPU9iamVjdC5mcmVlemUoe2RsOjEsaWQ6MX0pLERIPXt9OwpmdW5jdGlvbiBFSChhLGIsYyxkKXt9QkguUD0iaW5qZWN0U2NyaXB0IjtFSC5EPSJpbnRlcm5hbC5pbmplY3RTY3JpcHQiO2Z1bmN0aW9uIEZIKGEpe3ZhciBiPSEwO3JldHVybiBifUZILlA9ImlzQ29uc2VudEdyYW50ZWQiO2Z1bmN0aW9uIEdIKGEpe3ZhciBiPSExO3JldHVybiBifUdILkQ9ImludGVybmFsLmlzRW50aXR5SW5mcmFzdHJ1Y3R1cmUiO3ZhciBISD1mdW5jdGlvbigpe3ZhciBhPWhoKGZ1bmN0aW9uKGIpe3RoaXMuaC5oLmxvZygiZXJyb3IiLGIpfSk7YS5QPSJKU09OIjtyZXR1cm4gYX07ZnVuY3Rpb24gSUgoYSl7dmFyIGI9dm9pZCAwO3JldHVybiBtZChiKX1JSC5EPSJpbnRlcm5hbC5sZWdhY3lQYXJzZVVybCI7dmFyIEpIPWZ1bmN0aW9uKCl7cmV0dXJuITF9LEtIPXtnZXRJdGVtOmZ1bmN0aW9uKGEpe3ZhciBiPW51bGw7cmV0dXJuIGJ9LHNldEl0ZW06ZnVuY3Rpb24oYSwKYil7cmV0dXJuITF9LHJlbW92ZUl0ZW06ZnVuY3Rpb24oYSl7fX07ZnVuY3Rpb24gTEgoKXt9TEguUD0ibG9nVG9Db25zb2xlIjtmdW5jdGlvbiBNSChhLGIpe31NSC5EPSJpbnRlcm5hbC5tZXJnZVJlbW90ZUNvbmZpZyI7ZnVuY3Rpb24gTkgoYSxiLGMpe2M9dm9pZCAwPT09Yz8hMDpjO3ZhciBkPVtdO3JldHVybiBtZChkKX1OSC5EPSJpbnRlcm5hbC5wYXJzZUNvb2tpZVZhbHVlc0Zyb21TdHJpbmciO2Z1bmN0aW9uIE9IKGEpe3ZhciBiPXZvaWQgMDtpZigic3RyaW5nIiE9PXR5cGVvZiBhKXJldHVybjthJiYwPT09YS5pbmRleE9mKCIvLyIpJiYoYT1DLmxvY2F0aW9uLnByb3RvY29sK2EpO2lmKCJmdW5jdGlvbiI9PT10eXBlb2YgVVJMKXt2YXIgYzthOnt2YXIgZDt0cnl7ZD1uZXcgVVJMKGEpfWNhdGNoKHcpe2M9dm9pZCAwO2JyZWFrIGF9Zm9yKHZhciBlPXt9LGY9QXJyYXkuZnJvbShkLnNlYXJjaFBhcmFtcyksZz0wO2c8Zi5sZW5ndGg7ZysrKXt2YXIgaD1mW2ddWzBdLG09ZltnXVsxXTtlLmhhc093blByb3BlcnR5KGgpPyJzdHJpbmciPT09dHlwZW9mIGVbaF0/ZVtoXT1bZVtoXSxtXTplW2hdLnB1c2gobSk6ZVtoXT1tfWM9bWQoe2hyZWY6ZC5ocmVmLG9yaWdpbjpkLm9yaWdpbixwcm90b2NvbDpkLnByb3RvY29sLHVzZXJuYW1lOmQudXNlcm5hbWUscGFzc3dvcmQ6ZC5wYXNzd29yZCxob3N0OmQuaG9zdCwKaG9zdG5hbWU6ZC5ob3N0bmFtZSxwb3J0OmQucG9ydCxwYXRobmFtZTpkLnBhdGhuYW1lLHNlYXJjaDpkLnNlYXJjaCxzZWFyY2hQYXJhbXM6ZSxoYXNoOmQuaGFzaH0pfXJldHVybiBjfXZhciBuO3RyeXtuPXZqKGEpfWNhdGNoKHcpe3JldHVybn1pZighbi5wcm90b2NvbHx8IW4uaG9zdClyZXR1cm47dmFyIHA9e307aWYobi5zZWFyY2gpZm9yKHZhciBxPW4uc2VhcmNoLnJlcGxhY2UoIj8iLCIiKS5zcGxpdCgiJiIpLHI9MDtyPHEubGVuZ3RoO3IrKyl7dmFyIHQ9cVtyXS5zcGxpdCgiPSIpLHU9dFswXSx2PWRlY29kZVVSSUNvbXBvbmVudCh0LnNwbGljZSgxKS5qb2luKCI9IikpLnJlcGxhY2UoL1wrL2csIiAiKTtwLmhhc093blByb3BlcnR5KHUpPyJzdHJpbmciPT09dHlwZW9mIHBbdV0/cFt1XT1bcFt1XSx2XTpwW3VdLnB1c2godik6cFt1XT12fW4uc2VhcmNoUGFyYW1zPXA7bi5vcmlnaW49bi5wcm90b2NvbCsiLy8iK24uaG9zdDtuLnVzZXJuYW1lPSIiO24ucGFzc3dvcmQ9CiIiO2I9bWQobik7cmV0dXJuIGJ9T0guUD0icGFyc2VVcmwiO2Z1bmN0aW9uIFBIKGEpe31QSC5EPSJpbnRlcm5hbC5wcm9jZXNzQXNOZXdFdmVudCI7ZnVuY3Rpb24gUUgoYSxiLGMpe3ZhciBkO3JldHVybiBkfVFILkQ9ImludGVybmFsLnB1c2hUb0RhdGFMYXllciI7ZnVuY3Rpb24gUkgoYSxiKXt2YXIgYz0hMTtyZXR1cm4gY31SSC5QPSJxdWVyeVBlcm1pc3Npb24iO2Z1bmN0aW9uIFNIKCl7dmFyIGE9IiI7cmV0dXJuIGF9U0guUD0icmVhZENoYXJhY3RlclNldCI7ZnVuY3Rpb24gVEgoKXtyZXR1cm4gcmkuamF9VEguRD0iaW50ZXJuYWwucmVhZERhdGFMYXllck5hbWUiO2Z1bmN0aW9uIFVIKCl7dmFyIGE9IiI7cmV0dXJuIGF9VUguUD0icmVhZFRpdGxlIjtmdW5jdGlvbiBWSChhLGIpe3ZhciBjPXRoaXM7SyhKKHRoaXMpLFsiZGVzdGluYXRpb25JZDohc3RyaW5nIiwiY2FsbGJhY2s6IUZuIl0sYXJndW1lbnRzKSxocihhLGZ1bmN0aW9uKGQpe2IuaW52b2tlKGMuaCxtZChkLGMuaCwxKSl9KTt9VkguRD0iaW50ZXJuYWwucmVnaXN0ZXJDY2RDYWxsYmFjayI7ZnVuY3Rpb24gV0goYSl7cmV0dXJuITB9CldILkQ9ImludGVybmFsLnJlZ2lzdGVyRGVzdGluYXRpb24iO3ZhciBYSD1PYmplY3QuZnJlZXplKFsiY29uZmlnIiwiZXZlbnQiLCJnZXQiLCJzZXQiXSk7ZnVuY3Rpb24gWUgoYSxiLGMpe31ZSC5EPSJpbnRlcm5hbC5yZWdpc3Rlckd0YWdDb21tYW5kTGlzdGVuZXIiO2Z1bmN0aW9uIFpIKGEsYil7dmFyIGM9ITE7cmV0dXJuIGN9WkguRD0iaW50ZXJuYWwucmVtb3ZlRGF0YUxheWVyRXZlbnRMaXN0ZW5lciI7ZnVuY3Rpb24gJEgoYSxiKXt9CiRILkQ9ImludGVybmFsLnJlbW92ZUZvcm1EYXRhIjtmdW5jdGlvbiBhSSgpe31hSS5QPSJyZXNldERhdGFMYXllciI7ZnVuY3Rpb24gYkkoYSxiLGMsZCl7SyhKKHRoaXMpLFsiZGVzdGluYXRpb25JZHM6ISoiLCJldmVudE5hbWU6ISoiLCJldmVudFBhcmFtZXRlcnM6P1BpeGllTWFwIiwibWVzc2FnZUNvbnRleHQ6P1BpeGllTWFwIl0sYXJndW1lbnRzKTt2YXIgZT1jP25kKGMpOnt9LGY9bmQoYSk7QXJyYXkuaXNBcnJheShmKXx8KGY9W2ZdKTtiPVN0cmluZyhiKTt2YXIgZz1kP25kKGQpOnt9LGg9dGhpcy5oLmg7Zy5vcmlnaW5hdGluZ0VudGl0eT1FQihoKTtmb3IodmFyIG09MDttPGYubGVuZ3RoO20rKyl7dmFyIG49ZlttXTtpZigic3RyaW5nIj09PXR5cGVvZiBuKXt2YXIgcD0KbmIoZSkscT1uYihnKSxyPWx4KG4sYixwKTtveChyLGcuZXZlbnRJZHx8aC5ldmVudElkLHEpfX19YkkuRD0iaW50ZXJuYWwuc2VuZEd0YWdFdmVudCI7ZnVuY3Rpb24gY0koYSxiLGMpe31jSS5QPSJzZW5kUGl4ZWwiO2Z1bmN0aW9uIGRJKGEsYil7fWRJLkQ9ImludGVybmFsLnNldEFuY2hvckhyZWYiO2Z1bmN0aW9uIGVJKGEsYixjLGQpe3ZhciBlPXRoaXM7ZD12b2lkIDA9PT1kPyEwOmQ7dmFyIGY9ITE7cmV0dXJuIGZ9ZUkuUD0ic2V0Q29va2llIjtmdW5jdGlvbiBmSShhKXt9ZkkuRD0iaW50ZXJuYWwuc2V0Q29yZVBsYXRmb3JtU2VydmljZXMiO2Z1bmN0aW9uIGdJKGEsYil7fWdJLkQ9ImludGVybmFsLnNldERhdGFMYXllclZhbHVlIjtmdW5jdGlvbiBoSShhKXt9aEkuUD0ic2V0RGVmYXVsdENvbnNlbnRTdGF0ZSI7ZnVuY3Rpb24gaUkoYSxiKXt9aUkuRD0iaW50ZXJuYWwuc2V0RGVsZWdhdGVkQ29uc2VudFR5cGUiO2Z1bmN0aW9uIGpJKGEsYil7fWpJLkQ9ImludGVybmFsLnNldEZvcm1BY3Rpb24iO2Z1bmN0aW9uIGtJKGEsYixjKXtyZXR1cm4hMX1rSS5QPSJzZXRJbldpbmRvdyI7ZnVuY3Rpb24gbEkoYSxiLGMpe0soSih0aGlzKSxbInRhcmdldElkOiFzdHJpbmciLCJuYW1lOiFzdHJpbmciLCJ2YWx1ZTohKiJdLGFyZ3VtZW50cyk7dmFyIGQ9ZnEoYSl8fHt9O2RbYl09bmQoYyx0aGlzLmgpO3ZhciBlPWE7ZHF8fGVxKCk7Y3FbZV09ZDt9bEkuRD0iaW50ZXJuYWwuc2V0UHJvZHVjdFNldHRpbmdzUGFyYW1ldGVyIjtmdW5jdGlvbiBtSShhLGIsYyl7SyhKKHRoaXMpLFsidGFyZ2V0SWQ6IXN0cmluZyIsIm5hbWU6IXN0cmluZyIsInZhbHVlOiEqIl0sYXJndW1lbnRzKTtmb3IodmFyIGQ9Yi5zcGxpdCgiLiIpLGU9cG0oYSksZj0wO2Y8ZC5sZW5ndGgtMTtmKyspe2lmKHZvaWQgMD09PWVbZFtmXV0pZVtkW2ZdXT17fTtlbHNlIGlmKCFsYihlW2RbZl1dKSl0aHJvdyBFcnJvcigic2V0UmVtb3RlQ29uZmlnUGFyYW1ldGVyIGZhaWxlZCwgcGF0aCBjb250YWlucyBhIG5vbi1vYmplY3QgdHlwZTogIitkW2ZdKTtlPWVbZFtmXV19ZVtkW2ZdXT1uZChjLHRoaXMuaCwxKTt9bUkuRD0iaW50ZXJuYWwuc2V0UmVtb3RlQ29uZmlnUGFyYW1ldGVyIjtmdW5jdGlvbiBuSShhLGIpe3ZhciBjPXRoaXM7fW5JLkQ9ImludGVybmFsLnNldHVwQ29udmVyc2lvbkxpbmtlciI7ZnVuY3Rpb24gb0koYSxiLGMsZCl7dmFyIGU9dGhpczt9b0kuUD0ic2hhMjU2IjtmdW5jdGlvbiBwSShhLGIsYyl7fQpwSS5EPSJpbnRlcm5hbC5zb3J0UmVtb3RlQ29uZmlnUGFyYW1ldGVycyI7dmFyIHFJPXt9LHJJPXt9O3FJLlA9InRlbXBsYXRlU3RvcmFnZSI7cUkuZ2V0SXRlbT1mdW5jdGlvbihhKXt2YXIgYj1udWxsO0wodGhpcywiYWNjZXNzX3RlbXBsYXRlX3N0b3JhZ2UiKTt2YXIgYz10aGlzLmguaDtpZighYyl0aHJvdyBFcnJvcigiaW52YWxpZCBwcm9ncmFtIHN0YXRlIik7dmFyIGQ9Yy5oYygpO3JJW2RdJiYoYj1ySVtkXS5oYXNPd25Qcm9wZXJ0eSgiZ3RtLiIrYSk/cklbZF1bImd0bS4iK2FdOm51bGwpO3JldHVybiBifTsKcUkuc2V0SXRlbT1mdW5jdGlvbihhLGIpe0wodGhpcywiYWNjZXNzX3RlbXBsYXRlX3N0b3JhZ2UiKTt2YXIgYz10aGlzLmguaDtpZighYyl0aHJvdyBFcnJvcigiaW52YWxpZCBwcm9ncmFtIHN0YXRlIik7dmFyIGQ9Yy5oYygpO3JJW2RdPXJJW2RdfHx7fTtySVtkXVsiZ3RtLiIrYV09Yjt9OwpxSS5yZW1vdmVJdGVtPWZ1bmN0aW9uKGEpe0wodGhpcywiYWNjZXNzX3RlbXBsYXRlX3N0b3JhZ2UiKTt2YXIgYj10aGlzLmguaDtpZighYil0aHJvdyBFcnJvcigiaW52YWxpZCBwcm9ncmFtIHN0YXRlIik7dmFyIGM9Yi5oYygpO2lmKCFySVtjXXx8IXJJW2NdLmhhc093blByb3BlcnR5KCJndG0uIithKSlyZXR1cm47ZGVsZXRlIHJJW2NdWyJndG0uIithXTt9O3FJLmNsZWFyPWZ1bmN0aW9uKCl7TCh0aGlzLCJhY2Nlc3NfdGVtcGxhdGVfc3RvcmFnZSIpO3ZhciBhPXRoaXMuaC5oO2lmKCFhKXRocm93IEVycm9yKCJpbnZhbGlkIHByb2dyYW0gc3RhdGUiKTtkZWxldGUgcklbYS5oYygpXTt9O2Z1bmN0aW9uIHNJKGEsYil7dmFyIGM9ITE7cmV0dXJuIGN9c0kuRD0iaW50ZXJuYWwudGVzdFJlZ2V4Ijt2YXIgdEk9ZnVuY3Rpb24oYSl7dmFyIGI7cmV0dXJuIGJ9O2Z1bmN0aW9uIHVJKGEpe3ZhciBiO3JldHVybiBifXVJLkQ9ImludGVybmFsLnVuc2lsb0lkIjtmdW5jdGlvbiB2SShhKXt9dkkuUD0idXBkYXRlQ29uc2VudFN0YXRlIjt2YXIgd0k7ZnVuY3Rpb24geEkoYSxiLGMpe3dJPXdJfHxuZXcgdmg7d0kuYWRkKGEsYixjKX1mdW5jdGlvbiB5SShhLGIpe3ZhciBjPXdJPXdJfHxuZXcgdmg7aWYoYy5zLmhhc093blByb3BlcnR5KGEpKXRocm93IkF0dGVtcHRpbmcgdG8gYWRkIGEgcHJpdmF0ZSBmdW5jdGlvbiB3aGljaCBhbHJlYWR5IGV4aXN0czogIithKyIuIjtpZihjLmguaGFzT3duUHJvcGVydHkoYSkpdGhyb3ciQXR0ZW1wdGluZyB0byBhZGQgYSBwcml2YXRlIGZ1bmN0aW9uIHdpdGggYW4gZXhpc3RpbmcgQVBJIG5hbWU6ICIrYSsiLiI7Yy5zW2FdPUVhKGIpP09nKGEsYik6UGcoYSxiKX0KZnVuY3Rpb24gekkoKXtyZXR1cm4gZnVuY3Rpb24oYSl7dmFyIGI7dmFyIGM9d0k7aWYoYy5oLmhhc093blByb3BlcnR5KGEpKWI9Yy5nZXQoYSx0aGlzKTtlbHNle3ZhciBkO2lmKGQ9Yy5zLmhhc093blByb3BlcnR5KGEpKXt2YXIgZT0hMSxmPXRoaXMuaC5oO2lmKGYpe3ZhciBnPWYuaGMoKTtpZihnKXswIT09Zy5pbmRleE9mKCJfX2N2dF8iKSYmKGU9ITApO319ZWxzZSBlPSEwO2Q9ZX1pZihkKXt2YXIgaD1jLnMuaGFzT3duUHJvcGVydHkoYSk/Yy5zW2FdOnZvaWQgMDtiPWh9ZWxzZSB0aHJvdyBFcnJvcihhKyIgaXMgbm90IGEgdmFsaWQgQVBJIG5hbWUuIik7fXJldHVybiBifX07dmFyIEFJPWZ1bmN0aW9uKCl7dmFyIGE9ZnVuY3Rpb24oYyl7cmV0dXJuIHlJKGMuRCxjKX0sYj1mdW5jdGlvbihjKXtyZXR1cm4geEkoYy5QLGMpfTtiKFZBKTtiKGFCKTtiKFVCKTtiKFhCKTtiKFlCKTtiKGJDKTtiKGRDKTtiKGdDKTtiKEhIKCkpO2IoaUMpO2Iob0YpO2IocEYpO2IoRUYpO2IoRkYpO2IoR0YpO2IoSkYpO2IodEgpO2IodUgpO2IoQkgpO2IoRkgpO2IoTEgpO2IoT0gpO2IoUkgpO2IoU0gpO2IoVUgpO2IoY0kpO2IoZUkpO2IoaEkpO2Ioa0kpO2Iob0kpO2IocUkpO2IodkkpO3hJKCJNYXRoIixVZygpKTt4SSgiT2JqZWN0Iix0aCk7eEkoIlRlc3RIZWxwZXIiLHhoKCkpO3hJKCJhc3NlcnRBcGkiLFFnKTt4SSgiYXNzZXJ0VGhhdCIsUmcpO3hJKCJkZWNvZGVVcmkiLFZnKTt4SSgiZGVjb2RlVXJpQ29tcG9uZW50IixXZyk7eEkoImVuY29kZVVyaSIsWGcpO3hJKCJlbmNvZGVVcmlDb21wb25lbnQiLFlnKTt4SSgiZmFpbCIsZGgpO3hJKCJnZW5lcmF0ZVJhbmRvbSIsCmVoKTt4SSgiZ2V0VGltZXN0YW1wIixmaCk7eEkoImdldFRpbWVzdGFtcE1pbGxpcyIsZmgpO3hJKCJnZXRUeXBlIixnaCk7eEkoIm1ha2VJbnRlZ2VyIixpaCk7eEkoIm1ha2VOdW1iZXIiLGpoKTt4SSgibWFrZVN0cmluZyIsa2gpO3hJKCJtYWtlVGFibGVNYXAiLHBoKTt4SSgibW9jayIsc2gpO3hJKCJmcm9tQmFzZTY0IixtRiwhKCJhdG9iImluIHopKTt4SSgibG9jYWxTdG9yYWdlIixLSCwhSkgoKSk7eEkoInRvQmFzZTY0Iix0SSwhKCJidG9hImluIHopKTthKFlBKTthKGZCKTthKHJCKTthKHlCKTthKERCKTthKEpCKTthKFNCKTthKFZCKTthKFpCKTthKCRCKTthKGNDKTthKGVDKTthKGZDKTthKGhDKTthKGpDKTthKGtDKTthKGxDKTthKG1DKTthKG5DKTthKHJDKTthKHdDKTthKHhDKTthKElDKTthKE5DKTthKFNDKTthKGFEKTthKGZEKTthKHNEKTthKHVEKTthKEhEKTthKFpnKTthKEpEKTthKGtGKTthKGxGKTthKHFGKTthKHJGKTthKHNGKTthKHRGKTthKHVGKTthKHZGKTsKYSh3Rik7YSh4Rik7YSh5Rik7YSh6Rik7YShCRik7YShDRik7YShERik7YShIRik7YShJRik7YShxSCk7YSh2SCk7YShFSCk7YShHSCk7YShJSCk7YShIQik7YShNSCk7YShOSCk7YShQSCk7YShRSCk7YShUSCk7YShWSCk7YShXSCk7YShZSCk7YShaSCk7YSgkSCk7YShiSSk7YShkSSk7YShmSSk7YShnSSk7YShpSSk7YShqSSk7YShsSSk7YShtSSk7YShuSSk7YShwSSk7YShzSSk7YSh1SSk7eUkoImludGVybmFsLkd0YWdTY2hlbWEiLHJIKCkpOwpyZXR1cm4gekkoKX07dmFyIFRBO2Z1bmN0aW9uIEJJKCl7VEEuaC5oLk09ZnVuY3Rpb24oYSxiLGMpe3NpLlNBTkRCT1hFRF9KU19TRU1BUEhPUkU9c2kuU0FOREJPWEVEX0pTX1NFTUFQSE9SRXx8MDtzaS5TQU5EQk9YRURfSlNfU0VNQVBIT1JFKys7dHJ5e3JldHVybiBhLmFwcGx5KGIsYyl9ZmluYWxseXtzaS5TQU5EQk9YRURfSlNfU0VNQVBIT1JFLS19fX1mdW5jdGlvbiBDSShhKXt2b2lkIDAhPT1hJiZsKGEsZnVuY3Rpb24oYixjKXtmb3IodmFyIGQ9MDtkPGMubGVuZ3RoO2QrKyl7dmFyIGU9Y1tkXS5yZXBsYWNlKC9eXyovLCIiKTtJaVtlXT1JaVtlXXx8W107SWlbZV0ucHVzaChiKX19KX07dmFyIERJPWVuY29kZVVSSSxYPWVuY29kZVVSSUNvbXBvbmVudCxFST1mdW5jdGlvbihhLGIsYyl7TGMoYSxiLGMpfSxGST1mdW5jdGlvbihhLGIpe2lmKCFhKXJldHVybiExO3ZhciBjPXJqKHZqKGEpLCJob3N0Iik7aWYoIWMpcmV0dXJuITE7Zm9yKHZhciBkPTA7YiYmZDxiLmxlbmd0aDtkKyspe3ZhciBlPWJbZF0mJmJbZF0udG9Mb3dlckNhc2UoKTtpZihlKXt2YXIgZj1jLmxlbmd0aC1lLmxlbmd0aDswPGYmJiIuIiE9ZS5jaGFyQXQoMCkmJihmLS0sZT0iLiIrZSk7aWYoMDw9ZiYmYy5pbmRleE9mKGUsZik9PWYpcmV0dXJuITB9fXJldHVybiExfSxHST1mdW5jdGlvbihhLGIsYyl7Zm9yKHZhciBkPXt9LGU9ITEsZj0wO2EmJmY8YS5sZW5ndGg7ZisrKWFbZl0mJmFbZl0uaGFzT3duUHJvcGVydHkoYikmJgphW2ZdLmhhc093blByb3BlcnR5KGMpJiYoZFthW2ZdW2JdXT1hW2ZdW2NdLGU9ITApO3JldHVybiBlP2Q6bnVsbH07dmFyIFo9e3NlY3VyaXR5R3JvdXBzOnt9fTsKWi5zZWN1cml0eUdyb3Vwcy5hY2Nlc3NfdGVtcGxhdGVfc3RvcmFnZT1bImdvb2dsZSJdLGZ1bmN0aW9uKCl7KGZ1bmN0aW9uKGEpe1ouX19hY2Nlc3NfdGVtcGxhdGVfc3RvcmFnZT1hO1ouX19hY2Nlc3NfdGVtcGxhdGVfc3RvcmFnZS5tPSJhY2Nlc3NfdGVtcGxhdGVfc3RvcmFnZSI7Wi5fX2FjY2Vzc190ZW1wbGF0ZV9zdG9yYWdlLmlzVmVuZG9yVGVtcGxhdGU9ITA7Wi5fX2FjY2Vzc190ZW1wbGF0ZV9zdG9yYWdlLnByaW9yaXR5T3ZlcnJpZGU9MDtaLl9fYWNjZXNzX3RlbXBsYXRlX3N0b3JhZ2UuaXNJbmZyYXN0cnVjdHVyZT0hMTtaLl9fYWNjZXNzX3RlbXBsYXRlX3N0b3JhZ2UucnVuSW5TaWxvZWRNb2RlPSExfSkoZnVuY3Rpb24oKXtyZXR1cm57YXNzZXJ0OmZ1bmN0aW9uKCl7fSxLOmZ1bmN0aW9uKCl7cmV0dXJue319fX0pfSgpOwpaLnNlY3VyaXR5R3JvdXBzLmM9WyJnb29nbGUiXSxmdW5jdGlvbigpeyhmdW5jdGlvbihhKXtaLl9fYz1hO1ouX19jLm09ImMiO1ouX19jLmlzVmVuZG9yVGVtcGxhdGU9ITA7Wi5fX2MucHJpb3JpdHlPdmVycmlkZT0wO1ouX19jLmlzSW5mcmFzdHJ1Y3R1cmU9ITA7Wi5fX2MucnVuSW5TaWxvZWRNb2RlPSEwfSkoZnVuY3Rpb24oYSl7cmV0dXJuIGEudnRwX3ZhbHVlfSl9KCk7Clouc2VjdXJpdHlHcm91cHMuZT1bImdvb2dsZSJdLGZ1bmN0aW9uKCl7KGZ1bmN0aW9uKGEpe1ouX19lPWE7Wi5fX2UubT0iZSI7Wi5fX2UuaXNWZW5kb3JUZW1wbGF0ZT0hMDtaLl9fZS5wcmlvcml0eU92ZXJyaWRlPTA7Wi5fX2UuaXNJbmZyYXN0cnVjdHVyZT0hMDtaLl9fZS5ydW5JblNpbG9lZE1vZGU9ITB9KShmdW5jdGlvbihhKXtyZXR1cm4gU3RyaW5nKGEudnRwX2d0bUNhY2hlZFZhbHVlcy5ldmVudCl9KX0oKTtaLnNlY3VyaXR5R3JvdXBzLnY9WyJnb29nbGUiXSxmdW5jdGlvbigpeyhmdW5jdGlvbihhKXtaLl9fdj1hO1ouX192Lm09InYiO1ouX192LmlzVmVuZG9yVGVtcGxhdGU9ITA7Wi5fX3YucHJpb3JpdHlPdmVycmlkZT0wO1ouX192LmlzSW5mcmFzdHJ1Y3R1cmU9ITA7Wi5fX3YucnVuSW5TaWxvZWRNb2RlPSExfSkoZnVuY3Rpb24oYSl7dmFyIGI9YS52dHBfbmFtZTtpZighYnx8IWIucmVwbGFjZSlyZXR1cm4hMTt2YXIgYz1kQShiLnJlcGxhY2UoL1xcXC4vZywiLiIpLGEudnRwX2RhdGFMYXllclZlcnNpb258fDEpO3JldHVybiB2b2lkIDAhPT1jP2M6YS52dHBfZGVmYXVsdFZhbHVlfSl9KCk7CgoKCgpaLnNlY3VyaXR5R3JvdXBzLnByb2Nlc3NfZG9tX2V2ZW50cz1bImdvb2dsZSJdLGZ1bmN0aW9uKCl7ZnVuY3Rpb24gYShiLGMsZCl7cmV0dXJue3RhcmdldFR5cGU6YyxldmVudE5hbWU6ZH19KGZ1bmN0aW9uKGIpe1ouX19wcm9jZXNzX2RvbV9ldmVudHM9YjtaLl9fcHJvY2Vzc19kb21fZXZlbnRzLm09InByb2Nlc3NfZG9tX2V2ZW50cyI7Wi5fX3Byb2Nlc3NfZG9tX2V2ZW50cy5pc1ZlbmRvclRlbXBsYXRlPSEwO1ouX19wcm9jZXNzX2RvbV9ldmVudHMucHJpb3JpdHlPdmVycmlkZT0wO1ouX19wcm9jZXNzX2RvbV9ldmVudHMuaXNJbmZyYXN0cnVjdHVyZT0hMTtaLl9fcHJvY2Vzc19kb21fZXZlbnRzLnJ1bkluU2lsb2VkTW9kZT0hMX0pKGZ1bmN0aW9uKGIpe2Zvcih2YXIgYz1iLnZ0cF90YXJnZXRzfHxbXSxkPWIudnRwX2NyZWF0ZVBlcm1pc3Npb25FcnJvcixlPXt9LGY9MDtmPGMubGVuZ3RoO2YrKyl7dmFyIGc9Y1tmXTtlW2cudGFyZ2V0VHlwZV09ZVtnLnRhcmdldFR5cGVdfHwKW107ZVtnLnRhcmdldFR5cGVdLnB1c2goZy5ldmVudE5hbWUpfXJldHVybnthc3NlcnQ6ZnVuY3Rpb24oaCxtLG4pe2lmKCFlW21dKXRocm93IGQoaCx7fSwiUHJvaGliaXRlZCBldmVudCB0YXJnZXQgIittKyIuIik7aWYoLTE9PT1lW21dLmluZGV4T2YobikpdGhyb3cgZChoLHt9LCJQcm9oaWJpdGVkIGxpc3RlbmVyIHJlZ2lzdHJhdGlvbiBmb3IgRE9NIGV2ZW50ICIrbisiLiIpO30sSzphfX0pfSgpOwpaLnNlY3VyaXR5R3JvdXBzLmRldGVjdF95b3V0dWJlX2FjdGl2aXR5X2V2ZW50cz1bImdvb2dsZSJdLGZ1bmN0aW9uKCl7ZnVuY3Rpb24gYShiLGMpe3JldHVybntvcHRpb25zOntmaXhNaXNzaW5nQXBpOiEhYy5maXhNaXNzaW5nQXBpfX19KGZ1bmN0aW9uKGIpe1ouX19kZXRlY3RfeW91dHViZV9hY3Rpdml0eV9ldmVudHM9YjtaLl9fZGV0ZWN0X3lvdXR1YmVfYWN0aXZpdHlfZXZlbnRzLm09ImRldGVjdF95b3V0dWJlX2FjdGl2aXR5X2V2ZW50cyI7Wi5fX2RldGVjdF95b3V0dWJlX2FjdGl2aXR5X2V2ZW50cy5pc1ZlbmRvclRlbXBsYXRlPSEwO1ouX19kZXRlY3RfeW91dHViZV9hY3Rpdml0eV9ldmVudHMucHJpb3JpdHlPdmVycmlkZT0wO1ouX19kZXRlY3RfeW91dHViZV9hY3Rpdml0eV9ldmVudHMuaXNJbmZyYXN0cnVjdHVyZT0hMTtaLl9fZGV0ZWN0X3lvdXR1YmVfYWN0aXZpdHlfZXZlbnRzLnJ1bkluU2lsb2VkTW9kZT0hMX0pKGZ1bmN0aW9uKGIpe3ZhciBjPSEhYi52dHBfYWxsb3dGaXhNaXNzaW5nSmF2YVNjcmlwdEFwaSwKZD1iLnZ0cF9jcmVhdGVQZXJtaXNzaW9uRXJyb3I7cmV0dXJue2Fzc2VydDpmdW5jdGlvbihlLGYpe2lmKCFjJiZmJiZmLmZpeE1pc3NpbmdBcGkpdGhyb3cgZChlLHt9LCJQcm9oaWJpdGVkIG9wdGlvbjogZml4TWlzc2luZ0FwaS4iKTt9LEs6YX19KX0oKTsKCgoKCgpaLnNlY3VyaXR5R3JvdXBzLmRldGVjdF9oaXN0b3J5X2NoYW5nZV9ldmVudHM9WyJnb29nbGUiXSxmdW5jdGlvbigpe2Z1bmN0aW9uIGEoKXtyZXR1cm57fX0oZnVuY3Rpb24oYil7Wi5fX2RldGVjdF9oaXN0b3J5X2NoYW5nZV9ldmVudHM9YjtaLl9fZGV0ZWN0X2hpc3RvcnlfY2hhbmdlX2V2ZW50cy5tPSJkZXRlY3RfaGlzdG9yeV9jaGFuZ2VfZXZlbnRzIjtaLl9fZGV0ZWN0X2hpc3RvcnlfY2hhbmdlX2V2ZW50cy5pc1ZlbmRvclRlbXBsYXRlPSEwO1ouX19kZXRlY3RfaGlzdG9yeV9jaGFuZ2VfZXZlbnRzLnByaW9yaXR5T3ZlcnJpZGU9MDtaLl9fZGV0ZWN0X2hpc3RvcnlfY2hhbmdlX2V2ZW50cy5pc0luZnJhc3RydWN0dXJlPSExO1ouX19kZXRlY3RfaGlzdG9yeV9jaGFuZ2VfZXZlbnRzLnJ1bkluU2lsb2VkTW9kZT0hMX0pKGZ1bmN0aW9uKCl7cmV0dXJue2Fzc2VydDpmdW5jdGlvbigpe30sSzphfX0pfSgpOwoKClouc2VjdXJpdHlHcm91cHMuZGV0ZWN0X2xpbmtfY2xpY2tfZXZlbnRzPVsiZ29vZ2xlIl0sZnVuY3Rpb24oKXtmdW5jdGlvbiBhKGIsYyl7cmV0dXJue29wdGlvbnM6Y319KGZ1bmN0aW9uKGIpe1ouX19kZXRlY3RfbGlua19jbGlja19ldmVudHM9YjtaLl9fZGV0ZWN0X2xpbmtfY2xpY2tfZXZlbnRzLm09ImRldGVjdF9saW5rX2NsaWNrX2V2ZW50cyI7Wi5fX2RldGVjdF9saW5rX2NsaWNrX2V2ZW50cy5pc1ZlbmRvclRlbXBsYXRlPSEwO1ouX19kZXRlY3RfbGlua19jbGlja19ldmVudHMucHJpb3JpdHlPdmVycmlkZT0wO1ouX19kZXRlY3RfbGlua19jbGlja19ldmVudHMuaXNJbmZyYXN0cnVjdHVyZT0hMTtaLl9fZGV0ZWN0X2xpbmtfY2xpY2tfZXZlbnRzLnJ1bkluU2lsb2VkTW9kZT0hMX0pKGZ1bmN0aW9uKGIpe3ZhciBjPWIudnRwX2FsbG93V2FpdEZvclRhZ3MsZD1iLnZ0cF9jcmVhdGVQZXJtaXNzaW9uRXJyb3I7cmV0dXJue2Fzc2VydDpmdW5jdGlvbihlLGYpe2lmKCFjJiYKZiYmZi53YWl0Rm9yVGFncyl0aHJvdyBkKGUse30sIlByb2hpYml0ZWQgb3B0aW9uIHdhaXRGb3JUYWdzLiIpO30sSzphfX0pfSgpOwpaLnNlY3VyaXR5R3JvdXBzLmRldGVjdF9mb3JtX3N1Ym1pdF9ldmVudHM9WyJnb29nbGUiXSxmdW5jdGlvbigpe2Z1bmN0aW9uIGEoYixjKXtyZXR1cm57b3B0aW9uczpjfX0oZnVuY3Rpb24oYil7Wi5fX2RldGVjdF9mb3JtX3N1Ym1pdF9ldmVudHM9YjtaLl9fZGV0ZWN0X2Zvcm1fc3VibWl0X2V2ZW50cy5tPSJkZXRlY3RfZm9ybV9zdWJtaXRfZXZlbnRzIjtaLl9fZGV0ZWN0X2Zvcm1fc3VibWl0X2V2ZW50cy5pc1ZlbmRvclRlbXBsYXRlPSEwO1ouX19kZXRlY3RfZm9ybV9zdWJtaXRfZXZlbnRzLnByaW9yaXR5T3ZlcnJpZGU9MDtaLl9fZGV0ZWN0X2Zvcm1fc3VibWl0X2V2ZW50cy5pc0luZnJhc3RydWN0dXJlPSExO1ouX19kZXRlY3RfZm9ybV9zdWJtaXRfZXZlbnRzLnJ1bkluU2lsb2VkTW9kZT0hMX0pKGZ1bmN0aW9uKGIpe3ZhciBjPWIudnRwX2FsbG93V2FpdEZvclRhZ3MsZD1iLnZ0cF9jcmVhdGVQZXJtaXNzaW9uRXJyb3I7cmV0dXJue2Fzc2VydDpmdW5jdGlvbihlLGYpe2lmKCFjJiYKZiYmZi53YWl0Rm9yVGFncyl0aHJvdyBkKGUse30sIlByb2hpYml0ZWQgb3B0aW9uIHdhaXRGb3JUYWdzLiIpO30sSzphfX0pfSgpO1ouc2VjdXJpdHlHcm91cHMucmVhZF9jb250YWluZXJfZGF0YT1bImdvb2dsZSJdLGZ1bmN0aW9uKCl7KGZ1bmN0aW9uKGEpe1ouX19yZWFkX2NvbnRhaW5lcl9kYXRhPWE7Wi5fX3JlYWRfY29udGFpbmVyX2RhdGEubT0icmVhZF9jb250YWluZXJfZGF0YSI7Wi5fX3JlYWRfY29udGFpbmVyX2RhdGEuaXNWZW5kb3JUZW1wbGF0ZT0hMDtaLl9fcmVhZF9jb250YWluZXJfZGF0YS5wcmlvcml0eU92ZXJyaWRlPTA7Wi5fX3JlYWRfY29udGFpbmVyX2RhdGEuaXNJbmZyYXN0cnVjdHVyZT0hMTtaLl9fcmVhZF9jb250YWluZXJfZGF0YS5ydW5JblNpbG9lZE1vZGU9ITF9KShmdW5jdGlvbigpe3JldHVybnthc3NlcnQ6ZnVuY3Rpb24oKXt9LEs6ZnVuY3Rpb24oKXtyZXR1cm57fX19fSl9KCk7CgoKWi5zZWN1cml0eUdyb3Vwcy5saXN0ZW5fZGF0YV9sYXllcj1bImdvb2dsZSJdLGZ1bmN0aW9uKCl7ZnVuY3Rpb24gYShiLGMpe3JldHVybntldmVudE5hbWU6Y319KGZ1bmN0aW9uKGIpe1ouX19saXN0ZW5fZGF0YV9sYXllcj1iO1ouX19saXN0ZW5fZGF0YV9sYXllci5tPSJsaXN0ZW5fZGF0YV9sYXllciI7Wi5fX2xpc3Rlbl9kYXRhX2xheWVyLmlzVmVuZG9yVGVtcGxhdGU9ITA7Wi5fX2xpc3Rlbl9kYXRhX2xheWVyLnByaW9yaXR5T3ZlcnJpZGU9MDtaLl9fbGlzdGVuX2RhdGFfbGF5ZXIuaXNJbmZyYXN0cnVjdHVyZT0hMTtaLl9fbGlzdGVuX2RhdGFfbGF5ZXIucnVuSW5TaWxvZWRNb2RlPSExfSkoZnVuY3Rpb24oYil7dmFyIGM9Yi52dHBfYWNjZXNzVHlwZSxkPWIudnRwX2FsbG93ZWRFdmVudHN8fFtdLGU9Yi52dHBfY3JlYXRlUGVybWlzc2lvbkVycm9yO3JldHVybnthc3NlcnQ6ZnVuY3Rpb24oZixnKXtpZighayhnKSl0aHJvdyBlKGYse2V2ZW50TmFtZTpnfSwiRXZlbnQgbmFtZSBtdXN0IGJlIGEgc3RyaW5nLiIpOwppZighKCJhbnkiPT09Y3x8InNwZWNpZmljIj09PWMmJjA8PWQuaW5kZXhPZihnKSkpdGhyb3cgZShmLHtldmVudE5hbWU6Z30sIlByb2hpYml0ZWQgbGlzdGVuIG9uIGRhdGEgbGF5ZXIgZXZlbnQuIik7fSxLOmF9fSl9KCk7CgpaLnNlY3VyaXR5R3JvdXBzLmdldF91cmw9WyJnb29nbGUiXSxmdW5jdGlvbigpe2Z1bmN0aW9uIGEoYixjLGQpe3JldHVybntjb21wb25lbnQ6YyxxdWVyeUtleTpkfX0oZnVuY3Rpb24oYil7Wi5fX2dldF91cmw9YjtaLl9fZ2V0X3VybC5tPSJnZXRfdXJsIjtaLl9fZ2V0X3VybC5pc1ZlbmRvclRlbXBsYXRlPSEwO1ouX19nZXRfdXJsLnByaW9yaXR5T3ZlcnJpZGU9MDtaLl9fZ2V0X3VybC5pc0luZnJhc3RydWN0dXJlPSExO1ouX19nZXRfdXJsLnJ1bkluU2lsb2VkTW9kZT0hMX0pKGZ1bmN0aW9uKGIpe3ZhciBjPSJhbnkiPT09Yi52dHBfdXJsUGFydHM/bnVsbDpbXTtjJiYoYi52dHBfcHJvdG9jb2wmJmMucHVzaCgicHJvdG9jb2wiKSxiLnZ0cF9ob3N0JiZjLnB1c2goImhvc3QiKSxiLnZ0cF9wb3J0JiZjLnB1c2goInBvcnQiKSxiLnZ0cF9wYXRoJiZjLnB1c2goInBhdGgiKSxiLnZ0cF9leHRlbnNpb24mJmMucHVzaCgiZXh0ZW5zaW9uIiksYi52dHBfcXVlcnkmJmMucHVzaCgicXVlcnkiKSwKYi52dHBfZnJhZ21lbnQmJmMucHVzaCgiZnJhZ21lbnQiKSk7dmFyIGQ9YyYmImFueSIhPT1iLnZ0cF9xdWVyaWVzQWxsb3dlZD9iLnZ0cF9xdWVyeUtleXN8fFtdOm51bGwsZT1iLnZ0cF9jcmVhdGVQZXJtaXNzaW9uRXJyb3I7cmV0dXJue2Fzc2VydDpmdW5jdGlvbihmLGcsaCl7aWYoZyl7aWYoIWsoZykpdGhyb3cgZShmLHt9LCJVUkwgY29tcG9uZW50IG11c3QgYmUgYSBzdHJpbmcuIik7aWYoYyYmMD5jLmluZGV4T2YoZykpdGhyb3cgZShmLHt9LCJQcm9oaWJpdGVkIFVSTCBjb21wb25lbnQ6ICIrZyk7aWYoInF1ZXJ5Ij09PWcmJmQpe2lmKCFoKXRocm93IGUoZix7fSwiUHJvaGliaXRlZCBmcm9tIGdldHRpbmcgZW50aXJlIFVSTCBxdWVyeSB3aGVuIHF1ZXJ5IGtleXMgYXJlIHNwZWNpZmllZC4iKTtpZighayhoKSl0aHJvdyBlKGYse30sIlF1ZXJ5IGtleSBtdXN0IGJlIGEgc3RyaW5nLiIpO2lmKDA+ZC5pbmRleE9mKGgpKXRocm93IGUoZix7fSwiUHJvaGliaXRlZCBxdWVyeSBrZXk6ICIrCmgpO319ZWxzZSBpZihjKXRocm93IGUoZix7fSwiUHJvaGliaXRlZCBmcm9tIGdldHRpbmcgZW50aXJlIFVSTCB3aGVuIGNvbXBvbmVudHMgYXJlIHNwZWNpZmllZC4iKTt9LEs6YX19KX0oKTsKCgoKWi5zZWN1cml0eUdyb3Vwcy5nY3Q9WyJnb29nbGUiXSxmdW5jdGlvbigpe2Z1bmN0aW9uIGEoYil7Zm9yKHZhciBjPVtdLGQ9MDtkPGIubGVuZ3RoO2QrKyl0cnl7Yy5wdXNoKG5ldyBSZWdFeHAoYltkXSkpfWNhdGNoKGUpe31yZXR1cm4gY30oZnVuY3Rpb24oYil7Wi5fX2djdD1iO1ouX19nY3QubT0iZ2N0IjtaLl9fZ2N0LmlzVmVuZG9yVGVtcGxhdGU9ITA7Wi5fX2djdC5wcmlvcml0eU92ZXJyaWRlPTA7Wi5fX2djdC5pc0luZnJhc3RydWN0dXJlPSExO1ouX19nY3QucnVuSW5TaWxvZWRNb2RlPSEwfSkoZnVuY3Rpb24oYil7dmFyIGM9e30sZD1iLnZ0cF9zZXNzaW9uRHVyYXRpb247MDxkJiYoY1tOLmcua2RdPWQpO2NbTi5nLlJkXT1iLnZ0cF9ldmVudFNldHRpbmdzO2NbTi5nLnZnXT1iLnZ0cF9keW5hbWljRXZlbnRTZXR0aW5ncztjW04uZy5TYl09MT09PWIudnRwX2dvb2dsZVNpZ25hbHM7Y1tOLmcuSWddPWIudnRwX2ZvcmVpZ25UbGQ7Y1tOLmcuRmddPTE9PT1iLnZ0cF9yZXN0cmljdERvbWFpbjsKY1tOLmcueGZdPWIudnRwX2ludGVybmFsVHJhZmZpY1Jlc3VsdHM7dmFyIGU9Ti5nLkJhLGY9Yi52dHBfbGlua2VyO2YmJmZbTi5nLlhdJiYoZltOLmcuWF09YShmW04uZy5YXSkpO2NbZV09Zjt2YXIgZz1OLmcueWYsaD1iLnZ0cF9yZWZlcnJhbEV4Y2x1c2lvbkRlZmluaXRpb247aCYmaC5pbmNsdWRlX2NvbmRpdGlvbnMmJihoLmluY2x1ZGVfY29uZGl0aW9ucz1hKGguaW5jbHVkZV9jb25kaXRpb25zKSk7Y1tnXT1oO3ZhciBtPWNrKGIudnRwX3RyYWNraW5nSWQpO3FtKG0sYyk7bUgobSxiLnZ0cF9ndG1FdmVudElkKTtIKGIudnRwX2d0bU9uU3VjY2Vzcyl9KX0oKTsKCgpaLnNlY3VyaXR5R3JvdXBzLmdldD1bImdvb2dsZSJdLGZ1bmN0aW9uKCl7KGZ1bmN0aW9uKGEpe1ouX19nZXQ9YTtaLl9fZ2V0Lm09ImdldCI7Wi5fX2dldC5pc1ZlbmRvclRlbXBsYXRlPSEwO1ouX19nZXQucHJpb3JpdHlPdmVycmlkZT0wO1ouX19nZXQuaXNJbmZyYXN0cnVjdHVyZT0hMTtaLl9fZ2V0LnJ1bkluU2lsb2VkTW9kZT0hMX0pKGZ1bmN0aW9uKGEpe3ZhciBiPWEudnRwX3NldHRpbmdzLGM9Yi5ldmVudFBhcmFtZXRlcnN8fHt9LGQ9U3RyaW5nKGEudnRwX2V2ZW50TmFtZSksZT17fTtlLmV2ZW50SWQ9YS52dHBfZ3RtRXZlbnRJZDtlLnByaW9yaXR5SWQ9YS52dHBfZ3RtUHJpb3JpdHlJZDthLnZ0cF9kZWZlcnJhYmxlJiYoZS5kZWZlcnJhYmxlPSEwKTt2YXIgZj1seChTdHJpbmcoYi5zdHJlYW1JZCksZCxjKTtveChmLGUuZXZlbnRJZCxlKTthLnZ0cF9ndG1PblN1Y2Nlc3MoKX0pfSgpOwpaLnNlY3VyaXR5R3JvdXBzLmRldGVjdF9zY3JvbGxfZXZlbnRzPVsiZ29vZ2xlIl0sZnVuY3Rpb24oKXtmdW5jdGlvbiBhKCl7cmV0dXJue319KGZ1bmN0aW9uKGIpe1ouX19kZXRlY3Rfc2Nyb2xsX2V2ZW50cz1iO1ouX19kZXRlY3Rfc2Nyb2xsX2V2ZW50cy5tPSJkZXRlY3Rfc2Nyb2xsX2V2ZW50cyI7Wi5fX2RldGVjdF9zY3JvbGxfZXZlbnRzLmlzVmVuZG9yVGVtcGxhdGU9ITA7Wi5fX2RldGVjdF9zY3JvbGxfZXZlbnRzLnByaW9yaXR5T3ZlcnJpZGU9MDtaLl9fZGV0ZWN0X3Njcm9sbF9ldmVudHMuaXNJbmZyYXN0cnVjdHVyZT0hMTtaLl9fZGV0ZWN0X3Njcm9sbF9ldmVudHMucnVuSW5TaWxvZWRNb2RlPSExfSkoZnVuY3Rpb24oKXtyZXR1cm57YXNzZXJ0OmZ1bmN0aW9uKCl7fSxLOmF9fSl9KCk7CgoKCgpaLnNlY3VyaXR5R3JvdXBzLmRldGVjdF9mb3JtX2ludGVyYWN0aW9uX2V2ZW50cz1bImdvb2dsZSJdLGZ1bmN0aW9uKCl7ZnVuY3Rpb24gYSgpe3JldHVybnt9fShmdW5jdGlvbihiKXtaLl9fZGV0ZWN0X2Zvcm1faW50ZXJhY3Rpb25fZXZlbnRzPWI7Wi5fX2RldGVjdF9mb3JtX2ludGVyYWN0aW9uX2V2ZW50cy5tPSJkZXRlY3RfZm9ybV9pbnRlcmFjdGlvbl9ldmVudHMiO1ouX19kZXRlY3RfZm9ybV9pbnRlcmFjdGlvbl9ldmVudHMuaXNWZW5kb3JUZW1wbGF0ZT0hMDtaLl9fZGV0ZWN0X2Zvcm1faW50ZXJhY3Rpb25fZXZlbnRzLnByaW9yaXR5T3ZlcnJpZGU9MDtaLl9fZGV0ZWN0X2Zvcm1faW50ZXJhY3Rpb25fZXZlbnRzLmlzSW5mcmFzdHJ1Y3R1cmU9ITE7Wi5fX2RldGVjdF9mb3JtX2ludGVyYWN0aW9uX2V2ZW50cy5ydW5JblNpbG9lZE1vZGU9ITF9KShmdW5jdGlvbigpe3JldHVybnthc3NlcnQ6ZnVuY3Rpb24oKXt9LEs6YX19KX0oKTsKdmFyIGJLPXt9O2JLLmRhdGFMYXllcj1UaTtiSy5jYWxsYmFjaz1mdW5jdGlvbihhKXtIaS5oYXNPd25Qcm9wZXJ0eShhKSYmRWEoSGlbYV0pJiZIaVthXSgpO2RlbGV0ZSBIaVthXX07YksuYm9vdHN0cmFwPTA7YksuX3NweD0hMTsKZnVuY3Rpb24gY0soKXtzaVtXaigpXT1zaVtXaigpXXx8Yks7ZmsoKTtqaygpfHxsKGtrKCksZnVuY3Rpb24oZCxlKXtLdihkLGUudHJhbnNwb3J0VXJsLGUuY29udGV4dCk7TSg5Mil9KTtXYShJaSxaLnNlY3VyaXR5R3JvdXBzKTt2YXIgYT1ZaihaaigpKSxiLGM9bnVsbD09YT92b2lkIDA6bnVsbD09KGI9YS5jb250ZXh0KT92b2lkIDA6Yi5zb3VyY2U7MiE9PWMmJjQhPT1jJiYzIT09Y3x8TSgxNDIpO3ZmPU1mfQooZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYigpe209Qy5kb2N1bWVudEVsZW1lbnQuZ2V0QXR0cmlidXRlKCJkYXRhLXRhZy1hc3Npc3RhbnQtcHJlc2VudCIpO1N5KG0pJiYoaD1nLlZrKX1pZighelsiX19UQUdHWV9JTlNUQUxMRUQiXSl7dmFyIGM9ITE7aWYoQy5yZWZlcnJlcil7dmFyIGQ9dmooQy5yZWZlcnJlcik7Yz0iY2N0Lmdvb2dsZSI9PT1xaihkLCJob3N0Iil9aWYoIWMpe3ZhciBlPVFuKCJnb29nVGFnZ3lSZWZlcnJlciIpO2M9ZS5sZW5ndGgmJmVbMF0ubGVuZ3RofWMmJih6WyJfX1RBR0dZX0lOU1RBTExFRCJdPSEwLEljKCJodHRwczovL2NjdC5nb29nbGUvdGFnZ3kvYWdlbnQuanMiKSl9aWYoQ2kpYSgpO2Vsc2V7dmFyIGY9ZnVuY3Rpb24odSl7dmFyIHY9IkdUTSIsdz0iR1RNIjt5aT8odj0iT0dUIix3PSJHVEFHIik6Q2kmJih3PXY9Ik9QVCIpO3ZhciB4PXpbImdvb2dsZS50YWdtYW5hZ2VyLmRlYnVndWkyLnF1ZXVlIl07eHx8KHg9W10sCnpbImdvb2dsZS50YWdtYW5hZ2VyLmRlYnVndWkyLnF1ZXVlIl09eCxJYygiaHR0cHM6Ly8iK3JpLkJkKyIvZGVidWcvYm9vdHN0cmFwP2lkPSIrVmYuY3RpZCsiJnNyYz0iK3crIiZjb25kPSIrdSsiJmd0bT0iK01uKCkpKTt2YXIgeT17bWVzc2FnZVR5cGU6IkNPTlRBSU5FUl9TVEFSVElORyIsZGF0YTp7c2NyaXB0U291cmNlOkNjLGNvbnRhaW5lclByb2R1Y3Q6dixkZWJ1ZzohMSxpZDpWZi5jdGlkLHRhcmdldFJlZjp7Y3RpZDpWZi5jdGlkLGlzRGVzdGluYXRpb246T2oucWV9LGFsaWFzZXM6UWooKSxkZXN0aW5hdGlvbnM6VGooKX19O3kuZGF0YS5yZXN1bWU9ZnVuY3Rpb24oKXthKCl9O3JpLndrJiYoeS5kYXRhLmluaXRpYWxQdWJsaXNoPSEwKTt4LnB1c2goeSl9LGc9e1BuOjEsV2s6MixvbDozLHhrOjQsVms6NX0saD12b2lkIDAsbT12b2lkIDAsbj1yaih6LmxvY2F0aW9uLCJxdWVyeSIsITEsdm9pZCAwLCJndG1fZGVidWciKTtTeShuKSYmKGg9Zy5Xayk7aWYoIWgmJkMucmVmZXJyZXIpe3ZhciBwPXZqKEMucmVmZXJyZXIpOwoidGFnYXNzaXN0YW50Lmdvb2dsZS5jb20iPT09cWoocCwiaG9zdCIpJiYoaD1nLm9sKX1pZighaCl7dmFyIHE9UW4oIl9fVEFHX0FTU0lTVEFOVCIpO3EubGVuZ3RoJiZxWzBdLmxlbmd0aCYmKGg9Zy54ayl9aHx8YigpO2lmKCFoJiZUeShtKSl7dmFyIHI9ZnVuY3Rpb24oKXtpZih0KXJldHVybiEwO3Q9ITA7YigpO2gmJkNjP2YoaCk6YSgpfSx0PSExO01jKEMsIlRBRGVidWdTaWduYWwiLGZ1bmN0aW9uKCl7cigpfSwhMSk7ei5zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7cigpfSwyMDApfWVsc2UgaCYmQ2M/ZihoKTphKCl9fSkoZnVuY3Rpb24oKXt0cnl7ZGsoKTtpZihSKDYxKSl7fVBrKCkucygpO2duKCk7KFIoMjcpfHxSKDI4KXx8UigyOSkpJiYKemwoKTt2YXIgYT1YaigpO2lmKExqKCkuY2Fub25pY2FsW2FdKXt2YXIgYj1zaS56b25lcztiJiZiLnVucmVnaXN0ZXJDaGlsZChTaigpKTt1digpLnJlbW92ZUV4dGVybmFsUmVzdHJpY3Rpb25zKFhqKCkpO31lbHNle2F0KCk7TGkuaD0iIjtMaS5zPUxpLkY7TGkuQz0iIjsKTGkuRWE9ImFkX3N0b3JhZ2V8YW5hbHl0aWNzX3N0b3JhZ2V8YWRfdXNlcl9kYXRhfGFkX3BlcnNvbmFsaXphdGlvbiI7TGkuTT0iYWRfc3RvcmFnZXxhbmFseXRpY3Nfc3RvcmFnZXxhZF91c2VyX2RhdGF8YWRfcGVyc29uYWxpemF0aW9uIjtMaS5XPSJhZF9zdG9yYWdlfGFuYWx5dGljc19zdG9yYWdlfGFkX3VzZXJfZGF0YSI7SHYoKTtmb3IodmFyIGM9ZGF0YS5yZXNvdXJjZXx8e30sZD1jLm1hY3Jvc3x8W10sZT0wO2U8ZC5sZW5ndGg7ZSsrKWxmLnB1c2goZFtlXSk7Zm9yKHZhciBmPWMudGFnc3x8W10sZz0wO2c8Zi5sZW5ndGg7ZysrKW9mLnB1c2goZltnXSk7Zm9yKHZhciBoPWMucHJlZGljYXRlc3x8W10sbT0wO208aC5sZW5ndGg7bSsrKW5mLnB1c2goaFttXSk7Zm9yKHZhciBuPWMucnVsZXN8fFtdLHA9MDtwPG4ubGVuZ3RoO3ArKyl7Zm9yKHZhciBxPW5bcF0scj17fSx0PTA7dDwKcS5sZW5ndGg7dCsrKXt2YXIgdT1xW3RdWzBdO3JbdV09QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwocVt0XSwxKTsiaWYiIT09dSYmInVubGVzcyIhPT11fHx1ZihyW3VdKX1tZi5wdXNoKHIpfXFmPVo7cmY9SUE7T2Y9bmV3IFlmO3ZhciB2PWRhdGEuc2FuZGJveGVkX3NjcmlwdHMsdz1kYXRhLnNlY3VyaXR5X2dyb3VwczthOnt2YXIgeD1kYXRhLnJ1bnRpbWV8fFtdLHk9ZGF0YS5ydW50aW1lX2xpbmVzO1RBPW5ldyBJZTtCSSgpO2tmPVNBKCk7dmFyIEI9VEEsQT1BSSgpLEY9bmV3IGVkKCJyZXF1aXJlIixBKTtGLkpiKCk7Qi5oLmguc2V0KCJyZXF1aXJlIixGKTtmb3IodmFyIEc9W10sRD0wO0Q8eC5sZW5ndGg7RCsrKXt2YXIgRT14W0RdO2lmKCFIYShFKXx8Mz5FLmxlbmd0aCl7aWYoMD09PUUubGVuZ3RoKWNvbnRpbnVlO2JyZWFrIGF9eSYmeVtEXSYmeVtEXS5sZW5ndGgmJkZmKEUseVtEXSk7dHJ5e1RBLmV4ZWN1dGUoRSksUig3MCkmJnRrJiY1MD09PUVbMF0mJkcucHVzaChFWzFdKX1jYXRjaChtYil7fX1SKDcwKSYmCih3Zj1HKX1pZih2b2lkIDAhPT12KWZvcih2YXIgTz1bInNhbmRib3hlZFNjcmlwdHMiXSxQPTA7UDx2Lmxlbmd0aDtQKyspe3ZhciBUPXZbUF0ucmVwbGFjZSgvXl8qLywiIik7SWlbVF09T31DSSh3KTtjSygpO2lmKCFDaSlmb3IodmFyIFk9aWooKT9SKDQzKT9OaShMaS5XKTpOaShMaS5NKTpOaShMaS5FYSksUz0wO1M8bWwubGVuZ3RoO1MrKyl7dmFyIFU9bWxbU10samE9VSxoYT1ZW1VdPyJncmFudGVkIjoiZGVuaWVkIjtWaygpLmltcGxpY2l0KGphLGhhKX1SeSgpO0x2PSExO012PTA7aWYoImludGVyYWN0aXZlIj09Qy5yZWFkeVN0YXRlJiYhQy5jcmVhdGVFdmVudE9iamVjdHx8ImNvbXBsZXRlIj09Qy5yZWFkeVN0YXRlKU92KCk7ZWxzZXtNYyhDLCJET01Db250ZW50TG9hZGVkIixPdik7TWMoQywicmVhZHlzdGF0ZWNoYW5nZSIsT3YpO2lmKEMuY3JlYXRlRXZlbnRPYmplY3QmJkMuZG9jdW1lbnRFbGVtZW50LmRvU2Nyb2xsKXt2YXIgY2E9ITA7dHJ5e2NhPSF6LmZyYW1lRWxlbWVudH1jYXRjaChtYil7fWNhJiYKUHYoKX1NYyh6LCJsb2FkIixPdil9Znk9ITE7ImNvbXBsZXRlIj09PUMucmVhZHlTdGF0ZT9oeSgpOk1jKHosImxvYWQiLGh5KTt0ayYmKG9rKEhrKSx6LnNldEludGVydmFsKEdrLDg2NEU1KSk7b2soS0EpO29rKHB3KTtvayhldSk7b2soam0pO29rKEF3KTtvayhKbCk7b2soUHMpO29rKEhsKTtSKDcwKSYmKG9rKHV3KSxvayh2dyksb2sod3cpKTt0ayYmUig1OCkmJihvayhMQSksb2soTkEpKTtQQSgpO1IoNzEpJiZvayhMayk7bnooKTtkaigxKTt6eCgpO0dpPVRhKCk7YksuYm9vdHN0cmFwPUdpO2lmKFIoNjEpKXt9fX1jYXRjaChtYil7aWYoZGooNCksCnRrKXt2YXIgUGE9QmsoITAsITApO0xjKFBhKX19fSk7Cgp9KSgpCgo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <HTTPPropertySet>
          <HTTPProperty name="StreamID">1</HTTPProperty>
          <HTTPProperty name="TotalHeadersSize">319</HTTPProperty>
        </HTTPPropertySet>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="4" hostname="www.advantageonlineshopping.com" path="/css/images/Down_arrow.svg" url="https://www.advantageonlineshopping.com/css/images/Down_arrow.svg" ip="54.227.55.203" port="443" client_ip="192.168.1.36" client_port="7777" connectionId="2084" origin="HTML" encodingType="ANSI" ordinal="3" startDateTime="2024-03-10T01:41:11.527+03:00" startTime="705" endTime="968" blockedTime="-1" dnsTime="-1" connectTime="-2" sendTime="4294967295" waitTime="4294967295" receiveTime="968" sslNegotiateTime="-1" responseBodySize="1033">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name=":method" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VU</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name=":scheme" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cHM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name=":path" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>L2Nzcy9pbWFnZXMvRG93bl9hcnJvdy5zdmc=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name=":authority" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>d3d3LmFkdmFudGFnZW9ubGluZXNob3BwaW5nLmNvbQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cHM6Ly93d3cuYWR2YW50YWdlb25saW5lc2hvcHBpbmcuY29tLw==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Sec-Fetch-User" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>PzE=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Upgrade-Insecure-Requests" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Sec-Fetch-Dest" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZG9jdW1lbnQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Sec-Fetch-Mode" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bmF2aWdhdGU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Sec-Fetch-Site" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bm9uZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="DNT" index="10">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="11">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgMTAuMDsgV2luZG93cyBOVCA2LjE7IFRyaWRlbnQvNi4wKQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="12">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="13">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Om1ldGhvZDogR0VUDQo6c2NoZW1lOiBodHRwcw0KOnBhdGg6IC9jc3MvaW1hZ2VzL0Rvd25fYXJyb3cuc3ZnDQo6YXV0aG9yaXR5OiB3d3cuYWR2YW50YWdlb25saW5lc2hvcHBpbmcuY29tDQpSZWZlcmVyOiBodHRwczovL3d3dy5hZHZhbnRhZ2VvbmxpbmVzaG9wcGluZy5jb20vDQpTZWMtRmV0Y2gtVXNlcjogPzENClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClNlYy1GZXRjaC1EZXN0OiBkb2N1bWVudA0KU2VjLUZldGNoLU1vZGU6IG5hdmlnYXRlDQpTZWMtRmV0Y2gtU2l0ZTogbm9uZQ0KRE5UOiAxDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoY29tcGF0aWJsZTsgTVNJRSAxMC4wOyBXaW5kb3dzIE5UIDYuMTsgVHJpZGVudC82LjApDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPPropertySet>
          <HTTPProperty name="StreamID">5</HTTPProperty>
          <HTTPProperty name="TotalHeadersSize">39</HTTPProperty>
        </HTTPPropertySet>
      </HTTPRequest>
      <HTTPResponse>
        <contentLenght>795</contentLenght>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Status" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MjAw</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="server" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bmdpbngvMS4xOC4wIChVYnVudHUp</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="date" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U2F0LCAwOSBNYXIgMjAyNCAyMjo0MToxMiBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="content-type" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aW1hZ2Uvc3ZnK3htbA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="content-length" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Nzk1</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="accept-ranges" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ynl0ZXM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="etag" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Vy8iNzk1LTE3MDc5MDI3NTIwMDAi</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="last-modified" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>V2VkLCAxNCBGZWIgMjAyNCAwOToyNTo1MiBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="cache-control" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bWF4LWFnZT04NjQwMDA=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="expires" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VHVlLCAxOSBNYXIgMjAyNCAyMjo0MToxMiBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="strict-transport-security" index="10">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bWF4LWFnZT0zMTUzNjAwMDsgaW5jbHVkZVN1YkRvbWFpbnM7IHByZWxvYWQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8yLjAgMjAwDQpTdGF0dXM6IDIwMA0Kc2VydmVyOiBuZ2lueC8xLjE4LjAgKFVidW50dSkNCmRhdGU6IFNhdCwgMDkgTWFyIDIwMjQgMjI6NDE6MTIgR01UDQpjb250ZW50LXR5cGU6IGltYWdlL3N2Zyt4bWwNCmNvbnRlbnQtbGVuZ3RoOiA3OTUNCmFjY2VwdC1yYW5nZXM6IGJ5dGVzDQpldGFnOiBXLyI3OTUtMTcwNzkwMjc1MjAwMCINCmxhc3QtbW9kaWZpZWQ6IFdlZCwgMTQgRmViIDIwMjQgMDk6MjU6NTIgR01UDQpjYWNoZS1jb250cm9sOiBtYXgtYWdlPTg2NDAwMA0KZXhwaXJlczogVHVlLCAxOSBNYXIgMjAyNCAyMjo0MToxMiBHTVQNCnN0cmljdC10cmFuc3BvcnQtc2VjdXJpdHk6IG1heC1hZ2U9MzE1MzYwMDA7IGluY2x1ZGVTdWJEb21haW5zOyBwcmVsb2FkDQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHN2ZyB3aWR0aD0iMTJweCIgaGVpZ2h0PSI3cHgiIHZpZXdCb3g9IjAgMCAxMiA3IiB2ZXJzaW9uPSIxLjEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiPgogICAgPCEtLSBHZW5lcmF0b3I6IFNrZXRjaCA0Ny4xICg0NTQyMikgLSBodHRwOi8vd3d3LmJvaGVtaWFuY29kaW5nLmNvbS9za2V0Y2ggLS0+CiAgICA8dGl0bGU+RG93bl9hcnJvdzwvdGl0bGU+CiAgICA8ZGVzYz5DcmVhdGVkIHdpdGggU2tldGNoLjwvZGVzYz4KICAgIDxkZWZzPjwvZGVmcz4KICAgIDxnIGlkPSJTeW1ib2xzIiBzdHJva2U9Im5vbmUiIHN0cm9rZS13aWR0aD0iMSIgZmlsbD0ibm9uZSIgZmlsbC1ydWxlPSJldmVub2RkIj4KICAgICAgICA8ZyBpZD0iaWMva2V5Ym9hcmRfYXJyb3dfZG93bi9ncmV5NjAwIiB0cmFuc2Zvcm09InRyYW5zbGF0ZSgtNi4wMDAwMDAsIC05LjAwMDAwMCkiIGZpbGwtcnVsZT0ibm9uemVybyIgZmlsbD0iIzMxMzEzMSI+CiAgICAgICAgICAgIDxnIGlkPSJEb3duX2Fycm93IiB0cmFuc2Zvcm09InRyYW5zbGF0ZSg2LjAwMDAwMCwgOS4wMDAwMDApIj4KICAgICAgICAgICAgICAgIDxwb2x5Z29uIGlkPSJTaGFwZSIgcG9pbnRzPSIxLjQxIDAgNiA0LjMyNjU4NTcgMTAuNTkgMCAxMiAxLjMzMTk4MzgxIDYgNyAwIDEuMzMxOTgzODEiPjwvcG9seWdvbj4KICAgICAgICAgICAgPC9nPgogICAgICAgIDwvZz4KICAgIDwvZz4KPC9zdmc+</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <HTTPPropertySet>
          <HTTPProperty name="StreamID">5</HTTPProperty>
          <HTTPProperty name="TotalHeadersSize">238</HTTPProperty>
        </HTTPPropertySet>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="5" hostname="www.advantageonlineshopping.com" path="/vendor/requirejs/require.js" url="https://www.advantageonlineshopping.com/vendor/requirejs/require.js" ip="54.227.55.203" port="443" client_ip="192.168.1.36" client_port="7777" connectionId="2084" origin="HTML" encodingType="ANSI" ordinal="4" startDateTime="2024-03-10T01:41:11.527+03:00" startTime="705" endTime="1107" blockedTime="-1" dnsTime="-1" connectTime="-2" sendTime="4294967295" waitTime="4294967295" receiveTime="136" sslNegotiateTime="-1" responseBodySize="21268">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name=":method" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VU</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name=":scheme" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cHM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name=":path" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>L3ZlbmRvci9yZXF1aXJlanMvcmVxdWlyZS5qcw==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name=":authority" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>d3d3LmFkdmFudGFnZW9ubGluZXNob3BwaW5nLmNvbQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cHM6Ly93d3cuYWR2YW50YWdlb25saW5lc2hvcHBpbmcuY29tLw==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Sec-Fetch-User" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>PzE=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Upgrade-Insecure-Requests" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Sec-Fetch-Dest" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZG9jdW1lbnQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Sec-Fetch-Mode" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bmF2aWdhdGU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Sec-Fetch-Site" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bm9uZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="DNT" index="10">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="11">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgMTAuMDsgV2luZG93cyBOVCA2LjE7IFRyaWRlbnQvNi4wKQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="12">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="13">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Om1ldGhvZDogR0VUDQo6c2NoZW1lOiBodHRwcw0KOnBhdGg6IC92ZW5kb3IvcmVxdWlyZWpzL3JlcXVpcmUuanMNCjphdXRob3JpdHk6IHd3dy5hZHZhbnRhZ2VvbmxpbmVzaG9wcGluZy5jb20NClJlZmVyZXI6IGh0dHBzOi8vd3d3LmFkdmFudGFnZW9ubGluZXNob3BwaW5nLmNvbS8NClNlYy1GZXRjaC1Vc2VyOiA/MQ0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUZldGNoLURlc3Q6IGRvY3VtZW50DQpTZWMtRmV0Y2gtTW9kZTogbmF2aWdhdGUNClNlYy1GZXRjaC1TaXRlOiBub25lDQpETlQ6IDENClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBNU0lFIDEwLjA7IFdpbmRvd3MgTlQgNi4xOyBUcmlkZW50LzYuMCkNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPPropertySet>
          <HTTPProperty name="StreamID">7</HTTPProperty>
          <HTTPProperty name="TotalHeadersSize">41</HTTPProperty>
        </HTTPPropertySet>
      </HTTPRequest>
      <HTTPResponse>
        <contentLenght>0</contentLenght>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Status" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MjAw</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="server" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bmdpbngvMS4xOC4wIChVYnVudHUp</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="date" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U2F0LCAwOSBNYXIgMjAyNCAyMjo0MToxMiBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="content-type" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24vamF2YXNjcmlwdA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="accept-ranges" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ynl0ZXM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="etag" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Vy8iODU5MjEtMTY3NTc2OTY0NDAwMCI=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="last-modified" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VHVlLCAwNyBGZWIgMjAyMyAxMTozNDowNCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="cache-control" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bWF4LWFnZT02MDA=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="expires" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U2F0LCAwOSBNYXIgMjAyNCAyMjo1MToxMiBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="vary" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YWNjZXB0LWVuY29kaW5n</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="content-encoding" index="10">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="strict-transport-security" index="11">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bWF4LWFnZT0zMTUzNjAwMDsgaW5jbHVkZVN1YkRvbWFpbnM7IHByZWxvYWQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8yLjAgMjAwDQpTdGF0dXM6IDIwMA0Kc2VydmVyOiBuZ2lueC8xLjE4LjAgKFVidW50dSkNCmRhdGU6IFNhdCwgMDkgTWFyIDIwMjQgMjI6NDE6MTIgR01UDQpjb250ZW50LXR5cGU6IGFwcGxpY2F0aW9uL2phdmFzY3JpcHQNCmFjY2VwdC1yYW5nZXM6IGJ5dGVzDQpldGFnOiBXLyI4NTkyMS0xNjc1NzY5NjQ0MDAwIg0KbGFzdC1tb2RpZmllZDogVHVlLCAwNyBGZWIgMjAyMyAxMTozNDowNCBHTVQNCmNhY2hlLWNvbnRyb2w6IG1heC1hZ2U9NjAwDQpleHBpcmVzOiBTYXQsIDA5IE1hciAyMDI0IDIyOjUxOjEyIEdNVA0KdmFyeTogYWNjZXB0LWVuY29kaW5nDQpjb250ZW50LWVuY29kaW5nOiBnemlwDQpzdHJpY3QtdHJhbnNwb3J0LXNlY3VyaXR5OiBtYXgtYWdlPTMxNTM2MDAwOyBpbmNsdWRlU3ViRG9tYWluczsgcHJlbG9hZA0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData></ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <HTTPPropertySet>
          <HTTPProperty name="StreamID">7</HTTPProperty>
          <HTTPProperty name="TotalHeadersSize">273</HTTPProperty>
        </HTTPPropertySet>
      </HTTPResponse>
    </HTTPTask>
  </HTTPTask>
</HTTPSnapshot>